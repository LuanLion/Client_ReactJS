[{"/home/dell/Documents/ReactJS/src/index.js":"1","/home/dell/Documents/ReactJS/src/serviceWorker.js":"2","/home/dell/Documents/ReactJS/src/redux.js":"3","/home/dell/Documents/ReactJS/src/containers/App.js":"4","/home/dell/Documents/ReactJS/src/hoc/IntlProviderWrapper.js":"5","/home/dell/Documents/ReactJS/src/hoc/authentication.js":"6","/home/dell/Documents/ReactJS/src/routes/Home.js":"7","/home/dell/Documents/ReactJS/src/routes/Login.js":"8","/home/dell/Documents/ReactJS/src/routes/System.js":"9","/home/dell/Documents/ReactJS/src/containers/Header/Header.js":"10","/home/dell/Documents/ReactJS/src/components/CustomToast.js":"11","/home/dell/Documents/ReactJS/src/components/ConfirmModal.js":"12","/home/dell/Documents/ReactJS/src/store/actions/actionTypes.js":"13","/home/dell/Documents/ReactJS/src/store/reducers/rootReducer.js":"14","/home/dell/Documents/ReactJS/src/utils/index.js":"15","/home/dell/Documents/ReactJS/src/containers/Header/menuApp.js":"16","/home/dell/Documents/ReactJS/src/components/CustomScrollbars.js":"17","/home/dell/Documents/ReactJS/src/store/reducers/appReducer.js":"18","/home/dell/Documents/ReactJS/src/store/reducers/userReducer.js":"19","/home/dell/Documents/ReactJS/src/components/Navigator.js":"20","/home/dell/Documents/ReactJS/src/services/adminService.js":"21","/home/dell/Documents/ReactJS/src/containers/System/UserManage.js":"22","/home/dell/Documents/ReactJS/src/containers/System/ProductManage.js":"23","/home/dell/Documents/ReactJS/src/containers/System/RegisterPackageGroupOrAcc.js":"24","/home/dell/Documents/ReactJS/src/store/actions/index.js":"25","/home/dell/Documents/ReactJS/src/utils/constant.js":"26","/home/dell/Documents/ReactJS/src/utils/CommonUtils.js":"27","/home/dell/Documents/ReactJS/src/utils/LanguageUtils.js":"28","/home/dell/Documents/ReactJS/src/utils/ToastUtil.js":"29","/home/dell/Documents/ReactJS/src/utils/KeyCodeUtils.js":"30","/home/dell/Documents/ReactJS/src/axios.js":"31","/home/dell/Documents/ReactJS/src/store/actions/appActions.js":"32","/home/dell/Documents/ReactJS/src/store/actions/userActions.js":"33","/home/dell/Documents/ReactJS/src/config.js":"34","/home/dell/Documents/ReactJS/src/containers/LAR/Login.js":"35","/home/dell/Documents/ReactJS/src/services/index.js":"36","/home/dell/Documents/ReactJS/src/services/userService.js":"37","/home/dell/Documents/CLientReactJS/src/index.js":"38","/home/dell/Documents/CLientReactJS/src/serviceWorker.js":"39","/home/dell/Documents/CLientReactJS/src/redux.js":"40","/home/dell/Documents/CLientReactJS/src/containers/App.js":"41","/home/dell/Documents/CLientReactJS/src/hoc/IntlProviderWrapper.js":"42","/home/dell/Documents/CLientReactJS/src/hoc/authentication.js":"43","/home/dell/Documents/CLientReactJS/src/containers/LAR/Login.js":"44","/home/dell/Documents/CLientReactJS/src/routes/Home.js":"45","/home/dell/Documents/CLientReactJS/src/routes/System.js":"46","/home/dell/Documents/CLientReactJS/src/components/ConfirmModal.js":"47","/home/dell/Documents/CLientReactJS/src/components/CustomToast.js":"48","/home/dell/Documents/CLientReactJS/src/store/actions/actionTypes.js":"49","/home/dell/Documents/CLientReactJS/src/store/reducers/rootReducer.js":"50","/home/dell/Documents/CLientReactJS/src/utils/index.js":"51","/home/dell/Documents/CLientReactJS/src/components/CustomScrollbars.js":"52","/home/dell/Documents/CLientReactJS/src/store/reducers/appReducer.js":"53","/home/dell/Documents/CLientReactJS/src/store/reducers/userReducer.js":"54","/home/dell/Documents/CLientReactJS/src/components/Navigator.js":"55","/home/dell/Documents/CLientReactJS/src/services/userService.js":"56","/home/dell/Documents/CLientReactJS/src/containers/System/ProductManage.js":"57","/home/dell/Documents/CLientReactJS/src/containers/System/RegisterPackageGroupOrAcc.js":"58","/home/dell/Documents/CLientReactJS/src/store/actions/index.js":"59","/home/dell/Documents/CLientReactJS/src/utils/constant.js":"60","/home/dell/Documents/CLientReactJS/src/utils/KeyCodeUtils.js":"61","/home/dell/Documents/CLientReactJS/src/utils/ToastUtil.js":"62","/home/dell/Documents/CLientReactJS/src/utils/CommonUtils.js":"63","/home/dell/Documents/CLientReactJS/src/utils/LanguageUtils.js":"64","/home/dell/Documents/CLientReactJS/src/axios.js":"65","/home/dell/Documents/CLientReactJS/src/store/actions/appActions.js":"66","/home/dell/Documents/CLientReactJS/src/store/actions/userActions.js":"67","/home/dell/Documents/CLientReactJS/src/containers/Homepage/HomePage.js":"68","/home/dell/Documents/CLientReactJS/src/containers/Homepage/Home_header.js":"69","/home/dell/Documents/CLientReactJS/src/containers/Homepage/Center/CenterFind.js":"70","/home/dell/Documents/CLientReactJS/src/containers/Homepage/Center/CenterSession.js":"71","/home/dell/Documents/CLientReactJS/src/store/actions/adminAction.js":"72","/home/dell/Documents/CLientReactJS/src/store/reducers/adminReducer.js":"73","/home/dell/Documents/CLientReactJS/src/containers/System/API/API_UserManager.js":"74","/home/dell/Documents/CLientReactJS/src/containers/System/Reducer/UserRedux.js":"75","/home/dell/Documents/CLientReactJS/src/containers/System/API/API_UserModel.js":"76","/home/dell/Documents/CLientReactJS/src/containers/System/API/API_UserModelUpdate.js":"77","/home/dell/Documents/CLientReactJS/src/containers/System/Reducer/UserReduxTable.js":"78","/home/dell/Documents/CLientReactJS/src/containers/System/Header/Header.js":"79","/home/dell/Documents/CLientReactJS/src/containers/System/Header/menuApp.js":"80","/home/dell/Documents/CLientReactJS/src/containers/Homepage/Center/DoctorModel.js":"81","/home/dell/Documents/CLientReactJS/src/containers/System/Doctor/DoctorManage.js":"82","/home/dell/Documents/CLientReactJS/src/services/index.js":"83","/home/dell/Documents/CLientReactJS/src/services/doctorService.js":"84","/home/dell/Documents/CLientReactJS/src/containers/System/Doctor/Medical.js":"85","/home/dell/Documents/CLientReactJS/src/components/Input/DatePicker.js":"86","/home/dell/Documents/CLientReactJS/src/containers/Homepage/Center/DoctorDetail.js":"87","/home/dell/Documents/CLientReactJS/src/containers/Homepage/Center/BookingDoctor.js":"88"},{"size":897,"mtime":1631802070561,"results":"89","hashOfConfig":"90"},{"size":4951,"mtime":1631802070561,"results":"91","hashOfConfig":"90"},{"size":1431,"mtime":1631802070561,"results":"92","hashOfConfig":"90"},{"size":2637,"mtime":1632470763941,"results":"93","hashOfConfig":"90"},{"size":1057,"mtime":1631802070561,"results":"94","hashOfConfig":"90"},{"size":767,"mtime":1632470764041,"results":"95","hashOfConfig":"90"},{"size":558,"mtime":1632470764049,"results":"96","hashOfConfig":"90"},{"size":5579,"mtime":1631802070561,"results":"97","hashOfConfig":"90"},{"size":1313,"mtime":1631802070561,"results":"98","hashOfConfig":"90"},{"size":1000,"mtime":1632470764053,"results":"99","hashOfConfig":"90"},{"size":2225,"mtime":1631802070557,"results":"100","hashOfConfig":"90"},{"size":3748,"mtime":1631802070557,"results":"101","hashOfConfig":"90"},{"size":358,"mtime":1632469683394,"results":"102","hashOfConfig":"90"},{"size":932,"mtime":1632470576134,"results":"103","hashOfConfig":"90"},{"size":245,"mtime":1631802070561,"results":"104","hashOfConfig":"90"},{"size":721,"mtime":1631802070561,"results":"105","hashOfConfig":"90"},{"size":3067,"mtime":1631802070557,"results":"106","hashOfConfig":"90"},{"size":929,"mtime":1631802070561,"results":"107","hashOfConfig":"90"},{"size":670,"mtime":1632470134800,"results":"108","hashOfConfig":"90"},{"size":9080,"mtime":1631802070557,"results":"109","hashOfConfig":"90"},{"size":343,"mtime":1631802070561,"results":"110","hashOfConfig":"90"},{"size":2120,"mtime":1632821356062,"results":"111","hashOfConfig":"90"},{"size":541,"mtime":1631802070561,"results":"112","hashOfConfig":"90"},{"size":605,"mtime":1631802070561,"results":"113","hashOfConfig":"90"},{"size":61,"mtime":1632469723538,"results":"114","hashOfConfig":"90"},{"size":375,"mtime":1631802070561,"results":"115","hashOfConfig":"90"},{"size":149,"mtime":1631802070561,"results":"116","hashOfConfig":"90"},{"size":927,"mtime":1631802070561,"results":"117","hashOfConfig":"90"},{"size":2910,"mtime":1631802070561,"results":"118","hashOfConfig":"90"},{"size":651,"mtime":1631802070561,"results":"119","hashOfConfig":"90"},{"size":2433,"mtime":1632469625849,"results":"120","hashOfConfig":"90"},{"size":305,"mtime":1632469728499,"results":"121","hashOfConfig":"90"},{"size":396,"mtime":1632470192487,"results":"122","hashOfConfig":"90"},{"size":432,"mtime":1631802070557,"results":"123","hashOfConfig":"90"},{"size":4008,"mtime":1632814889884,"results":"124","hashOfConfig":"90"},{"size":117,"mtime":1632270745855,"results":"125","hashOfConfig":"90"},{"size":383,"mtime":1632818712071,"results":"126","hashOfConfig":"90"},{"size":924,"mtime":1634023345921,"results":"127","hashOfConfig":"128"},{"size":4951,"mtime":1631802070561,"results":"129","hashOfConfig":"128"},{"size":1431,"mtime":1631802070561,"results":"130","hashOfConfig":"128"},{"size":3046,"mtime":1638158528362,"results":"131","hashOfConfig":"128"},{"size":1057,"mtime":1631802070561,"results":"132","hashOfConfig":"128"},{"size":767,"mtime":1632470764041,"results":"133","hashOfConfig":"128"},{"size":4253,"mtime":1636876928595,"results":"134","hashOfConfig":"128"},{"size":557,"mtime":1636865669114,"results":"135","hashOfConfig":"128"},{"size":2532,"mtime":1636871117038,"results":"136","hashOfConfig":"128"},{"size":3748,"mtime":1631802070557,"results":"137","hashOfConfig":"128"},{"size":2225,"mtime":1631802070557,"results":"138","hashOfConfig":"128"},{"size":3227,"mtime":1637466921723,"results":"139","hashOfConfig":"128"},{"size":1129,"mtime":1635142584359,"results":"140","hashOfConfig":"128"},{"size":245,"mtime":1631802070561,"results":"141","hashOfConfig":"128"},{"size":3067,"mtime":1631802070557,"results":"142","hashOfConfig":"128"},{"size":1075,"mtime":1634463219509,"results":"143","hashOfConfig":"128"},{"size":670,"mtime":1634463277913,"results":"144","hashOfConfig":"128"},{"size":8600,"mtime":1636807708008,"results":"145","hashOfConfig":"128"},{"size":1119,"mtime":1637061265868,"results":"146","hashOfConfig":"128"},{"size":2950,"mtime":1637850378731,"results":"147","hashOfConfig":"128"},{"size":605,"mtime":1631802070561,"results":"148","hashOfConfig":"128"},{"size":92,"mtime":1634463272976,"results":"149","hashOfConfig":"128"},{"size":421,"mtime":1638158313787,"results":"150","hashOfConfig":"128"},{"size":651,"mtime":1631802070561,"results":"151","hashOfConfig":"128"},{"size":2910,"mtime":1631802070561,"results":"152","hashOfConfig":"128"},{"size":149,"mtime":1631802070561,"results":"153","hashOfConfig":"128"},{"size":927,"mtime":1631802070561,"results":"154","hashOfConfig":"128"},{"size":2433,"mtime":1632469625849,"results":"155","hashOfConfig":"128"},{"size":417,"mtime":1634463224062,"results":"156","hashOfConfig":"128"},{"size":396,"mtime":1634463221729,"results":"157","hashOfConfig":"128"},{"size":745,"mtime":1634286180127,"results":"158","hashOfConfig":"128"},{"size":3215,"mtime":1638179989643,"results":"159","hashOfConfig":"128"},{"size":3633,"mtime":1635471141903,"results":"160","hashOfConfig":"128"},{"size":4218,"mtime":1638167515323,"results":"161","hashOfConfig":"128"},{"size":11940,"mtime":1637921380001,"results":"162","hashOfConfig":"128"},{"size":8090,"mtime":1637467727533,"results":"163","hashOfConfig":"128"},{"size":5608,"mtime":1636788164425,"results":"164","hashOfConfig":"128"},{"size":16391,"mtime":1636809801538,"results":"165","hashOfConfig":"128"},{"size":7373,"mtime":1636788262480,"results":"166","hashOfConfig":"128"},{"size":8308,"mtime":1636096887552,"results":"167","hashOfConfig":"128"},{"size":3996,"mtime":1637854679688,"results":"168","hashOfConfig":"128"},{"size":2244,"mtime":1636894372782,"results":"169","hashOfConfig":"128"},{"size":1475,"mtime":1636871534779,"results":"170","hashOfConfig":"128"},{"size":9404,"mtime":1638157932766,"results":"171","hashOfConfig":"128"},{"size":12964,"mtime":1638074051789,"results":"172","hashOfConfig":"128"},{"size":117,"mtime":1635137274877,"results":"173","hashOfConfig":"128"},{"size":885,"mtime":1637376402189,"results":"174","hashOfConfig":"128"},{"size":4376,"mtime":1637904203772,"results":"175","hashOfConfig":"128"},{"size":5785,"mtime":1631802070557,"results":"176","hashOfConfig":"128"},{"size":4248,"mtime":1638073964146,"results":"177","hashOfConfig":"128"},{"size":5056,"mtime":1638179470474,"results":"178","hashOfConfig":"128"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},"5xcqy5",{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"197"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"181"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"226"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"181"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"181"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"181"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"226"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},"n93ohy",{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"265"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"265"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"265"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"265"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"265"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"265"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"313"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"265"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"265"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"337","messages":"338","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"265"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"265"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"265"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"265"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"265"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"265"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"265"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"265"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"265"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"265"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},"/home/dell/Documents/ReactJS/src/index.js",[],["385","386"],"/home/dell/Documents/ReactJS/src/serviceWorker.js",[],"/home/dell/Documents/ReactJS/src/redux.js",[],"/home/dell/Documents/ReactJS/src/containers/App.js",[],"/home/dell/Documents/ReactJS/src/hoc/IntlProviderWrapper.js",[],"/home/dell/Documents/ReactJS/src/hoc/authentication.js",[],"/home/dell/Documents/ReactJS/src/routes/Home.js",[],"/home/dell/Documents/ReactJS/src/routes/Login.js",["387","388","389"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { push } from \"connected-react-router\";\n\nimport * as actions from \"../store/actions\";\nimport { KeyCodeUtils, LanguageUtils } from \"../utils\";\n\nimport userIcon from '../../src/assets/images/user.svg';\nimport passIcon from '../../src/assets/images/pass.svg';\nimport './Login.scss';\nimport { FormattedMessage } from 'react-intl';\n\nimport adminService from '../services/adminService';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.btnLogin = React.createRef();\n    }\n\n    initialState = {\n        username: '',\n        password: '',\n        loginError: ''\n    }\n\n    state = {\n        ...this.initialState\n    };\n\n    refresh = () => {\n        this.setState({\n            ...this.initialState\n        })\n    }\n\n    onUsernameChange = (e) => {\n        this.setState({ username: e.target.value })\n    }\n\n    onPasswordChange = (e) => {\n        this.setState({ password: e.target.value })\n    }\n\n    redirectToSystemPage = () => {\n        const { navigate } = this.props;\n        const redirectPath = '/system/user-manage';\n        navigate(`${redirectPath}`);\n    }\n\n    processLogin = () => {\n        const { username, password } = this.state;\n\n        const { adminLoginSuccess, adminLoginFail } = this.props;\n        let loginBody = {\n            username: 'admin',\n            password: '123456'\n        }\n        //sucess\n        let adminInfo = {\n            \"tlid\": \"0\",\n            \"tlfullname\": \"Administrator\",\n            \"custype\": \"A\",\n            \"accessToken\": \"eyJhbGciOiJIU\"\n        }\n\n        adminLoginSuccess(adminInfo);\n        this.refresh();\n        this.redirectToSystemPage();\n        try {\n            adminService.login(loginBody)\n        } catch (e) {\n            console.log('error login : ', e)\n        }\n\n    }\n\n    handlerKeyDown = (event) => {\n        const keyCode = event.which || event.keyCode;\n        if (keyCode === KeyCodeUtils.ENTER) {\n            event.preventDefault();\n            if (!this.btnLogin.current || this.btnLogin.current.disabled) return;\n            this.btnLogin.current.click();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.handlerKeyDown);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.handlerKeyDown);\n        // fix Warning: Can't perform a React state update on an unmounted component\n        this.setState = (state, callback) => {\n            return;\n        };\n    }\n\n    render() {\n        const { username, password, loginError } = this.state;\n        const { lang } = this.props;\n\n        return (\n            <div className=\"login-wrapper\">\n                <div className=\"login-container\">\n                    <div className=\"form_login\">\n                        <h2 className=\"title\">\n                            <FormattedMessage id=\"login.login\" />\n                        </h2>\n                        <div className=\"form-group icon-true\">\n                            <img className=\"icon\" src={userIcon} alt=\"this\" />\n                            <input\n                                placeholder={LanguageUtils.getMessageByKey(\"login.username\", lang)}\n                                id=\"username\"\n                                name=\"username\"\n                                type=\"text\"\n                                className=\"form-control\"\n                                value={username}\n                                onChange={this.onUsernameChange}\n                            />\n                        </div>\n\n                        <div id=\"phone-input-container\" className=\"form-group icon-true\">\n                            <img className=\"icon\" src={passIcon} alt=\"this\" />\n                            <input\n                                placeholder={LanguageUtils.getMessageByKey(\"login.password\", lang)}\n                                id=\"password\"\n                                name=\"password\"\n                                type=\"password\"\n                                className=\"form-control\"\n                                value={password}\n                                onChange={this.onPasswordChange}\n                            />\n                        </div>\n\n                        {loginError !== '' && (\n                            <div className='login-error'>\n                                <span className='login-error-message'>{loginError}</span>\n                            </div>\n                        )}\n\n                        <div className=\"form-group login\">\n                            <input\n                                ref={this.btnLogin}\n                                id=\"btnLogin\"\n                                type=\"submit\"\n                                className=\"btn\"\n                                value={LanguageUtils.getMessageByKey(\"login.login\", lang)}\n                                onClick={this.processLogin}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        lang: state.app.language\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        navigate: (path) => dispatch(push(path)),\n        adminLoginSuccess: (adminInfo) => dispatch(actions.adminLoginSuccess(adminInfo)),\n        adminLoginFail: () => dispatch(actions.adminLoginFail()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n",["390","391"],"/home/dell/Documents/ReactJS/src/routes/System.js",[],"/home/dell/Documents/ReactJS/src/containers/Header/Header.js",[],"/home/dell/Documents/ReactJS/src/components/CustomToast.js",[],"/home/dell/Documents/ReactJS/src/components/ConfirmModal.js",[],"/home/dell/Documents/ReactJS/src/store/actions/actionTypes.js",[],"/home/dell/Documents/ReactJS/src/store/reducers/rootReducer.js",["392"],"import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\n\nimport appReducer from \"./appReducer\";\n\nimport userReducer from \"./userReducer\";\n\nimport autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\nimport storage from \"redux-persist/lib/storage\";\nimport { persistReducer } from \"redux-persist\";\n\nconst persistCommonConfig = {\n  storage: storage,\n  stateReconciler: autoMergeLevel2,\n};\n\n// const adminPersistConfig = {\n//     ...persistCommonConfig,\n//     key: 'admin',\n//     whitelist: ['isLoggedIn', 'adminInfo']\n// };\nconst userPersistConfig = {\n  ...persistCommonConfig,\n  key: \"user\",\n  whitelist: [\"isLoggedIn\", \"userInfo\"],\n};\n\nexport default (history) =>\n  combineReducers({\n    router: connectRouter(history),\n    // admin: persistReducer(adminPersistConfig, adminReducer),\n    user: persistReducer(userPersistConfig, userReducer),\n    app: appReducer,\n  });\n","/home/dell/Documents/ReactJS/src/utils/index.js",[],"/home/dell/Documents/ReactJS/src/containers/Header/menuApp.js",[],"/home/dell/Documents/ReactJS/src/components/CustomScrollbars.js",[],"/home/dell/Documents/ReactJS/src/store/reducers/appReducer.js",[],"/home/dell/Documents/ReactJS/src/store/reducers/userReducer.js",[],"/home/dell/Documents/ReactJS/src/components/Navigator.js",[],"/home/dell/Documents/ReactJS/src/services/adminService.js",["393"],"import axios from '../axios';\nimport * as queryString from 'query-string';\n\nconst adminService = {\n\n    /**\n     * Đăng nhập hệ thống\n     * {\n     *  \"username\": \"string\",\n     *  \"password\": \"string\"\n     * }\n     */\n    login(loginBody) {\n        return axios.post(`/admin/login`, loginBody)\n    },\n\n};\n\nexport default adminService;",["394","395"],"/home/dell/Documents/ReactJS/src/containers/System/UserManage.js",["396"],"/home/dell/Documents/ReactJS/src/containers/System/ProductManage.js",["397"],"import React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nclass ProductManage extends Component {\n\n    state = {\n\n    }\n\n    componentDidMount() {\n    }\n\n\n    render() {\n        return (\n            <div className=\"text-center\" >Manage products</div>\n        )\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductManage);\n","/home/dell/Documents/ReactJS/src/containers/System/RegisterPackageGroupOrAcc.js",["398","399"],"import React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nclass RegisterPackageGroupOrAcc extends Component {\n\n    constructor(props) {\n        super(props);\n\n    }\n\n\n\n    render() {\n        return (\n            <div className=\"text-center\">\n                register package group or account\n            </div>)\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterPackageGroupOrAcc);\n","/home/dell/Documents/ReactJS/src/store/actions/index.js",[],"/home/dell/Documents/ReactJS/src/utils/constant.js",[],"/home/dell/Documents/ReactJS/src/utils/CommonUtils.js",[],"/home/dell/Documents/ReactJS/src/utils/LanguageUtils.js",[],"/home/dell/Documents/ReactJS/src/utils/ToastUtil.js",[],"/home/dell/Documents/ReactJS/src/utils/KeyCodeUtils.js",[],"/home/dell/Documents/ReactJS/src/axios.js",["400","401"],"import axios from \"axios\";\nimport _ from \"lodash\";\n// import config from './config';\n\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_URL,\n  // withCredentials: true,\n});\n\ninstance.interceptors.response.use(\n  // Thrown error for request with OK status code\n  (response) => {\n    const { data } = response;\n    return response.data;\n  }\n);\n\nexport default instance;\n// const createError = (\n//   httpStatusCode,\n//   statusCode,\n//   errorMessage,\n//   problems,\n//   errorCode = \"\"\n// ) => {\n//   const error = new Error();\n//   error.httpStatusCode = httpStatusCode;\n//   error.statusCode = statusCode;\n//   error.errorMessage = errorMessage;\n//   error.problems = problems;\n//   error.errorCode = errorCode + \"\";\n//   return error;\n// };\n\n// export const isSuccessStatusCode = (s) => {\n//   // May be string or number\n//   const statusType = typeof s;\n//   return (\n//     (statusType === \"number\" && s === 0) ||\n//     (statusType === \"string\" && s.toUpperCase() === \"OK\")\n//   );\n// };\n//     if (\n//       data.hasOwnProperty(\"s\") &&\n//       !isSuccessStatusCode(data[\"s\"]) &&\n//       data.hasOwnProperty(\"errmsg\")\n//     ) {\n//       return Promise.reject(\n//         createError(\n//           response.status,\n//           data[\"s\"],\n//           data[\"errmsg\"],\n//           null,\n//           data[\"errcode\"] ? data[\"errcode\"] : \"\"\n//         )\n//       );\n//     }\n\n//     // Return direct data to callnback\n//     if (data.hasOwnProperty(\"s\") && data.hasOwnProperty(\"d\")) {\n//       return data[\"d\"];\n//     }\n//     // Handle special case\n//     if (data.hasOwnProperty(\"s\") && _.keys(data).length === 1) {\n//       return null;\n//     }\n//     return response.data;\n//   },\n//   (error) => {\n//     const { response } = error;\n//     if (response == null) {\n//       return Promise.reject(error);\n//     }\n\n//     const { data } = response;\n\n//     if (data.hasOwnProperty(\"s\") && data.hasOwnProperty(\"errmsg\")) {\n//       return Promise.reject(\n//         createError(response.status, data[\"s\"], data[\"errmsg\"])\n//       );\n//     }\n\n//     if (data.hasOwnProperty(\"code\") && data.hasOwnProperty(\"message\")) {\n//       return Promise.reject(\n//         createError(\n//           response.status,\n//           data[\"code\"],\n//           data[\"message\"],\n//           data[\"problems\"]\n//         )\n//       );\n//     }\n\n//     return Promise.reject(createError(response.status));\n//   }\n// );\n","/home/dell/Documents/ReactJS/src/store/actions/appActions.js",[],"/home/dell/Documents/ReactJS/src/store/actions/userActions.js",[],"/home/dell/Documents/ReactJS/src/config.js",["402"],"export default {\n    api: {\n        API_BASE_URL: \"http://localhost:8080/\",\n        ROUTER_BASE_NAME: null,\n    },\n    app: {\n        /**\n         * The base URL for all locations. If your app is served from a sub-directory on your server, you'll want to set\n         * this to the sub-directory. A properly formatted basename should have a leading slash, but no trailing slash.\n         */\n        ROUTER_BASE_NAME: null,\n    }\n};\n","/home/dell/Documents/ReactJS/src/containers/LAR/Login.js",["403","404","405"],"/home/dell/Documents/ReactJS/src/services/index.js",[],"/home/dell/Documents/ReactJS/src/services/userService.js",[],"/home/dell/Documents/CLientReactJS/src/index.js",[],["406","407"],"/home/dell/Documents/CLientReactJS/src/serviceWorker.js",[],"/home/dell/Documents/CLientReactJS/src/redux.js",[],"/home/dell/Documents/CLientReactJS/src/containers/App.js",["408","409"],"import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { ConnectedRouter as Router } from \"connected-react-router\";\nimport { history } from \"../redux\";\nimport { ToastContainer } from \"react-toastify\";\nimport { DoctorDetail } from \"./Homepage/Center/DoctorDetail\";\nimport Booking from \"./Homepage/Center/BookingDoctor\";\nimport {\n  userIsAuthenticated,\n  userIsNotAuthenticated,\n} from \"../hoc/authentication\";\n\nimport { path } from \"../utils\";\n\nimport Home from \"../routes/Home\";\nimport Login from \"./LAR/Login\";\nimport Header from \"./System/Header/Header\";\nimport System from \"../routes/System\";\n\nimport CustomScrollbars from \"../components/CustomScrollbars\";\n\nimport HomePage from \"./Homepage/HomePage.js\";\nimport CustomToastCloseButton from \"../components/CustomToast\";\n\n// import ConfirmModal from \"../components/ConfirmModal\";\n\nclass App extends Component {\n  handlePersistorState = () => {\n    const { persistor } = this.props;\n    let { bootstrapped } = persistor.getState();\n    if (bootstrapped) {\n      if (this.props.onBeforeLift) {\n        Promise.resolve(this.props.onBeforeLift())\n          .then(() => this.setState({ bootstrapped: true }))\n          .catch(() => this.setState({ bootstrapped: true }));\n      } else {\n        this.setState({ bootstrapped: true });\n      }\n    }\n  };\n\n  componentDidMount() {\n    this.handlePersistorState();\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <Router history={history}>\n          <div className=\"main-container\">\n            {/* <ConfirmModal /> */}\n            <span className=\"content-container\">\n              <Switch>\n                <Route path={path.HOME} exact component={Home} />\n\n                <Route\n                  path={path.LOGIN}\n                  component={userIsNotAuthenticated(Login)}\n                />\n\n                <Route\n                  path={path.SYSTEM}\n                  component={userIsAuthenticated(System)}\n                />\n\n                <CustomScrollbars style={{ height: \"100vh\", width: \"100%\" }}>\n                  <Route path={path.HOMEPAGE} component={HomePage} />\n                  <Route path={path.DOCTOR} exact component={DoctorDetail} />\n                  <Route path={path.BOOKING} exact component={Booking} />\n                </CustomScrollbars>\n              </Switch>\n            </span>\n            <ToastContainer\n              position=\"top-right\"\n              autoClose={5000}\n              hideProgressBar={false}\n              newestOnTop={false}\n              closeOnClick\n              rtl={false}\n              pauseOnFocusLoss\n              draggable\n              pauseOnHover\n            />\n          </div>\n        </Router>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    started: state.app.started,\n    isLoggedIn: state.user.isLoggedIn,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","/home/dell/Documents/CLientReactJS/src/hoc/IntlProviderWrapper.js",[],"/home/dell/Documents/CLientReactJS/src/hoc/authentication.js",[],"/home/dell/Documents/CLientReactJS/src/containers/LAR/Login.js",["410","411","412"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { push } from \"connected-react-router\";\nimport * as actions from \"../../store/actions\";\nimport \"./Login.scss\";\nimport { divide } from \"lodash\";\nimport { Fragment } from \"react\";\n// import * as userservice from \"../../services/userService\";\nimport { handleLoginApi } from \"../../services/userService\";\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      isshowpassword: false,\n      errMessage: \"\",\n    };\n  }\n  handleonchangeUsername = (event) => {\n    this.setState({\n      email: event.target.value,\n    });\n  };\n  handleonchangePassword = (event) => {\n    this.setState({\n      password: event.target.value,\n    });\n  };\n\n  handleLogin = async () => {\n    this.setState({\n      errMessage: \"\",\n    });\n\n    try {\n      let data = await handleLoginApi(this.state.email, this.state.password);\n      if (data && data.errcode != 0) {\n        this.setState({\n          errMessage: data.message,\n        });\n      }\n      if (data && data.errcode == 0) {\n        console.log(data);\n        this.props.userLoginSuccess(data.user);\n      }\n    } catch (error) {\n      if (error.response) {\n        if (error.response.data) {\n          this.setState({\n            errMessage: error.response.data.message,\n          });\n        }\n      }\n    }\n  };\n\n  handleShowHidePassword = () => {\n    this.setState({\n      isshowpassword: !this.state.isshowpassword,\n    });\n  };\n  handleKeyDown = (event) => {\n    if (\n      event.key === \"Enter\" ||\n      (event.keyCode === 13 && this.state.email !== \"\")\n    ) {\n      this.handleLogin();\n    }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <div className=\"divF\">\n          <div className=\"form-login\">\n            <div className=\"frontpager\">Sign Up</div>\n            <div className=\"form-field\">\n              <input\n                placeholder=\" \"\n                type=\"text\"\n                className=\"form-input\"\n                value={this.state.email}\n                onChange={(event) => this.handleonchangeUsername(event)}\n              ></input>\n              <label htmlFor=\"name\" className=\"form-label\" form=\"form-label\">\n                Name\n              </label>\n            </div>\n            <div className=\"form-field\">\n              <input\n                placeholder=\" \"\n                className=\"form-input\"\n                value={this.state.password}\n                type={this.state.isshowpassword ? \"text\" : \"password\"}\n                onChange={(event) => this.handleonchangePassword(event)}\n                onKeyDown={(event) => this.handleKeyDown(event)}\n              ></input>\n              <label htmlFor=\"name\" className=\"form-label\" form=\"form-label\">\n                Password\n              </label>\n              <span\n                onClick={() => {\n                  this.handleShowHidePassword();\n                }}\n              >\n                <i\n                  className={\n                    this.state.isshowpassword\n                      ? \"far fa-eye\"\n                      : \"far fa-eye-slash\"\n                  }\n                ></i>\n              </span>\n            </div>\n            <div className=\"col-12 error\" style={{ color: \"red\" }}>\n              {this.state.errMessage}\n            </div>\n\n            <button\n              className=\"form-btn\"\n              onClick={() => {\n                this.handleLogin();\n              }}\n            >\n              Login\n            </button>\n            <div className=\"form-register\">\n              <span>Forgot your password?</span>\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    lang: state.app.language,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    navigate: (path) => dispatch(push(path)),\n    // adminLoginSuccess: (adminInfo) =>\n    //   dispatch(actions.adminLoginSuccess(adminInfo)),\n    // userLoginFail: () => dispatch(actions.userLoginFail()),\n    userLoginSuccess: (userInfo) =>\n      dispatch(actions.userLoginSuccess(userInfo)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","/home/dell/Documents/CLientReactJS/src/routes/Home.js",[],"/home/dell/Documents/CLientReactJS/src/routes/System.js",["413","414"],"import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport Navigator from \"../components/Navigator\";\nimport \"./System.scss\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport API_UserManager from \"../containers/System/API/API_UserManager\";\nimport Header from \"../containers/System/Header/Header\";\nimport UserRedux from \"../containers/System/Reducer/UserRedux\";\nimport ProductManage from \"../containers/System/ProductManage\";\nimport DoctorManage from \"../containers/System/Doctor/DoctorManage\";\nimport { adminMenu, doctorMenu } from \"../containers/System/Header/menuApp\";\nimport CustomScrollbars from \"../components/CustomScrollbars\";\nimport _ from \"lodash\";\nimport Medical from \"../containers/System/Doctor/Medical\";\nclass System extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuApp: [],\n    };\n  }\n  componentDidMount() {\n    let { userInfo } = this.props;\n    let menu = [];\n    if (userInfo && !_.isEmpty(userInfo)) {\n      let role = userInfo.roleId;\n      if (role === \"R1\") {\n        menu = adminMenu;\n      }\n      if (role === \"R2\") {\n        menu = doctorMenu;\n      }\n    }\n    this.setState({\n      menuApp: menu,\n    });\n  }\n\n  render() {\n    const { systemMenuPath } = this.props;\n    return (\n      <Fragment>\n        <div className=\"system\">\n          <div className=\"menu\">\n            <Navigator menus={this.state.menuApp} />\n          </div>\n          <div className=\"center-system\">\n            {this.props.isLoggedIn && <Header />}\n\n            <div className=\"system-list\">\n              <Switch>\n                <Route path=\"/system/user-System\" component={ProductManage} />\n                <Route path=\"/system/user-redux\" component={UserRedux} />\n                <Route path=\"/system/user-API\" component={API_UserManager} />\n                <Route path=\"/system/doctor\" component={DoctorManage} />\n                <Route path=\"/system/patient\" component={API_UserManager} />\n                <Route path=\"/system/medical\" component={Medical} />\n                <Redirect to=\"/system/user-System\" />\n              </Switch>\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    systemMenuPath: state.app.systemMenuPath,\n    isLoggedIn: state.user.isLoggedIn,\n    userInfo: state.user.userInfo,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(System);\n","/home/dell/Documents/CLientReactJS/src/components/ConfirmModal.js",[],["415","416"],"/home/dell/Documents/CLientReactJS/src/components/CustomToast.js",[],"/home/dell/Documents/CLientReactJS/src/store/actions/actionTypes.js",[],"/home/dell/Documents/CLientReactJS/src/store/reducers/rootReducer.js",["417"],"import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\n\nimport appReducer from \"./appReducer\";\n\nimport userReducer from \"./userReducer\";\n\nimport autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\nimport storage from \"redux-persist/lib/storage\";\nimport { persistReducer } from \"redux-persist\";\nimport adminReducer from \"./adminReducer\";\n\nconst persistCommonConfig = {\n  storage: storage,\n  stateReconciler: autoMergeLevel2,\n};\n\n// const adminPersistConfig = {\n//     ...persistCommonConfig,\n//     key: 'admin',\n//     whitelist: ['isLoggedIn', 'adminInfo']\n// };\nconst userPersistConfig = {\n  ...persistCommonConfig,\n  key: \"user\",\n  whitelist: [\"isLoggedIn\", \"userInfo\"],\n};\nconst appPersistConfig = {\n  ...persistCommonConfig,\n  key: \"app\",\n  whitelist: [\"language\"]\n}\n\n\nexport default (history) =>\n  combineReducers({\n    router: connectRouter(history),\n    // admin: persistReducer(adminPersistConfig, adminReducer),\n    user: persistReducer(userPersistConfig, userReducer),\n    app: persistReducer(appPersistConfig, appReducer),\n    admin: adminReducer\n  });\n","/home/dell/Documents/CLientReactJS/src/utils/index.js",[],"/home/dell/Documents/CLientReactJS/src/components/CustomScrollbars.js",[],"/home/dell/Documents/CLientReactJS/src/store/reducers/appReducer.js",[],"/home/dell/Documents/CLientReactJS/src/store/reducers/userReducer.js",[],"/home/dell/Documents/CLientReactJS/src/components/Navigator.js",["418"],"import React, { Component, Fragment } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { FormattedMessage } from \"react-intl\";\nimport { connect } from \"react-redux\";\n\nimport \"./Navigator.scss\";\n\nclass MenuGroup extends Component {\n  render() {\n    const { name, children, active } = this.props;\n    return (\n      <li className={\"menu-group\" + (active ? \" active\" : \"\")}>\n        <div className={\"menu-group-name\"}>\n          <FormattedMessage id={name} />\n        </div>\n        <ul className=\"menu-list list-unstyled\">{children}</ul>\n      </li>\n    );\n  }\n}\n\nclass Menu extends Component {\n  render() {\n    const { name, active, link, children, onClick, hasSubMenu, onLinkClick } =\n      this.props;\n    return (\n      <li\n        className={\n          \"menu\" +\n          (hasSubMenu ? \" has-sub-menu\" : \"\") +\n          \"\" +\n          (active ? \" active\" : \"\")\n        }\n      >\n        {hasSubMenu ? (\n          <Fragment>\n            <span\n              data-toggle=\"collapse\"\n              className={\"menu-link collapsed\"}\n              onClick={onClick}\n              aria-expanded={\"false\"}\n            >\n              <FormattedMessage id={name} />\n              <div className=\"icon-right\">\n                <i className={\"fas fa-list\"} />\n              </div>\n            </span>\n            <div>\n              <ul className=\"sub-menu-list list-unstyled\">{children}</ul>\n            </div>\n          </Fragment>\n        ) : (\n          <Link to={link} className=\"menu-link\" onClick={onLinkClick}>\n            <FormattedMessage id={name} />\n          </Link>\n        )}\n      </li>\n    );\n  }\n}\n\nclass SubMenu extends Component {\n  getItemClass = (path) => {\n    return this.props.location.pathname === path ? \"active\" : \"\";\n  };\n\n  render() {\n    const { name, link, onLinkClick, lick } = this.props;\n    return (\n      <li className={\"sub-menu \" + this.getItemClass(link)}>\n        <Link\n          to={link}\n          className=\"sub-menu-link\"\n          onClick={onLinkClick && lick == true}\n        >\n          <FormattedMessage id={name} />\n        </Link>\n      </li>\n    );\n  }\n}\n\nconst MenuGroupWithRouter = withRouter(MenuGroup);\nconst MenuWithRouter = withRouter(Menu);\nconst SubMenuWithRouter = withRouter(SubMenu);\n\nconst withRouterInnerRef = (WrappedComponent) => {\n  class InnerComponentWithRef extends React.Component {\n    render() {\n      const { forwardRef, ...rest } = this.props;\n      return <WrappedComponent {...rest} ref={forwardRef} />;\n    }\n  }\n\n  const ComponentWithRef = withRouter(InnerComponentWithRef, { withRef: true });\n\n  return React.forwardRef((props, ref) => {\n    return <ComponentWithRef {...props} forwardRef={ref} />;\n  });\n};\n\nclass Navigator extends Component {\n  state = {\n    expandedMenu: {},\n  };\n\n  toggle = (groupIndex, menuIndex) => {\n    const expandedMenu = {};\n    const needExpand = !(\n      this.state.expandedMenu[groupIndex + \"_\" + menuIndex] === true\n    );\n    if (needExpand) {\n      expandedMenu[groupIndex + \"_\" + menuIndex] = true;\n    }\n\n    this.setState({\n      expandedMenu: expandedMenu,\n    });\n  };\n\n  isMenuHasSubMenuActive = (location, subMenus, link) => {\n    if (subMenus) {\n      if (subMenus.length === 0) {\n        return false;\n      }\n\n      const currentPath = location.pathname;\n      for (let i = 0; i < subMenus.length; i++) {\n        const subMenu = subMenus[i];\n        if (subMenu.link === currentPath) {\n          return true;\n        }\n      }\n    }\n\n    if (link) {\n      return this.props.location.pathname === link;\n    }\n\n    return false;\n  };\n\n  checkActiveMenu = () => {\n    const { menus, location } = this.props;\n    outerLoop: for (let i = 0; i < menus.length; i++) {\n      const group = menus[i];\n      if (group.menus && group.menus.length > 0) {\n        for (let j = 0; j < group.menus.length; j++) {\n          const menu = group.menus[j];\n          if (menu.subMenus && menu.subMenus.length > 0) {\n            if (this.isMenuHasSubMenuActive(location, menu.subMenus, null)) {\n              const key = i + \"_\" + j;\n              this.setState({\n                expandedMenu: {\n                  [key]: true,\n                },\n              });\n              break outerLoop;\n            }\n          }\n        }\n      }\n    }\n  };\n\n  componentDidMount() {\n    this.checkActiveMenu();\n  }\n\n  // componentWillReceiveProps(nextProps, prevState) {\n  //     const { location, setAccountMenuPath, setSettingMenuPath } = this.props;\n  //     const { location: nextLocation } = nextProps;\n  //     if (location !== nextLocation) {\n  //         let pathname = nextLocation && nextLocation.pathname;\n  //         if ((pathname.startsWith('/account/') || pathname.startsWith('/fds/account/'))) {\n  //             setAccountMenuPath(pathname);\n  //         }\n  //         if (pathname.startsWith('/settings/')) {\n  //             setSettingMenuPath(pathname);\n  //         };\n  //     };\n  // };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { location } = this.props;\n    const { location: prevLocation } = prevProps;\n    if (location !== prevLocation) {\n      this.checkActiveMenu();\n    }\n  }\n\n  render() {\n    const { menus, location, onLinkClick } = this.props;\n    return (\n      <Fragment>\n        <div className=\"containt\">\n          <div className=\"logo-name\">\n            <div className=\"header-item\">\n              <div className=\"header-logo\">\n                <div className=\"name_logo\">\n                  <h3>We</h3>\n                  <span>\n                    <h3>Care.</h3>\n                    <i class=\"fab fa-amazon-pay\"></i>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"center\">\n            <div className=\"name-menu\">MENU</div>\n\n            <Link\n              to={\"/system/dashdoard\"}\n              className=\"dash-board\"\n              onClick={onLinkClick}\n            >\n              <FormattedMessage id={\"menu.system.menu-admin.dash-board\"} />\n            </Link>\n            <ul className=\"navigator-menu list-unstyled\">\n              {menus.map((group, groupIndex) => {\n                return (\n                  <Fragment key={groupIndex}>\n                    <MenuGroupWithRouter name={group.name}>\n                      {group.menus\n                        ? group.menus.map((menu, menuIndex) => {\n                            const isMenuHasSubMenuActive =\n                              this.isMenuHasSubMenuActive(\n                                location,\n                                menu.subMenus,\n                                menu.link\n                              );\n                            const isSubMenuOpen =\n                              this.state.expandedMenu[\n                                groupIndex + \"_\" + menuIndex\n                              ] === true;\n                            return (\n                              <MenuWithRouter\n                                key={menuIndex}\n                                active={isMenuHasSubMenuActive}\n                                name={menu.name}\n                                link={menu.link}\n                                hasSubMenu={menu.subMenus}\n                                isOpen={isSubMenuOpen}\n                                onClick={() =>\n                                  this.toggle(groupIndex, menuIndex)\n                                }\n                                onLinkClick={onLinkClick}\n                              >\n                                {menu.subMenus &&\n                                  menu.subMenus.map((subMenu, subMenuIndex) => (\n                                    <SubMenuWithRouter\n                                      key={subMenuIndex}\n                                      name={subMenu.name}\n                                      link={subMenu.link}\n                                      onClick={this.closeOtherExpand}\n                                      onLinkClick={onLinkClick}\n                                    />\n                                  ))}\n                              </MenuWithRouter>\n                            );\n                          })\n                        : null}\n                    </MenuGroupWithRouter>\n                  </Fragment>\n                );\n              })}\n            </ul>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default withRouterInnerRef(\n  connect(mapStateToProps, mapDispatchToProps)(Navigator)\n);\n","/home/dell/Documents/CLientReactJS/src/services/userService.js",[],"/home/dell/Documents/CLientReactJS/src/containers/System/ProductManage.js",["419"],"import React, { Component } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { connect } from \"react-redux\";\nimport \"./ProductManage.scss\";\nclass ProductManage extends Component {\n  state = {};\n\n  componentDidMount() {}\n\n  render() {\n    return (\n      <div className=\"text-center\">\n        <h1> 404 not found</h1>\n        <div class=\"container\">\n          <h2>\n            Responsive Tables Using LI <small>Triggers on 767px</small>\n          </h2>\n          <ul class=\"responsive-table\">\n            <li class=\"table-header\">\n              <div class=\"col col-1\">Job Id</div>\n              <div class=\"col col-2\">Customer Name</div>\n              <div class=\"col col-3\">Amount Due</div>\n              <div class=\"col col-4\">Payment Status</div>\n            </li>\n            <li class=\"table-row\">\n              <div class=\"col col-1\" data-label=\"Job Id\">\n                42235\n              </div>\n              <div class=\"col col-2\" data-label=\"Customer Name\">\n                John Doe\n              </div>\n              <div class=\"col col-3\" data-label=\"Amount\">\n                $350\n              </div>\n              <div class=\"col col-4\" data-label=\"Payment Status\">\n                Pending\n              </div>\n            </li>\n            <li class=\"table-row\">\n              <div class=\"col col-1\" data-label=\"Job Id\">\n                42442\n              </div>\n              <div class=\"col col-2\" data-label=\"Customer Name\">\n                Jennifer Smith\n              </div>\n              <div class=\"col col-3\" data-label=\"Amount\">\n                $220\n              </div>\n              <div class=\"col col-4\" data-label=\"Payment Status\">\n                Pending\n              </div>\n            </li>\n            <li class=\"table-row\">\n              <div class=\"col col-1\" data-label=\"Job Id\">\n                42257\n              </div>\n              <div class=\"col col-2\" data-label=\"Customer Name\">\n                John Smith\n              </div>\n              <div class=\"col col-3\" data-label=\"Amount\">\n                $341\n              </div>\n              <div class=\"col col-4\" data-label=\"Payment Status\">\n                Pending\n              </div>\n            </li>\n            <li class=\"table-row\">\n              <div class=\"col col-1\" data-label=\"Job Id\">\n                42311\n              </div>\n              <div class=\"col col-2\" data-label=\"Customer Name\">\n                John Carpenter\n              </div>\n              <div class=\"col col-3\" data-label=\"Amount\">\n                $115\n              </div>\n              <div class=\"col col-4\" data-label=\"Payment Status\">\n                Pending\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductManage);\n","/home/dell/Documents/CLientReactJS/src/containers/System/RegisterPackageGroupOrAcc.js",["420","421"],["422","423"],"/home/dell/Documents/CLientReactJS/src/store/actions/index.js",[],"/home/dell/Documents/CLientReactJS/src/utils/constant.js",[],"/home/dell/Documents/CLientReactJS/src/utils/KeyCodeUtils.js",[],"/home/dell/Documents/CLientReactJS/src/utils/ToastUtil.js",[],"/home/dell/Documents/CLientReactJS/src/utils/CommonUtils.js",[],"/home/dell/Documents/CLientReactJS/src/utils/LanguageUtils.js",[],"/home/dell/Documents/CLientReactJS/src/axios.js",["424","425"],"/home/dell/Documents/CLientReactJS/src/store/actions/appActions.js",[],"/home/dell/Documents/CLientReactJS/src/store/actions/userActions.js",[],"/home/dell/Documents/CLientReactJS/src/containers/Homepage/HomePage.js",["426","427","428"],"import React, { Component, Fragment } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport Home_header from \"./Home_header\";\nimport CenterFind from \"./Center/CenterFind\";\nimport CenterSession from \"./Center/CenterSession\";\nclass HomePage extends Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n\n\n        return (\n            <div>\n                <Home_header />\n                <CenterFind />\n                <CenterSession />\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isLoggedIn: state.user.isLoggedIn,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n","/home/dell/Documents/CLientReactJS/src/containers/Homepage/Home_header.js",["429","430","431","432","433"],"/home/dell/Documents/CLientReactJS/src/containers/Homepage/Center/CenterFind.js",["434"],"import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./CenterFind.scss\";\nimport { FormattedMessage } from \"react-intl\";\nimport * as actions from \"../../../store/actions\";\n\nclass CenterFind extends Component {\n  render() {\n    return (\n      <Fragment>\n        <div className=\"CenterFind\">\n          <div className=\"Center-description\">\n            <div className=\" description-name\">\n              <h2>\n                <FormattedMessage id={\"center.descriptionname1\"} />\n              </h2>\n              <h5>\n                <FormattedMessage id={\"center.descriptionname2\"} />\n              </h5>\n            </div>\n            <input\n              className=\"Enter_your \"\n              type=\"text\"\n              placeholder=\"Enter your\"\n            ></input>\n            <button>\n              <i class=\"fas fa-search\"></i>\n            </button>\n          </div>\n          <div className=\"Img_description\">\n            <img src=\"https://secureservercdn.net/160.153.138.219/i1z.121.myftpupload.com/wp-content/uploads/2020/02/female-doctor-long-683x1024.jpg\"></img>\n            <div className=\"chat_description1\"></div>\n            <div className=\"chat_description2\"></div>\n            <div className=\"chat_description3\"></div>\n          </div>\n        </div>\n        <div className=\"Fastest\">\n          <div className=\"fastname_min\">\n            <FormattedMessage id={\"center.fastest\"} />\n          </div>\n          <div className=\"fastname_max\">\n            <FormattedMessage id={\"center.easy-steps\"} />\n          </div>\n          <div className=\"Fastest-item\">\n            <div className=\"item\">\n              <div className=\"icon\">\n                <i class=\"fas fa-user\"></i>\n              </div>\n              <div className=\"name-item\">\n                <FormattedMessage id={\"center.search\"} />\n              </div>\n              <div className=\"containt-item\">\n                <FormattedMessage id={\"center.search-contant\"} />\n              </div>\n            </div>\n            <div className=\"item\">\n              <div className=\"icon\">\n                <i class=\"fas fa-user\"></i>\n              </div>\n              <div className=\"name-item\">\n                <FormattedMessage id={\"center.check\"} />\n              </div>\n              <div className=\"containt-item\">\n                <FormattedMessage id={\"center.check-contant\"} />\n              </div>\n            </div>\n            <div className=\"item\">\n              <div className=\"icon\">\n                <i class=\"far fa-calendar-alt\"></i>\n              </div>\n              <div className=\"name-item\">\n                <FormattedMessage id={\"center.schedule\"} />\n              </div>\n              <div className=\"containt-item\">\n                <FormattedMessage id={\"center.schedule-contant\"} />\n              </div>\n            </div>\n            <div className=\"item\">\n              <div className=\"icon\">\n                <i class=\"far fa-lightbulb\"></i>\n              </div>\n              <div className=\"name-item\">\n                <FormattedMessage id={\"center.get-solution\"} />\n              </div>\n              <div className=\"containt-item\">\n                <FormattedMessage id={\"center.get-solution-contant\"} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoggedIn: state.user.isLoggedIn,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    processLogout: () => dispatch(actions.processLogout()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CenterFind);\n","/home/dell/Documents/CLientReactJS/src/containers/Homepage/Center/CenterSession.js",["435"],"/home/dell/Documents/CLientReactJS/src/store/actions/adminAction.js",[],"/home/dell/Documents/CLientReactJS/src/store/reducers/adminReducer.js",[],"/home/dell/Documents/CLientReactJS/src/containers/System/API/API_UserManager.js",["436","437","438"],"import React, { Component, Fragment } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { connect } from \"react-redux\";\nimport \"./API_UserManager.scss\";\nimport {\n  getAlluser,\n  createNewUserService,\n  deleteUserService,\n  updateUserService,\n} from \"../../../services/userService\";\nimport API_UserModel from \"./API_UserModel\";\nimport API_UserModelUpdate from \"./API_UserModelUpdate\";\n\nclass API_UserManager extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      arrUsers: [],\n      isOpenModal: false,\n      userUpdate: {},\n      isOpenUpdateModal: false,\n    };\n  }\n  handleAddnewuser = () => {\n    this.setState({\n      isOpenModal: true,\n    });\n  };\n  toggleModal = () => {\n    this.setState({\n      isOpenModal: !this.state.isOpenModal,\n    });\n  };\n  toggleUpdateModal = () => {\n    this.setState({\n      isOpenUpdateModal: !this.state.isOpenUpdateModal,\n    });\n  };\n\n  async componentDidMount() {\n    await this.getAllUserService();\n  }\n  getAllUserService = async () => {\n    let response = await getAlluser(\"All\");\n    if (response && response.errcode === 0) {\n      this.setState({\n        arrUsers: response.users,\n      });\n      //     () => {\n      //       console.log(\"check one \", this.state.arrUsers);\n      //     }//conpact when async\n      //   );\n      //   console.log(\"check two \", this.state.arrUsers);\n    }\n  };\n  createNewUser = async (data) => {\n    try {\n      let response = await createNewUserService(data);\n      // console.log(\"check :\", response);\n\n      if (response && response.users.errcode !== 0) {\n        // alert(response.message);\n        alert(response.users.message);\n      } else {\n        alert(\"All new user succesful\");\n        await this.getAllUserService();\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  handeleUpdateService = (userupdate) => {\n    this.setState({\n      userUpdate: userupdate.item,\n      isOpenUpdateModal: true,\n    });\n  };\n  handeleDeleteService = async (userdelete) => {\n    try {\n      console.log(\"id: \", userdelete.item.id);\n      let response = await deleteUserService(userdelete.item.id);\n      // console.log(\"delete: \", response);\n      // console.log(\"errovode: \", response.deleteuser.errcode);\n      if (response && response.deleteuser.errcode !== 0) {\n        // alert(response.message);\n        alert(response.deleteuser.message);\n      } else {\n        alert(\"delete user succesfull\");\n        await this.getAllUserService();\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  handleUpdateOneUser = async (user) => {\n    let response = await updateUserService(user);\n    console.log(\"update: \", response);\n    if (response && response.updateuser.errcode !== 0) {\n      alert(response.updateuser.message);\n    } else {\n      alert(\"update user succesfull\");\n      await this.getAllUserService();\n    }\n  };\n\n  render() {\n    let arrUsers = this.state.arrUsers;\n\n    return (\n      <Fragment>\n        <div className=\"text-center\">\n          <API_UserModel\n            createNewUser={this.createNewUser}\n            isOpen={this.state.isOpenModal}\n            toggleModal={this.toggleModal}\n          />\n          {this.state.isOpenUpdateModal && (\n            <API_UserModelUpdate\n              UserUpdate={this.state.userUpdate}\n              isOpen={this.state.isOpenUpdateModal}\n              // isOpen={true}\n              toggleModal={this.toggleUpdateModal}\n              updateOneUser={this.handleUpdateOneUser}\n            />\n          )}\n\n          <button\n            style={{ left: \"10px\" }}\n            className=\"btn1\"\n            onClick={() => {\n              this.handleAddnewuser();\n            }}\n          >\n            <i className=\"fas fa-user-plus\"></i>\n            Add new User\n          </button>\n          <table className=\"table\">\n            <thead className=\"thead-dark\">\n              <tr className=\"table-danger\">\n                <th scope=\"col\">STT</th>\n                <th scope=\"col\">Email</th>\n                <th scope=\"col\">First name</th>\n                <th scope=\"col\">Last name</th>\n                <th scope=\"col\">Address</th>\n                <th scope=\"col\">Gender</th>\n                <th scope=\"col\">Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {arrUsers &&\n                arrUsers.map((item, index) => {\n                  return (\n                    <tr>\n                      <th scope=\"row\">{index}</th>\n                      <td>{item.email}</td>\n                      <td>{item.firstName}</td>\n                      <td>{item.lastName}</td>\n                      <td>{item.address}</td>\n                      <td>{item.gender}</td>\n                      <td>\n                        <button\n                          onClick={() => {\n                            this.handeleUpdateService({ item });\n                          }}\n                        >\n                          Edit\n                        </button>\n                        <button\n                          onClick={() => {\n                            this.handeleDeleteService({ item });\n                          }}\n                        >\n                          Delete\n                        </button>\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(API_UserManager);\n","/home/dell/Documents/CLientReactJS/src/containers/System/Reducer/UserRedux.js",["439"],"import React, { Component, Fragment } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { connect } from \"react-redux\";\nimport \"./UserRedux.scss\";\nimport * as actions from \"../../../store/actions\";\nimport { LANGUAGE } from \"../../../utils\";\nimport Lightbox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\"; // This only needs to be imported once in your app\nimport UserReduxTable from \"./UserReduxTable\";\n\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\nclass UserRedux extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //code convert\n      genderAllcode: [],\n      rodeIdAllcode: [],\n      positionIdAllcode: [],\n      isOpen: false,\n      previewImgURL: \"\",\n\n      //information Create user\n      email: \"\",\n      password: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      phoneNumber: \"\",\n      address: \"\",\n      gender: \"\",\n      roleIds: \"\",\n      positionIds: \"\",\n      avatar: \"\",\n      //id user update\n      idUpdate: \"\",\n      //actions when changer\n      actionChange: false,\n      setLoading: false,\n    };\n  }\n\n  componentDidMount() {\n    this.props.getGenderAllcode();\n    this.props.getRodeIdAllcode();\n    this.props.getPositionIdAllcode();\n    this.props.fetchAllUserStart();\n  }\n\n  //state change\n  componentDidUpdate(prevProps) {\n    if (prevProps.genderallcode !== this.props.genderallcode) {\n      let arrGenderAll = this.props.genderallcode;\n\n      this.setState({\n        genderAllcode: arrGenderAll,\n        gender:\n          arrGenderAll && arrGenderAll.length > 0 ? arrGenderAll[0].keyMap : \"\",\n      });\n    }\n    if (prevProps.rodeidallcode !== this.props.rodeidallcode) {\n      let arrRodeIdAll = this.props.rodeidallcode;\n      this.setState({\n        rodeIdAllcode: arrRodeIdAll,\n        roleIds:\n          arrRodeIdAll && arrRodeIdAll.length > 0 ? arrRodeIdAll[0].keyMap : \"\",\n      });\n    }\n    if (prevProps.positionidallcode !== this.props.positionidallcode) {\n      let arrpositionIdAll = this.props.positionidallcode;\n      this.setState({\n        positionIdAllcode: arrpositionIdAll,\n        positionIds:\n          arrpositionIdAll && arrpositionIdAll.length > 0\n            ? arrpositionIdAll[0].keyMap\n            : \"\",\n      });\n    }\n    if (prevProps.alluser !== this.props.alluser) {\n      let arrGenderAll = this.props.genderallcode;\n      let arrRodeIdAll = this.props.rodeidallcode;\n      let arrpositionIdAll = this.props.positionidallcode;\n\n      this.setState({\n        // users: this.props.alluser\n        // users: this.props.alluser\n        email: \"\",\n        password: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        phoneNumber: \"\",\n        address: \"\",\n        gender:\n          arrGenderAll && arrGenderAll.length > 0 ? arrGenderAll[0].keyMap : \"\",\n        roleIds:\n          arrRodeIdAll && arrRodeIdAll.length > 0 ? arrRodeIdAll[0].keyMap : \"\",\n        positionIds:\n          arrpositionIdAll && arrpositionIdAll.length > 0\n            ? arrpositionIdAll[0].keyMap\n            : \"\",\n        avatar: \"\",\n      });\n    }\n    if (prevProps.userUpdate !== this.props.userUpdate) {\n      let userUdate = this.props.userUpdate;\n      this.setState({\n        idUpdate: userUdate.id,\n        email: userUdate.email,\n        password: userUdate.password,\n        firstName: userUdate.firstName,\n        lastName: userUdate.lastName,\n        phoneNumber: userUdate.phonenumber,\n        address: userUdate.address,\n        gender: userUdate.gender,\n        roleIds: userUdate.roleId,\n        positionIds: userUdate.positionId,\n        avatar: userUdate.image,\n        actionChange: this.props.autoAction,\n      });\n    }\n  }\n  // handleOnchangeImage = (event) => {\n  //   let data = event.target.files;\n  //   let file = data[0];\n\n  //   if (file) {\n  //     let objectUrl = URL.createObjectURL(file);\n\n  //     this.setState({\n  //       previewImgURL: objectUrl,\n  //       avatar: objectUrl,\n  //     });\n  //   }\n  // };\n  handleOnchangeImage = async (e) => {\n    const files = e.target.files;\n    const data = new FormData();\n    data.append(\"file\", files[0]);\n    data.append(\"upload_preset\", \"vop4tq3m\");\n    this.setState({\n      setLoading: true,\n    });\n    const res = await fetch(\n      \"https://api.cloudinary.com/v1_1/dh-cantho/image/upload\",\n      {\n        method: \"POST\",\n        body: data,\n      }\n    );\n    const file = await res.json();\n    console.log(file);\n    this.setState({\n      avatar: file.secure_url,\n      setLoading: false,\n    });\n  };\n  openPriewImage = () => {\n    if (!this.state.avatar) return;\n    else {\n      this.setState({\n        isOpen: true,\n      });\n    }\n  };\n  handleOnchangeInput = (event) => {\n    let { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n  checkValideInput = () => {\n    let valid = true;\n    let arrInput = [\n      \"email\",\n      \"password\",\n      \"firstName\",\n      \"lastName\",\n      \"address\",\n      \"phoneNumber\",\n    ];\n    for (let i = 0; i < arrInput.length; i++) {\n      if (!this.state[arrInput[i]]) {\n        alert(\"Missing parameter: \" + arrInput[i]);\n        valid = false;\n        break;\n      }\n    }\n    return valid;\n  };\n  handleOnchangeSubmit = () => {\n    let data = {\n      id: this.state.idUpdate,\n      email: this.state.email,\n      password: this.state.password,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      phonenumber: this.state.phoneNumber,\n      address: this.state.address,\n      gender: this.state.gender,\n      roleId: this.state.roleIds,\n      positionId: this.state.positionIds,\n      image: this.state.avatar,\n    };\n    if (this.state.actionChange === false) {\n      let valid = this.checkValideInput();\n      if (!valid) return;\n      else {\n        this.props.createNewUserStart(data);\n      }\n    }\n    if (this.state.actionChange === true) {\n      console.log(\"update success\");\n      let valid = this.checkValideInput();\n      if (!valid) return;\n      else {\n        this.props.updateUserStart(data);\n        let arrGenderAll = this.props.genderallcode;\n        let arrRodeIdAll = this.props.rodeidallcode;\n        let arrpositionIdAll = this.props.positionidallcode;\n        this.setState({\n          actionChange: false,\n          // refesh data\n          email: \"\",\n          password: \"\",\n          firstName: \"\",\n          lastName: \"\",\n          phoneNumber: \"\",\n          address: \"\",\n          gender:\n            arrGenderAll && arrGenderAll.length > 0\n              ? arrGenderAll[0].keyMap\n              : \"\",\n          roleIds:\n            arrRodeIdAll && arrRodeIdAll.length > 0\n              ? arrRodeIdAll[0].keyMap\n              : \"\",\n          positionIds:\n            arrpositionIdAll && arrpositionIdAll.length > 0\n              ? arrpositionIdAll[0].key\n              : \"\",\n          avatar: \"\",\n        });\n      }\n    }\n  };\n\n  render() {\n    let genders = this.props.genderallcode;\n\n    let rodeid = this.props.rodeidallcode;\n\n    let positionid = this.props.positionidallcode;\n\n    return (\n      <Fragment>\n        <div className=\"user-redux\">\n          <div className=\"avatar-form\">\n            <Form.Group as={Col}>\n              <Form.Label>\n                <FormattedMessage id={\"system.user-redux.avatar\"} />\n              </Form.Label>\n              <Form.Control\n                type=\"file\"\n                // id=\"img-avatar\"\n                // hidden\n                name=\"avatar\"\n                placeholder=\"upload an image\"\n                onChange={(event) => {\n                  this.handleOnchangeImage(event);\n                }}\n              />\n              {this.state.setLoading ? (\n                <h3> Loading...</h3>\n              ) : (\n                <div\n                  className=\"preview-image\"\n                  onClick={() => this.openPriewImage()}\n                >\n                  <img src={this.state.avatar}></img>\n                </div>\n              )}\n              {/* <Form.Label htmlFor=\"img-avatar\" className=\"label-avatar\">\n                tai anh\n              </Form.Label> */}\n\n              {this.state.isOpen === true && (\n                <Lightbox\n                  mainSrc={this.state.avatar}\n                  onCloseRequest={() => this.setState({ isOpen: false })}\n                />\n              )}\n            </Form.Group>\n          </div>\n          <div className=\"center-form\">\n            {/* Form add new User */}\n            <Form className=\"form-doctor\">\n              <Row className=\"mb-3\">\n                <Form.Group as={Col}>\n                  <Form.Label>\n                    <FormattedMessage id={\"system.user-redux.email\"} />\n                  </Form.Label>\n                  <Form.Control\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter email\"\n                    value={this.state.email}\n                    onChange={(event) => {\n                      this.handleOnchangeInput(event);\n                    }}\n                  />\n                </Form.Group>\n\n                <Form.Group as={Col}>\n                  <Form.Label>\n                    <FormattedMessage id={\"system.user-redux.password\"} />\n                  </Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    onChange={(event) => {\n                      this.handleOnchangeInput(event);\n                    }}\n                  />\n                </Form.Group>\n                <Form.Group as={Col}>\n                  <Form.Label>\n                    <FormattedMessage id={\"system.user-redux.phone-number\"} />\n                  </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter Phone Number\"\n                    name=\"phoneNumber\"\n                    value={this.state.phoneNumber}\n                    onChange={(event) => {\n                      this.handleOnchangeInput(event);\n                    }}\n                  />\n                </Form.Group>\n              </Row>\n              <Row className=\"mb-3\">\n                <Form.Group as={Col}>\n                  <Form.Label>\n                    <FormattedMessage id={\"system.user-redux.first-name\"} />\n                  </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter First Name\"\n                    name=\"firstName\"\n                    value={this.state.firstName}\n                    onChange={(event) => {\n                      this.handleOnchangeInput(event);\n                    }}\n                  />\n                </Form.Group>\n\n                <Form.Group as={Col}>\n                  <Form.Label>\n                    <FormattedMessage id={\"system.user-redux.last-name\"} />\n                  </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter Last Name\"\n                    name=\"lastName\"\n                    value={this.state.lastName}\n                    onChange={(event) => {\n                      this.handleOnchangeInput(event);\n                    }}\n                  />\n                </Form.Group>\n                <Form.Group as={Col}>\n                  <Form.Label>\n                    <FormattedMessage id={\"system.user-redux.address\"} />\n                  </Form.Label>\n                  <Form.Control\n                    placeholder=\"1234 Main St\"\n                    type=\"text\"\n                    name=\"address\"\n                    value={this.state.address}\n                    onChange={(event) => {\n                      this.handleOnchangeInput(event);\n                    }}\n                  />\n                </Form.Group>\n              </Row>\n              <Row className=\"mb-3\">\n                <Form.Group as={Col}>\n                  <Form.Label>\n                    <FormattedMessage id={\"system.user-redux.gender\"} />\n                  </Form.Label>\n                  <Form.Select\n                    value={this.state.gender}\n                    name=\"gender\"\n                    onChange={(event) => {\n                      this.handleOnchangeInput(event);\n                    }}\n                  >\n                    {genders &&\n                      genders.length > 0 &&\n                      genders.map((item, index) => {\n                        return (\n                          <option key={index} value={item.keyMap}>\n                            {this.props.language === LANGUAGE.VI\n                              ? item.valueVi\n                              : item.valueEn}\n                          </option>\n                        );\n                      })}\n                  </Form.Select>\n                </Form.Group>\n                <Form.Group as={Col}>\n                  <Form.Label>\n                    <FormattedMessage id={\"system.user-redux.rodeId\"} />\n                  </Form.Label>\n                  <Form.Select\n                    value={this.state.roleIds}\n                    name=\"roleIds\"\n                    onChange={(event) => {\n                      this.handleOnchangeInput(event);\n                    }}\n                  >\n                    {rodeid &&\n                      rodeid.length > 0 &&\n                      rodeid.map((item, index) => {\n                        return (\n                          <option key={index} value={item.keyMap}>\n                            {this.props.language === LANGUAGE.VI\n                              ? item.valueVi\n                              : item.valueEn}\n                          </option>\n                        );\n                      })}\n                  </Form.Select>\n                </Form.Group>\n                <Form.Group as={Col}>\n                  <Form.Label>\n                    <FormattedMessage id={\"system.user-redux.positionId\"} />\n                  </Form.Label>\n                  <Form.Select\n                    value={this.state.positionIds}\n                    name=\"positionIds\"\n                    onChange={(event) => {\n                      this.handleOnchangeInput(event);\n                    }}\n                  >\n                    {positionid &&\n                      positionid.length > 0 &&\n                      positionid.map((item, index) => {\n                        return (\n                          <option key={index} value={item.keyMap}>\n                            {this.props.language === LANGUAGE.VI\n                              ? item.valueVi\n                              : item.valueEn}\n                          </option>\n                        );\n                      })}\n                  </Form.Select>\n                </Form.Group>\n              </Row>\n\n              <Button\n                variant=\"primary\"\n                onClick={() => {\n                  this.handleOnchangeSubmit();\n                }}\n              >\n                {this.state.actionChange === true ? (\n                  <FormattedMessage id={\"system.user-redux.updateUser\"} />\n                ) : (\n                  <FormattedMessage id={\"system.user-redux.saveUser\"} />\n                )}\n              </Button>\n            </Form>\n          </div>\n        </div>\n        {/* table user with redux */}\n        <UserReduxTable handleEditUser={this.handeleUpdate} />\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    language: state.app.language,\n    genderallcode: state.admin.genders,\n    rodeidallcode: state.admin.roleId,\n    positionidallcode: state.admin.positionId,\n    alluser: state.admin.users,\n\n    userUpdate: state.admin.userUpdate,\n    autoAction: state.admin.autoAction,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getGenderAllcode: () => {\n      dispatch(actions.fetchGenderStart());\n    },\n    getRodeIdAllcode: () => {\n      dispatch(actions.fetchRodeIdStart());\n    },\n    getPositionIdAllcode: () => {\n      dispatch(actions.fetchPositionIdStart());\n    },\n    createNewUserStart: (data) => {\n      dispatch(actions.createNewUserStart(data));\n    },\n    fetchAllUserStart: () => {\n      dispatch(actions.fetchAllUserStart());\n    },\n    updateUserStart: (idUser) => {\n      dispatch(actions.updateUserStart(idUser));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRedux);\n","/home/dell/Documents/CLientReactJS/src/containers/System/API/API_UserModel.js",["440"],"import React, { Component, Fragment } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { connect } from \"react-redux\";\n\n// import { Button, Modal } from \"reactstrap\";\nimport {\n  FormGroup,\n  Row,\n  Col,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n} from \"reactstrap\";\nclass API_UserModel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      firstname: \"\",\n      lastname: \"\",\n      address: \"\",\n      phonenumber: \"\",\n      gender: true,\n      roleId: \"\",\n    };\n  }\n\n  componentDidMount() {}\n  toggle = () => {\n    this.props.toggleModal();\n  };\n  handleOnchangeInput = (event, id) => {\n    let copystate = { ...this.state };\n    copystate[id] = event.target.value;\n    this.setState({\n      ...copystate,\n    });\n  };\n  checkValideInput = () => {\n    let valid = true;\n    let arrInput = [\n      \"email\",\n      \"password\",\n      \"firstname\",\n      \"lastname\",\n      \"address\",\n      \"phonenumber\",\n    ];\n    for (let i = 0; i < arrInput.length; i++) {\n      if (!this.state[arrInput[i]]) {\n        alert(\"Missing parameter: \" + arrInput[i]);\n        valid = false;\n        break;\n      }\n    }\n    return valid;\n  };\n  handleAddNewUser = () => {\n    let valide = this.checkValideInput();\n    if (valide === true) {\n      // this.props.createNewUser(this.state);\n      this.props.createNewUser(this.state);\n    }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <Modal\n          isOpen={this.props.isOpen}\n          toggle={() => {\n            this.toggle();\n          }}\n          className={\"lsakdfja\"}\n          size=\"lg\"\n        >\n          <ModalHeader\n            toggle={() => {\n              this.toggle();\n            }}\n          >\n            Create New User\n          </ModalHeader>\n          <ModalBody>\n            {/* <form action=\"put_userById\" method=\"POST\"> */}\n            <div className=\"form-group\">\n              <label for=\"inputAddress\">email</label>\n              <input\n                type=\"text\"\n                style={{ color: \"blueviolet;\" }}\n                className=\"form-control\"\n                name=\"email\"\n                value={this.state.email}\n                onChange={(event) => {\n                  this.handleOnchangeInput(event, \"email\");\n                }}\n              ></input>\n            </div>\n            <div className=\"form-group\">\n              <label for=\"inputAddress\">password</label>\n              <input\n                type=\"text\"\n                style={{ color: \"blueviolet;\" }}\n                className=\"form-control\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={(event) => {\n                  this.handleOnchangeInput(event, \"password\");\n                }}\n              ></input>\n            </div>\n\n            <div className=\"form-group\">\n              <label for=\"inputAddress\">Firstname</label>\n              <input\n                type=\"text\"\n                style={{ color: \"blueviolet;\" }}\n                className=\"form-control\"\n                name=\"firstname\"\n                value={this.state.firstname}\n                placeholder=\"fisrt name\"\n                onChange={(event) => {\n                  this.handleOnchangeInput(event, \"firstname\");\n                }}\n              ></input>\n            </div>\n\n            <div className=\"form-group\">\n              <label for=\"inputAddress2\">Lastname</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"lastname\"\n                style={{ color: \"blueviolet;\" }}\n                value={this.state.lastname}\n                placeholder=\"last name\"\n                onChange={(event) => {\n                  this.handleOnchangeInput(event, \"lastname\");\n                }}\n              ></input>\n            </div>\n            <div className=\"form-group\">\n              <label for=\"inputAddress2\">Address</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"address\"\n                style={{ color: \"blueviolet;\" }}\n                value={this.state.address}\n                placeholder=\"Can Tho St\"\n                onChange={(event) => {\n                  this.handleOnchangeInput(event, \"address\");\n                }}\n              ></input>\n            </div>\n\n            <Row form style={{ display: \"flex\" }}>\n              <Col md={6}>\n                <FormGroup>\n                  <label for=\"inputCity\">phonenumber</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"phonenumber\"\n                    style={{ color: \"blueviolet;\" }}\n                    value={this.state.phonenumber}\n                    onChange={(event) => {\n                      this.handleOnchangeInput(event, \"phonenumber\");\n                    }}\n                  ></input>\n                </FormGroup>\n              </Col>\n              <Col md={4}>\n                <FormGroup>\n                  <label for=\"inputState\">gender</label>\n                  <select\n                    class=\"form-select\"\n                    name=\"gander\"\n                    className=\"form-control\"\n                    style={{ color: \"blueviolet;\" }}\n                    value={this.state.gender}\n                    onChange={(event) => {\n                      this.handleOnchangeInput(event, \"gender\");\n                    }}\n                  >\n                    <option selected value=\"M\">\n                      malde\n                    </option>\n                    <option value=\"F\">fmalde</option>\n                  </select>\n                </FormGroup>\n              </Col>\n              <Col md={2}>\n                <FormGroup>\n                  <label for=\"inputZip\">Role</label>\n                  <select\n                    class=\"form-select\"\n                    name=\"roleId\"\n                    className=\"form-control\"\n                    style={{ color: \"blueviolet;\" }}\n                    value={this.state.roleId}\n                    onChange={(event) => {\n                      this.handleOnchangeInput(event, \"roleId\");\n                    }}\n                  >\n                    <option selected value=\"doctor\">\n                      doctor\n                    </option>\n                    <option value=\"patient\">patient</option>\n                  </select>\n                </FormGroup>\n              </Col>\n            </Row>\n\n            {/* /* <button type=\"submit\" className=\"btn btn-primary\">\n                Update\n            //   </button> */}\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              color=\"primary\"\n              onClick={() => {\n                this.handleAddNewUser();\n              }}\n            >\n              Add new user\n            </Button>{\" \"}\n            <Button\n              color=\"secondary\"\n              onClick={() => {\n                this.toggle();\n              }}\n            >\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(API_UserModel);\n","/home/dell/Documents/CLientReactJS/src/containers/System/API/API_UserModelUpdate.js",["441"],"import React, { Component, Fragment } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { connect } from \"react-redux\";\n// import { updateUserService } from \"../../services/userService\";\nimport _ from \"lodash\";\n\n// import { Button, Modal } from \"reactstrap\";\nimport {\n  FormGroup,\n  Row,\n  Col,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n} from \"reactstrap\";\nclass API_UserModel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: \"\",\n      email: \"\",\n      password: \"\",\n      firstname: \"\",\n      lastname: \"\",\n      address: \"\",\n      phonenumber: \"\",\n      gender: true,\n      roleId: \"\",\n    };\n  }\n\n  componentDidMount() {\n    let user = this.props.UserUpdate;\n\n    if (user && !_.isEmpty(user)) {\n      this.setState({\n        id: user.id,\n        email: user.email,\n        password: user.password,\n        firstname: user.firstName,\n        lastname: user.lastName,\n        address: user.address,\n        phonenumber: user.phonenumber,\n        gender: user.gender,\n        roleId: user.roleId,\n      });\n    }\n  }\n  toggle = () => {\n    this.props.toggleModal();\n  };\n  handleOnchangeInput = (event, id) => {\n    let copystate = { ...this.state };\n    copystate[id] = event.target.value;\n    this.setState({\n      ...copystate,\n    });\n  };\n  checkValideInput = () => {\n    let valid = true;\n    let arrInput = [\n      \"email\",\n      \"password\",\n      \"firstname\",\n      \"lastname\",\n      \"address\",\n      \"phonenumber\",\n    ];\n    for (let i = 0; i < arrInput.length; i++) {\n      if (!this.state[arrInput[i]]) {\n        alert(\"Missing parameter: \" + arrInput[i]);\n        valid = false;\n        break;\n      }\n    }\n    return valid;\n  };\n\n  handleUpdateUserModal = async () => {\n    try {\n      let valide = this.checkValideInput();\n      if (valide === true) {\n        // this.props.createNewUser(this.state);\n        this.props.updateOneUser(this.state);\n      }\n\n      // console.log(\"errovode: \", response.deleteuser.errcode);\n      // if (response && response.d.errcode !== 0) {\n      //     // alert(response.message);\n      //     alert(response.deleteuser.message);\n\n      // } else {\n      //     alert(\"delete user succesfull\")\n      //     await this.getAllUserService();\n      // }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <Modal\n          isOpen={this.props.isOpen}\n          toggle={() => {\n            this.toggle();\n          }}\n          className={\"lsakdfja\"}\n          size=\"lg\"\n        >\n          <ModalHeader\n            toggle={() => {\n              this.toggle();\n            }}\n          >\n            Create New User\n          </ModalHeader>\n          <ModalBody>\n            {/* <form action=\"put_userById\" method=\"POST\"> */}\n            <div className=\"form-group\">\n              <label for=\"inputAddress\">email</label>\n              <input\n                type=\"text\"\n                style={{ color: \"blueviolet;\" }}\n                className=\"form-control\"\n                name=\"email\"\n                value={this.state.email}\n                onChange={(event) => {\n                  this.handleOnchangeInput(event, \"email\");\n                }}\n              ></input>\n            </div>\n            <div className=\"form-group\">\n              <label for=\"inputAddress\">password</label>\n              <input\n                type=\"text\"\n                style={{ color: \"blueviolet;\" }}\n                className=\"form-control\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={(event) => {\n                  this.handleOnchangeInput(event, \"password\");\n                }}\n              ></input>\n            </div>\n\n            <div className=\"form-group\">\n              <label for=\"inputAddress\">Firstname</label>\n              <input\n                type=\"text\"\n                style={{ color: \"blueviolet;\" }}\n                className=\"form-control\"\n                name=\"firstname\"\n                value={this.state.firstname}\n                placeholder=\"fisrt name\"\n                onChange={(event) => {\n                  this.handleOnchangeInput(event, \"firstname\");\n                }}\n              ></input>\n            </div>\n\n            <div className=\"form-group\">\n              <label for=\"inputAddress2\">Lastname</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"lastname\"\n                style={{ color: \"blueviolet;\" }}\n                value={this.state.lastname}\n                placeholder=\"last name\"\n                onChange={(event) => {\n                  this.handleOnchangeInput(event, \"lastname\");\n                }}\n              ></input>\n            </div>\n            <div className=\"form-group\">\n              <label for=\"inputAddress2\">Address</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"address\"\n                style={{ color: \"blueviolet;\" }}\n                value={this.state.address}\n                placeholder=\"Can Tho St\"\n                onChange={(event) => {\n                  this.handleOnchangeInput(event, \"address\");\n                }}\n              ></input>\n            </div>\n\n            <Row form style={{ display: \"flex\" }}>\n              <Col md={6}>\n                <FormGroup>\n                  <label for=\"inputCity\">phonenumber</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"phonenumber\"\n                    style={{ color: \"blueviolet;\" }}\n                    value={this.state.phonenumber}\n                    onChange={(event) => {\n                      this.handleOnchangeInput(event, \"phonenumber\");\n                    }}\n                  ></input>\n                </FormGroup>\n              </Col>\n              <Col md={4}>\n                <FormGroup>\n                  <label for=\"inputState\">gender</label>\n                  <select\n                    class=\"form-select\"\n                    name=\"gander\"\n                    className=\"form-control\"\n                    style={{ color: \"blueviolet;\" }}\n                    value={this.state.gender}\n                    onChange={(event) => {\n                      this.handleOnchangeInput(event, \"gender\");\n                    }}\n                  >\n                    <option selected value=\"M\">\n                      malde\n                    </option>\n                    <option value=\"F\">fmalde</option>\n                  </select>\n                </FormGroup>\n              </Col>\n              <Col md={2}>\n                <FormGroup>\n                  <label for=\"inputZip\">Role</label>\n                  <select\n                    class=\"form-select\"\n                    name=\"roleId\"\n                    className=\"form-control\"\n                    style={{ color: \"blueviolet;\" }}\n                    value={this.state.roleId}\n                    onChange={(event) => {\n                      this.handleOnchangeInput(event, \"roleId\");\n                    }}\n                  >\n                    <option selected value=\"doctor\">\n                      doctor\n                    </option>\n                    <option value=\"patient\">patient</option>\n                  </select>\n                </FormGroup>\n              </Col>\n            </Row>\n\n            {/* /* <button type=\"submit\" className=\"btn btn-primary\">\n                Update\n            //   </button> */}\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              style={{ color: \"primary\" }}\n              onClick={() => {\n                this.handleUpdateUserModal();\n              }}\n            >\n              Update User\n            </Button>{\" \"}\n            <Button\n              style={{ color: \"secondary\" }}\n              onClick={() => {\n                this.toggle();\n              }}\n            >\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(API_UserModel);\n","/home/dell/Documents/CLientReactJS/src/containers/System/Reducer/UserReduxTable.js",["442"],"import React, { Component, Fragment } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../store/actions\";\nimport \"./UserReduxTable.scss\";\n\n// import { Button, Modal } from \"reactstrap\";\nimport { Button, Table } from \"react-bootstrap\";\nclass UserReduxTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n    };\n  }\n  componentDidMount() {\n    this.props.fetchAllUserStart();\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.alluser !== this.props.alluser) {\n      this.setState({\n        users: this.props.alluser,\n      });\n    }\n  }\n  handeleDelete = async (IdUser) => {\n    try {\n      await this.props.deleteUserStart(IdUser.item.id);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  handeleUpdate = async (IdUser) => {\n    try {\n      await this.props.fetchOneUserStart(IdUser.item.id);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  render() {\n    let Users = this.state.users;\n\n    return (\n      <Fragment>\n        <div className=\"text-center\">\n          <Table striped bordered hover>\n            <thead>\n              <tr\n                style={{\n                  background: \"#553D67\",\n                  color: \"#fff\",\n                }}\n              >\n                <th>STT</th>\n                <th>Email</th>\n                <th>First name</th>\n                <th>Last name</th>\n                <th>Address</th>\n                <th>Gender</th>\n                <th>Role</th>\n                <th>Position</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {Users &&\n                Users.length > 0 &&\n                Users.map((item, index) => {\n                  return (\n                    <tr>\n                      <th scope=\"row\">{index}</th>\n                      <td>{item.email}</td>\n                      <td>{item.firstName}</td>\n                      <td>{item.lastName}</td>\n                      <td>{item.address}</td>\n                      <td>{item.gender}</td>\n                      <td>{item.roleId}</td>\n                      <td>{item.positionId}</td>\n\n                      <td>\n                        <Button\n                          style={{\n                            paddingBottom: \"10px !important\",\n                            height: \"40px\",\n                            marginLeft: \"5px !important\",\n                          }}\n                          variant=\"outline-warning\"\n                          value=\"edit\"\n                          onClick={() => {\n                            this.handeleUpdate({ item });\n                          }}\n                        >\n                          Edit\n                        </Button>\n                        <Button\n                          style={{\n                            paddingBottom: \"10px !important\",\n                            height: \"40px\",\n                          }}\n                          variant=\"outline-danger\"\n                          value=\"edit\"\n                          onClick={() => {\n                            this.handeleDelete({ item });\n                          }}\n                        >\n                          Delete\n                        </Button>\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </Table>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    alluser: state.admin.users,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchAllUserStart: () => {\n      dispatch(actions.fetchAllUserStart());\n    },\n    deleteUserStart: (idUser) => {\n      dispatch(actions.deleteUserStart(idUser));\n    },\n    fetchOneUserStart: (idUser) => {\n      dispatch(actions.fetchOneUserStart(idUser));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserReduxTable);\n","/home/dell/Documents/CLientReactJS/src/containers/System/Header/Header.js",[],"/home/dell/Documents/CLientReactJS/src/containers/System/Header/menuApp.js",[],"/home/dell/Documents/CLientReactJS/src/containers/Homepage/Center/DoctorModel.js",["443","444","445","446","447"],"import React, { Component, Fragment } from \"react\";\nimport \"./DoctorModel.scss\";\n\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\nimport * as actions from \"../../../store/actions\";\nimport { LANGUAGE } from \"../../../utils\";\nimport { chengeLanguageApp } from \"../../../store/actions\";\n\n// import { Button, Modal } from \"reactstrap\";\nimport { Modal, ModalBody, ModalFooter } from \"reactstrap\";\nimport { Button } from \"react-bootstrap\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport NumberFormat from \"react-number-format\";\n\nclass DoctorModel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      detailDoctor: [],\n      arrDays: [],\n      isSchedule: false,\n      ismoney: false,\n    };\n  }\n  componentDidMount() {\n    let { language } = this.props;\n    this.DaysSelect(language);\n    this.setState({\n      detailDoctor: this.props.detailDoctor,\n      isSchedule: false,\n    });\n  }\n  toggle = () => {\n    this.props.toggleModal();\n  };\n  componentDidUpdate(prevProps) {\n    if (prevProps.detailDoctor.id != this.props.detailDoctor.id) {\n      this.props.schedule = [];\n    }\n  }\n  DaysSelect = (language) => {\n    let arrDays = [];\n    for (let i = 0; i < 7; i++) {\n      let day = {};\n      if (language === LANGUAGE.VI) {\n        day.label = moment(new Date())\n          .add(i, \"days\")\n          .format(\"dddd(DD/MM/YYYY)\");\n      } else\n        day.label = moment(new Date())\n          .add(i, \"days\")\n          .format(\"dddd(MM/DD/YYYY)\");\n      // day.value = moment(new Date()).add(i, \"days\").startOf(\"day\").valueOf();\n      day.value = moment(new Date()).add(i, \"days\").format(\"YYYY-MM-DD\");\n      arrDays.push(day);\n    }\n    this.setState({\n      arrDays: arrDays,\n    });\n  };\n  handleselectDays = async (event) => {\n    console.log(event.target.value);\n    await this.props.fetchAllscheduleStart(\n      this.props.detailDoctor.id,\n      event.target.value\n    );\n    this.setState({\n      isSchedule: true,\n    });\n  };\n  handleBooking = () => {};\n  render() {\n    let Doctor = this.state.detailDoctor;\n    const detailDoctor = Doctor.Detail ? Doctor.Detail : \"\";\n    let { arrDays, isSchedule } = this.state;\n    let { schedule } = this.props;\n\n    return (\n      <Fragment>\n        <Modal\n          isOpen={this.props.isOpen}\n          detailDoctor={this.props.detailDoctor}\n          toggle={() => {\n            this.toggle();\n          }}\n          size=\"xl\"\n        >\n          <ModalBody>\n            <div className=\"information-doctor\">\n              <div className=\"avatar\">\n                <img src={Doctor.image} />\n              </div>\n              <div className=\"information\">\n                <div className=\"information-item\">\n                  <div className=\"name-doctor\">\n                    <div className=\"title-name\">\n                      <b>\n                        <FormattedMessage id=\"center.name-doctor\" />\n                        :_\n                      </b>\n                    </div>\n                    <div className=\"center-name\">\n                      {this.props.language === LANGUAGE.VI\n                        ? Doctor.firstName + Doctor.lastName\n                        : Doctor.lastName + Doctor.firstName}\n                    </div>\n                  </div>\n                  <div className=\"money\">\n                    <NumberFormat\n                      value={250000}\n                      className=\"foo\"\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix={\"$\"}\n                      renderText={(value, props) => (\n                        <div {...props}>{value}</div>\n                      )}\n                    />\n                  </div>\n                </div>\n                <div className=\"name-specialty\">\n                  Benh vien Da khoa Trung Uong An Giang\n                </div>\n                <div className=\"description-doctor\">\n                  {detailDoctor.description}.{\" \"}\n                  <Link\n                    to={{\n                      pathname: `/doctor`,\n                      state: {\n                        doctor: Doctor,\n                      },\n                    }}\n                  >\n                    About\n                  </Link>\n                </div>\n                <div className=\"kill\">\n                  <div className=\"kill-item\">\n                    <div className=\"kill-name\">\n                      Expert {detailDoctor.expert} %\n                    </div>\n                    <div\n                      className=\"kill-content\"\n                      style={{\n                        width: \"100px\",\n                        background: \"#000\",\n                        height: \"10px\",\n                        position: \"relative\",\n                      }}\n                    >\n                      <div\n                        className=\"kill-display\"\n                        style={{\n                          position: \"absolute\",\n                          width: `${detailDoctor.expert}px`,\n                          background: \"red\",\n                          height: \"10px\",\n                        }}\n                      ></div>\n                    </div>\n                  </div>\n                  <div className=\"kill-item\">\n                    <div className=\"kill-name\">\n                      Effective {detailDoctor.effective} %\n                    </div>\n                    <div\n                      className=\"kill-content\"\n                      style={{\n                        width: \"100px\",\n                        background: \"#000\",\n                        height: \"10px\",\n                        position: \"relative\",\n                      }}\n                    >\n                      <div\n                        className=\"kill-display\"\n                        style={{\n                          position: \"absolute\",\n                          width: `${detailDoctor.effective}px`,\n                          background: \"red\",\n                          height: \"10px\",\n                        }}\n                      ></div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"specialty\"></div>\n                {/* <div\n                  className=\"desription-doctor\"\n                  dangerouslySetInnerHTML={{ __html: detailDoctor }}\n                ></div> */}\n\n                <div className=\"center\">\n                  <div className=\"select-day\">\n                    <div className=\"title-select\">You will select</div>\n                    <select onChange={(event) => this.handleselectDays(event)}>\n                      {arrDays &&\n                        arrDays.length > 0 &&\n                        arrDays.map((item, index) => {\n                          return (\n                            <option value={item.value} key={index}>\n                              {item.label}\n                            </option>\n                          );\n                        })}\n                    </select>\n                  </div>\n                  <div className=\"booking\">\n                    {schedule && schedule.length > 0 ? (\n                      schedule.map((item, index) => {\n                        if (item.timeTypeData && isSchedule == true)\n                          return (\n                            <Button\n                              style={{\n                                paddingBottom: \"10px !important\",\n                                height: \"40px\",\n                                marginBottom: \"10px !important\",\n                              }}\n                              className={\n                                \"btn-times \" +\n                                (item.isSelected == true ? \"active\" : \"\")\n                              }\n                              key={index}\n                              variant=\"outline-success\"\n                              onClick={() => {\n                                this.handeleOnClickBooking({ item });\n                              }}\n                            >\n                              {this.props.language === LANGUAGE.VI\n                                ? item.timeTypeData.valueVi\n                                : item.timeTypeData.valueEn}\n                            </Button>\n                          );\n                      })\n                    ) : (\n                      <div>chua co lich kham benh</div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </ModalBody>\n          <ModalFooter>\n            <Link\n              to={{\n                pathname: `/booking`,\n                state: {\n                  doctor: Doctor,\n                },\n              }}\n            >\n              Booking\n            </Link>\n          </ModalFooter>\n        </Modal>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    language: state.app.language,\n    schedule: state.admin.schedule,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchAllscheduleStart: (doctorId, date) =>\n      dispatch(actions.fetchAllscheduleStart(doctorId, date)),\n    changelanguageAppRedux: (language) => dispatch(chengeLanguageApp(language)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DoctorModel);\n","/home/dell/Documents/CLientReactJS/src/containers/System/Doctor/DoctorManage.js",["448","449","450"],"import React, { Component, Fragment } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { connect } from \"react-redux\";\nimport Select from \"react-select\";\nimport MarkdownIt from \"markdown-it\";\nimport MdEditor from \"react-markdown-editor-lite\";\nimport \"react-markdown-editor-lite/lib/index.css\";\nimport * as actions from \"../../../store/actions\";\nimport { LANGUAGE } from \"../../../utils\";\nimport \"./DoctorManage.scss\";\nimport { Form, Row, Col, FloatingLabel, Button } from \"react-bootstrap\";\n\nconst mdParser = new MarkdownIt(/* Markdown-it options */);\n\n// Finish!\n\nclass DoctorMange extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedDoctor: null,\n      listDoctors: [],\n      prices: [],\n      provinces: [],\n      pays: [],\n      idDoctor: 0,\n      //form information\n      contentHTML: \"\",\n      contentMarkdown: \"\",\n      description: \"\",\n      priceId: \"\",\n      provinceId: \"\",\n      paymentId: \"\",\n      addressClinic: \"\",\n      nameClinic: \"\",\n      count: 0,\n      expert: 0,\n      effective: 0,\n    };\n  }\n  buildSelectDoctor = (inputData) => {\n    let result = [];\n    let language = this.props.language;\n    if (inputData && inputData.length > 0) {\n      inputData.map((item) => {\n        let doctor = {};\n        let labelVi = `${item.lastName} ${item.firstName}`;\n        let labelEn = `${item.firstName} ${item.lastName}`;\n        doctor.label = language === LANGUAGE.VI ? labelVi : labelEn;\n        doctor.value = item.id;\n        result.push(doctor);\n      });\n    }\n    return result;\n  };\n  buildSelectAllcode = (inputData) => {\n    let result = [];\n    let language = this.props.language;\n    if (inputData && inputData.length > 0) {\n      inputData.map((item) => {\n        let Allcode = {};\n        let labelVi = item.valueVi;\n        let labelEn = item.valueEn;\n\n        Allcode.label = language === LANGUAGE.VI ? labelVi : labelEn;\n        Allcode.value = item.id;\n        result.push(Allcode);\n      });\n    }\n    return result;\n  };\n\n  componentDidMount() {\n    this.props.fetchPriceStart();\n    this.props.fetchPayStart();\n    this.props.fetchProvinceStart();\n    this.props.AllDoctorStart();\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.price !== this.props.price) {\n      let arrPriceAll = this.buildSelectAllcode(this.props.price);\n      this.setState({\n        prices: arrPriceAll,\n        priceId:\n          arrPriceAll && arrPriceAll.length > 0 ? arrPriceAll[0].keyMap : \"\",\n      });\n    }\n    if (prevProps.pay !== this.props.pay) {\n      let arrPayAll = this.buildSelectAllcode(this.props.pay);\n      this.setState({\n        pays: arrPayAll,\n        paymentId: arrPayAll && arrPayAll.length > 0 ? arrPayAll[0].keyMap : \"\",\n      });\n    }\n    if (prevProps.province !== this.props.province) {\n      let arrProvinceAll = this.buildSelectAllcode(this.props.province);\n      this.setState({\n        provinces: arrProvinceAll,\n        provinceId:\n          arrProvinceAll && arrProvinceAll.length > 0\n            ? arrProvinceAll[0].keyMap\n            : \"\",\n      });\n    }\n    if (prevProps.Alldoctor !== this.props.Alldoctor) {\n      let dataselect = this.buildSelectDoctor(this.props.Alldoctor);\n      this.setState({\n        listDoctors: dataselect,\n      });\n    }\n    if (prevProps.language !== this.props.language) {\n      let dataselect = this.buildSelectDoctor(this.props.Alldoctor);\n      this.setState({\n        listDoctors: dataselect,\n      });\n      let arrPriceAll = this.buildSelectAllcode(this.props.price);\n      this.setState({\n        prices: arrPriceAll,\n        priceId:\n          arrPriceAll && arrPriceAll.length > 0 ? arrPriceAll[0].keyMap : \"\",\n      });\n      let arrPayAll = this.buildSelectAllcode(this.props.pay);\n      this.setState({\n        pays: arrPayAll,\n        paymentId: arrPayAll && arrPayAll.length > 0 ? arrPayAll[0].keyMap : \"\",\n      });\n      let arrProvinceAll = this.buildSelectAllcode(this.props.province);\n      this.setState({\n        provinces: arrProvinceAll,\n        provinceId:\n          arrProvinceAll && arrProvinceAll.length > 0\n            ? arrProvinceAll[0].keyMap\n            : \"\",\n      });\n    }\n  }\n  handleEditorChange = ({ html, text }) => {\n    this.setState({\n      contentHTML: html,\n      contentMarkdown: text,\n    });\n  };\n  //select component\n\n  handleChangeSelectedDoctor = (selectedDoctor) => {\n    this.setState({ selectedDoctor });\n  };\n  handleChangePrice = (priceId) => {\n    this.setState({ priceId });\n  };\n  handleChangePay = (paymentId) => {\n    this.setState({ paymentId });\n  };\n  handleChangeProvince = (provinceId) => {\n    this.setState({ provinceId });\n  };\n  handleOnchangeInput = (event) => {\n    let { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n  handleOnlickSubmit = () => {\n    let data = {\n      contentHTML: this.state.contentHTML,\n      contentMarkdown: this.state.contentMarkdown,\n      description: this.state.description,\n      doctorId: this.state.selectedDoctor.value,\n      priceId: this.state.priceId.value,\n      provinceId: this.state.provinceId.value,\n      paymentId: this.state.paymentId.value,\n      addressClinic: this.state.addressClinic,\n      nameClinic: this.state.nameClinic,\n      count: this.state.count,\n      expert: this.state.expert,\n      effective: this.state.effective,\n    };\n    let valid = this.checkValideInput();\n    if (!valid) return;\n    else {\n      this.props.saveInfoDoctorStart(data);\n    }\n  };\n  handleSearchDoctor = () => {\n    this.props.fetchOneDoctorStart(this.state.selectedDoctor.value);\n  };\n\n  checkValideInput = () => {\n    let valid = true;\n    let arrInput = [\n      \"contentHTML\",\n      \"contentMarkdown\",\n      \"description\",\n      \"priceId\",\n      \"provinceId\",\n      \"paymentId\",\n      \"addressClinic\",\n      \"nameClinic\",\n      \"expert\",\n      \"effective\",\n    ];\n    for (let i = 0; i < arrInput.length; i++) {\n      if (!this.state[arrInput[i]]) {\n        alert(\"Missing parameter: \" + arrInput[i]);\n        valid = false;\n        break;\n      }\n    }\n    return valid;\n  };\n  render() {\n    const {\n      selectedDoctor,\n      provinces,\n      pays,\n      prices,\n      priceId,\n      provinceId,\n      paymentId,\n      addressClinic,\n      nameClinic,\n      expert,\n      effective,\n      count,\n      description,\n    } = this.state;\n\n    return (\n      <Fragment>\n        <div className=\"selected-doctor\">\n          <div className=\"search-doctor\">\n            <Select\n              value={selectedDoctor}\n              onChange={this.handleChangeSelectedDoctor}\n              options={this.state.listDoctors}\n              placeholder=\"select doctor\"\n              className=\"item-search\"\n            />\n            <Button\n              style={{ paddingBottom: \"10px !important\", height: \"40px\" }}\n              variant=\"outline-warning\"\n              value=\"search\"\n              onClick={() => {\n                this.handleSearchDoctor();\n              }}\n            >\n              <i className=\"fas fa-search\" style={{ marginRight: \"5px\" }}></i>\n              <FormattedMessage id={\"system.common.save\"} />\n            </Button>\n          </div>\n          <Form className=\"info-doctor\">\n            <Form.Group\n              as={Row}\n              className=\"mb-3\"\n              controlId=\"formPlaintextEmail\"\n            >\n              <Form.Label column sm=\"3\">\n                count\n              </Form.Label>\n              <Col sm=\"3\">\n                <Form.Control\n                  plaintext\n                  readOnly\n                  value={this.state.count}\n                ></Form.Control>\n              </Col>\n              <Form.Label column sm=\"3\">\n                ID doctor\n              </Form.Label>\n              <Col sm=\"3\">\n                <Form.Control\n                  plaintext\n                  readOnly\n                  value={selectedDoctor ? selectedDoctor.value : \"\"}\n                />\n              </Col>\n            </Form.Group>\n          </Form>\n        </div>\n        <div className=\"center\">\n          <Form className=\"register-doctor\">\n            <Form.Group\n              as={Row}\n              className=\"mb-3\"\n              controlId=\"formPlaintextEmail\"\n            >\n              <Col sm=\"2\">\n                <Select\n                  value={priceId}\n                  options={prices}\n                  placeholder=\"price money\"\n                  name=\"priceId\"\n                  onChange={this.handleChangePrice}\n                />\n              </Col>\n              <Col sm=\"3\">\n                <Select\n                  value={paymentId}\n                  options={pays}\n                  placeholder=\"pay money\"\n                  name=\"paymentId\"\n                  onChange={this.handleChangePay}\n                />\n              </Col>\n\n              <Col sm=\"3\">\n                <Select\n                  value={provinceId}\n                  options={provinces}\n                  placeholder=\"selected province\"\n                  name=\"provinceId\"\n                  onChange={this.handleChangeProvince}\n                />\n              </Col>\n              <Form.Label column sm=\"1\">\n                experience\n              </Form.Label>\n              <Col sm=\"1\">\n                <Form.Control\n                  type=\"text\"\n                  value={expert}\n                  name=\"expert\"\n                  onChange={(event) => {\n                    this.handleOnchangeInput(event);\n                  }}\n                />\n              </Col>\n              <Form.Label column sm=\"1\">\n                effective\n              </Form.Label>\n              <Col sm=\"1\">\n                <Form.Control\n                  type=\"text\"\n                  value={effective}\n                  name=\"effective\"\n                  onChange={(event) => {\n                    this.handleOnchangeInput(event);\n                  }}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group\n              as={Row}\n              className=\"mb-3\"\n              controlId=\"formPlaintextEmail\"\n            >\n              <Form.Label column sm=\"1\">\n                Name clinic\n              </Form.Label>\n              <Col sm=\"4\">\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Name Clinic\"\n                  value={nameClinic}\n                  name=\"nameClinic\"\n                  onChange={(event) => {\n                    this.handleOnchangeInput(event);\n                  }}\n                />\n              </Col>\n              <Form.Label column sm=\"1\">\n                address clinic\n              </Form.Label>\n              <Col sm=\"6\">\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Name Clinic\"\n                  value={addressClinic}\n                  name=\"addressClinic\"\n                  onChange={(event) => {\n                    this.handleOnchangeInput(event);\n                  }}\n                />\n              </Col>\n            </Form.Group>\n          </Form>\n          <FloatingLabel\n            controlId=\"floatingTextarea2\"\n            label=\"description\"\n            style={{ margin: \"10px\" }}\n          >\n            <Form.Control\n              value={description}\n              as=\"textarea\"\n              placeholder=\"Leave a comment here\"\n              style={{\n                height: \"100px\",\n                margin: \"5px\",\n              }}\n              name=\"description\"\n              onChange={(event) => {\n                this.handleOnchangeInput(event);\n              }}\n            />\n          </FloatingLabel>\n        </div>\n\n        <MdEditor\n          style={{ height: \"500px\" }}\n          renderHTML={(text) => mdParser.render(text)}\n          onChange={this.handleEditorChange}\n        />\n        <button\n          type=\"submit\"\n          value=\"save\"\n          onClick={() => {\n            this.handleOnlickSubmit();\n          }}\n        >\n          <FormattedMessage id={\"system.common.save\"} />\n        </button>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    language: state.app.language,\n    Alldoctor: state.admin.Alldoctor,\n    doctor: state.admin.doctor,\n    price: state.admin.price,\n    pay: state.admin.pay,\n    province: state.admin.province,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchPriceStart: () => {\n      dispatch(actions.fetchPriceStart());\n    },\n    fetchPayStart: () => {\n      dispatch(actions.fetchPayStart());\n    },\n    fetchProvinceStart: () => {\n      dispatch(actions.fetchProvinceStart());\n    },\n    AllDoctorStart: () => {\n      dispatch(actions.AllDoctorStart());\n    },\n    saveInfoDoctorStart: (data) => {\n      dispatch(actions.saveInfoDoctorStart(data));\n    },\n    fetchOneDoctorStart: (idDoctor) => {\n      dispatch(actions.fetchOneDoctorStart(idDoctor));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DoctorMange);\n","/home/dell/Documents/CLientReactJS/src/services/index.js",[],"/home/dell/Documents/CLientReactJS/src/services/doctorService.js",[],"/home/dell/Documents/CLientReactJS/src/containers/System/Doctor/Medical.js",["451","452","453","454","455","456","457"],"import React, { Component, Fragment } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { connect } from \"react-redux\";\n\nimport \"react-markdown-editor-lite/lib/index.css\";\nimport * as actions from \"../../../store/actions\";\nimport { dateFormat, LANGUAGE } from \"../../../utils\";\nimport \"./Medical.scss\";\nimport DatePicker from \"../../../components/Input/DatePicker\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport { toast } from \"react-toastify\";\nimport { saveScheduleDoctor } from \"../../../services/doctorService\";\n\n// Finish!\n\nclass Medical extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentData: \"\",\n      selectTimes: [],\n    };\n  }\n\n  componentDidMount() {\n    this.props.getTimecode();\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.times !== this.props.times) {\n      let data = this.props.times;\n      if (data && data.length > 0)\n        data = data.map((item) => ({ ...item, isSelected: false }));\n      this.setState({\n        selectTimes: data,\n      });\n    }\n  }\n  handleOnchangeDatePicker = (date) => {\n    this.setState({\n      currentData: date,\n    });\n  };\n  handleOnlickTimes = (time) => {\n    let { selectTimes } = this.state;\n    if (selectTimes && selectTimes.length > 0) {\n      selectTimes = selectTimes.map((item) => {\n        if (item.id === time) item.isSelected = !item.isSelected;\n        return item;\n      });\n      this.setState({\n        selectTimes: selectTimes,\n      });\n    }\n  };\n  reverseString = (str) => {\n    var arr = str.split(\"-\"); //cat chuoi thanh tu phan tai phan tu va dua vao mang\n    var reverseArr = arr.reverse(); // doi nguoc mang\n    var newstr = reverseArr.join(\"-\"); // join lai\n    return newstr;\n  };\n\n  handleOnlicksave = async () => {\n    let { currentData, selectTimes } = this.state;\n    let { userInfo } = this.props;\n    let result = [];\n    if (selectTimes && selectTimes.length > 0) {\n      selectTimes = selectTimes.filter((item) => item.isSelected == true);\n      if (selectTimes.length > 0 && currentData) {\n        let dateselected = moment(currentData[0]).format(\"YYYY-MM-DD\");\n        // let dateselected = new Date(currentData[0]).getTime();\n        selectTimes.map((item) => {\n          let object = {};\n          object.doctorId = userInfo.id;\n          object.date = dateselected;\n          object.timeType = item.keyMap;\n          result.push(object);\n        });\n        console.log(typeof result[0].idDoctor);\n        let res = await saveScheduleDoctor({\n          arrSchedule: result,\n        });\n        if (res && res.errcode === 0) toast.success(\"save sucess\");\n        else toast.error(\"faild\");\n      }\n    } else toast.error(\"time didn't select\");\n    console.log(result.date);\n  };\n  render() {\n    const { selectTimes } = this.state;\n    const { language } = this.props;\n    return (\n      <Fragment>\n        <h1>Doctor</h1>\n        <DatePicker\n          onChange={(date) => this.handleOnchangeDatePicker(date)}\n          selected={this.state.currentData}\n          minDate={new Date()}\n        />\n\n        <div className=\"center-time\">\n          {selectTimes &&\n            selectTimes.length > 0 &&\n            selectTimes.map((item, index) => {\n              return (\n                <button\n                  className={\n                    \"btn-times \" + (item.isSelected == true ? \"active\" : \"\")\n                  }\n                  key={index}\n                  onClick={() => {\n                    this.handleOnlickTimes(item.id);\n                  }}\n                >\n                  {this.props.language === LANGUAGE.VI\n                    ? item.valueVi\n                    : item.valueEn}\n                </button>\n              );\n            })}\n        </div>\n        <div className=\"save-time\">\n          <button\n            className=\"btn\"\n            onClick={() => {\n              this.handleOnlicksave();\n            }}\n          >\n            save\n          </button>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    language: state.app.language,\n    times: state.admin.times,\n    userInfo: state.user.userInfo,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getTimecode: () => {\n      dispatch(actions.fetchTimeStart());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Medical);\n","/home/dell/Documents/CLientReactJS/src/components/Input/DatePicker.js",[],"/home/dell/Documents/CLientReactJS/src/containers/Homepage/Center/DoctorDetail.js",["458"],"import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../store/actions\";\nimport \"./DoctorDetail.scss\";\n\nexport class DoctorDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  componentDidMount() {}\n\n  render() {\n    let doctor = this.props.location.state.doctor;\n    const detailDoctor = doctor.Detail ? doctor.Detail : \"\";\n    // const detailDoctor = doctor.Detail ? doctor.Detail : \"\";\n\n    return (\n      <Fragment>\n        <div className=\"center-detail_doctor\">\n          <div className=\"center1\">\n            <div\n              className=\"description\"\n              dangerouslySetInnerHTML={{ __html: detailDoctor.contentHTML }}\n            ></div>\n            <div className=\"interests\">\n              <div className=\"interests-title\">Interests</div>\n              <div className=\"interests-center\">\n                <div className=\"interests-item\">\n                  <i class=\"fas fa-music\"></i>\n                  <div className=\"interests-name\">Musics</div>\n                </div>\n                <div className=\"interests-item\">\n                  <i class=\"fas fa-plane\"></i>\n                  <div className=\"interests-name\">Travels</div>\n                </div>\n                <div className=\"interests-item\">\n                  <i class=\"fas fa-futbol\"></i>\n                  <div className=\"interests-name\">Soccers</div>\n                </div>\n                <div className=\"interests-item\">\n                  <i class=\"fas fa-gamepad\"></i>\n                  <div className=\"interests-name\">Games</div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"center2\">\n            <div className=\"avatar-doctor\">\n              <div className=\"name-doctor\">\n                <div className=\"name-doctor2\">\n                  {doctor.firstName.toUpperCase()}\n                </div>\n                <div className=\"name-doctor1\">\n                  {doctor.lastName.toUpperCase()}\n                </div>\n              </div>\n              <div className=\"image-avatar\">\n                <img src={doctor.image}></img>\n              </div>\n            </div>\n\n            <div className=\"interact\">\n              <div className=\"interact-item\">\n                <i class=\"fab fa-twitter-square\"></i>\n                <div className=\"interact-name\">Twitter</div>\n              </div>\n              <div className=\"interact-item\">\n                <i class=\"fab fa-facebook\"></i>\n                <div className=\"interact-name\">Facebook</div>\n              </div>\n              <div className=\"interact-item\">\n                <i class=\"fab fa-instagram\"></i>\n                <div className=\"interact-name\">Instagram</div>\n              </div>\n            </div>\n            <div className=\"skills\">\n              <div className=\"skills-title\">Skills:</div>\n              <div className=\"skills-item\">\n                <div className=\"skills-name\">Expert:</div>\n                <div className=\"skills-center\"></div>\n              </div>\n              <div className=\"skills-item\">\n                <div className=\"skills-name\">affective:</div>\n                <div className=\"skills-center\"></div>\n              </div>\n            </div>\n            <div className=\"experience\">\n              <div className=\"experience-title\">Experience:</div>\n              <div className=\"experience-center\"></div>\n            </div>\n            <div className=\"education\">\n              <div className=\"education-title\">Education:</div>\n              <div className=\"education-center\"></div>\n            </div>\n            <div className=\"address-specialty\">\n              <div className=\"address-specialty-title\">Address specialty:</div>\n              <div className=\"address-specialty-center\"></div>\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    doctor: state.admin.doctor,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchOneDoctorStart: (iddoctor) =>\n      dispatch(actions.fetchOneDoctorStart(iddoctor)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DoctorDetail);\n","/home/dell/Documents/CLientReactJS/src/containers/Homepage/Center/BookingDoctor.js",["459","460","461","462","463","464","465","466","467","468","469"],{"ruleId":"470","replacedBy":"471"},{"ruleId":"472","replacedBy":"473"},{"ruleId":"474","severity":1,"message":"475","line":52,"column":17,"nodeType":"476","messageId":"477","endLine":52,"endColumn":25},{"ruleId":"474","severity":1,"message":"478","line":52,"column":27,"nodeType":"476","messageId":"477","endLine":52,"endColumn":35},{"ruleId":"474","severity":1,"message":"479","line":54,"column":36,"nodeType":"476","messageId":"477","endLine":54,"endColumn":50},{"ruleId":"470","replacedBy":"480"},{"ruleId":"472","replacedBy":"481"},{"ruleId":"482","severity":1,"message":"483","line":28,"column":1,"nodeType":"484","endLine":34,"endColumn":6},{"ruleId":"474","severity":1,"message":"485","line":2,"column":13,"nodeType":"476","messageId":"477","endLine":2,"endColumn":24},{"ruleId":"470","replacedBy":"486"},{"ruleId":"472","replacedBy":"487"},{"ruleId":"474","severity":1,"message":"488","line":2,"column":10,"nodeType":"476","messageId":"477","endLine":2,"endColumn":26},{"ruleId":"474","severity":1,"message":"488","line":2,"column":10,"nodeType":"476","messageId":"477","endLine":2,"endColumn":26},{"ruleId":"474","severity":1,"message":"488","line":2,"column":10,"nodeType":"476","messageId":"477","endLine":2,"endColumn":26},{"ruleId":"489","severity":1,"message":"490","line":6,"column":5,"nodeType":"491","messageId":"492","endLine":9,"endColumn":6},{"ruleId":"474","severity":1,"message":"493","line":2,"column":8,"nodeType":"476","messageId":"477","endLine":2,"endColumn":9},{"ruleId":"474","severity":1,"message":"494","line":13,"column":13,"nodeType":"476","messageId":"477","endLine":13,"endColumn":17},{"ruleId":"482","severity":1,"message":"495","line":1,"column":1,"nodeType":"484","endLine":13,"endColumn":3},{"ruleId":"474","severity":1,"message":"496","line":6,"column":10,"nodeType":"476","messageId":"477","endLine":6,"endColumn":16},{"ruleId":"497","severity":1,"message":"498","line":38,"column":32,"nodeType":"499","messageId":"500","endLine":38,"endColumn":34},{"ruleId":"497","severity":1,"message":"501","line":43,"column":32,"nodeType":"499","messageId":"500","endLine":43,"endColumn":34},{"ruleId":"470","replacedBy":"502"},{"ruleId":"472","replacedBy":"503"},{"ruleId":"474","severity":1,"message":"504","line":18,"column":8,"nodeType":"476","messageId":"477","endLine":18,"endColumn":14},{"ruleId":"474","severity":1,"message":"505","line":24,"column":8,"nodeType":"476","messageId":"477","endLine":24,"endColumn":30},{"ruleId":"474","severity":1,"message":"496","line":6,"column":10,"nodeType":"476","messageId":"477","endLine":6,"endColumn":16},{"ruleId":"497","severity":1,"message":"498","line":38,"column":32,"nodeType":"499","messageId":"500","endLine":38,"endColumn":34},{"ruleId":"497","severity":1,"message":"501","line":43,"column":32,"nodeType":"499","messageId":"500","endLine":43,"endColumn":34},{"ruleId":"474","severity":1,"message":"506","line":12,"column":8,"nodeType":"476","messageId":"477","endLine":12,"endColumn":24},{"ruleId":"474","severity":1,"message":"507","line":40,"column":13,"nodeType":"476","messageId":"477","endLine":40,"endColumn":27},{"ruleId":"470","replacedBy":"508"},{"ruleId":"472","replacedBy":"509"},{"ruleId":"482","severity":1,"message":"483","line":35,"column":1,"nodeType":"484","endLine":42,"endColumn":6},{"ruleId":"497","severity":1,"message":"501","line":74,"column":40,"nodeType":"499","messageId":"500","endLine":74,"endColumn":42},{"ruleId":"474","severity":1,"message":"488","line":2,"column":10,"nodeType":"476","messageId":"477","endLine":2,"endColumn":26},{"ruleId":"474","severity":1,"message":"488","line":2,"column":10,"nodeType":"476","messageId":"477","endLine":2,"endColumn":26},{"ruleId":"489","severity":1,"message":"490","line":6,"column":5,"nodeType":"491","messageId":"492","endLine":9,"endColumn":6},{"ruleId":"470","replacedBy":"510"},{"ruleId":"472","replacedBy":"511"},{"ruleId":"474","severity":1,"message":"493","line":2,"column":8,"nodeType":"476","messageId":"477","endLine":2,"endColumn":9},{"ruleId":"474","severity":1,"message":"494","line":13,"column":13,"nodeType":"476","messageId":"477","endLine":13,"endColumn":17},{"ruleId":"474","severity":1,"message":"512","line":1,"column":28,"nodeType":"476","messageId":"477","endLine":1,"endColumn":36},{"ruleId":"489","severity":1,"message":"490","line":8,"column":5,"nodeType":"491","messageId":"492","endLine":10,"endColumn":6},{"ruleId":"513","severity":1,"message":"514","line":16,"column":17,"nodeType":"515","messageId":"516","endLine":16,"endColumn":32},{"ruleId":"517","severity":1,"message":"518","line":53,"column":13,"nodeType":"515","endLine":53,"endColumn":45},{"ruleId":"517","severity":1,"message":"518","line":64,"column":15,"nodeType":"515","endLine":64,"endColumn":27},{"ruleId":"517","severity":1,"message":"518","line":71,"column":15,"nodeType":"515","endLine":71,"endColumn":27},{"ruleId":"517","severity":1,"message":"518","line":79,"column":15,"nodeType":"515","endLine":79,"endColumn":27},{"ruleId":"517","severity":1,"message":"518","line":85,"column":15,"nodeType":"515","endLine":85,"endColumn":27},{"ruleId":"519","severity":1,"message":"520","line":31,"column":13,"nodeType":"515","endLine":31,"endColumn":151},{"ruleId":"519","severity":1,"message":"520","line":100,"column":21,"nodeType":"515","endLine":105,"endColumn":23},{"ruleId":"474","severity":1,"message":"488","line":2,"column":10,"nodeType":"476","messageId":"477","endLine":2,"endColumn":26},{"ruleId":"513","severity":1,"message":"521","line":113,"column":11,"nodeType":"515","messageId":"516","endLine":117,"endColumn":13},{"ruleId":"513","severity":1,"message":"522","line":119,"column":13,"nodeType":"515","messageId":"516","endLine":125,"endColumn":15},{"ruleId":"519","severity":1,"message":"520","line":278,"column":19,"nodeType":"515","endLine":278,"endColumn":48},{"ruleId":"474","severity":1,"message":"488","line":2,"column":10,"nodeType":"476","messageId":"477","endLine":2,"endColumn":26},{"ruleId":"474","severity":1,"message":"488","line":2,"column":10,"nodeType":"476","messageId":"477","endLine":2,"endColumn":26},{"ruleId":"474","severity":1,"message":"488","line":2,"column":10,"nodeType":"476","messageId":"477","endLine":2,"endColumn":26},{"ruleId":"497","severity":1,"message":"498","line":39,"column":35,"nodeType":"499","messageId":"500","endLine":39,"endColumn":37},{"ruleId":"519","severity":1,"message":"520","line":93,"column":17,"nodeType":"515","endLine":93,"endColumn":43},{"ruleId":"523","severity":1,"message":"524","line":212,"column":50,"nodeType":"525","messageId":"526","endLine":212,"endColumn":52},{"ruleId":"497","severity":1,"message":"501","line":213,"column":61,"nodeType":"499","messageId":"500","endLine":213,"endColumn":63},{"ruleId":"497","severity":1,"message":"501","line":223,"column":50,"nodeType":"499","messageId":"500","endLine":223,"endColumn":52},{"ruleId":"523","severity":1,"message":"527","line":45,"column":28,"nodeType":"525","messageId":"528","endLine":45,"endColumn":30},{"ruleId":"523","severity":1,"message":"527","line":60,"column":28,"nodeType":"525","messageId":"528","endLine":60,"endColumn":30},{"ruleId":"474","severity":1,"message":"529","line":224,"column":7,"nodeType":"476","messageId":"477","endLine":224,"endColumn":12},{"ruleId":"474","severity":1,"message":"488","line":2,"column":10,"nodeType":"476","messageId":"477","endLine":2,"endColumn":26},{"ruleId":"474","severity":1,"message":"530","line":7,"column":10,"nodeType":"476","messageId":"477","endLine":7,"endColumn":20},{"ruleId":"474","severity":1,"message":"493","line":11,"column":8,"nodeType":"476","messageId":"477","endLine":11,"endColumn":9},{"ruleId":"497","severity":1,"message":"501","line":68,"column":66,"nodeType":"499","messageId":"500","endLine":68,"endColumn":68},{"ruleId":"523","severity":1,"message":"527","line":72,"column":32,"nodeType":"525","messageId":"528","endLine":72,"endColumn":34},{"ruleId":"474","severity":1,"message":"531","line":91,"column":13,"nodeType":"476","messageId":"477","endLine":91,"endColumn":21},{"ruleId":"497","severity":1,"message":"501","line":108,"column":53,"nodeType":"499","messageId":"500","endLine":108,"endColumn":55},{"ruleId":"519","severity":1,"message":"520","line":59,"column":17,"nodeType":"515","endLine":59,"endColumn":41},{"ruleId":"474","severity":1,"message":"488","line":5,"column":10,"nodeType":"476","messageId":"477","endLine":5,"endColumn":26},{"ruleId":"474","severity":1,"message":"532","line":7,"column":10,"nodeType":"476","messageId":"477","endLine":7,"endColumn":18},{"ruleId":"517","severity":1,"message":"518","line":46,"column":19,"nodeType":"515","endLine":46,"endColumn":50},{"ruleId":"517","severity":1,"message":"518","line":49,"column":19,"nodeType":"515","endLine":49,"endColumn":50},{"ruleId":"517","severity":1,"message":"518","line":52,"column":19,"nodeType":"515","endLine":52,"endColumn":50},{"ruleId":"517","severity":1,"message":"518","line":67,"column":19,"nodeType":"515","endLine":67,"endColumn":50},{"ruleId":"517","severity":1,"message":"518","line":70,"column":19,"nodeType":"515","endLine":70,"endColumn":50},{"ruleId":"517","severity":1,"message":"518","line":73,"column":19,"nodeType":"515","endLine":73,"endColumn":50},{"ruleId":"517","severity":1,"message":"518","line":80,"column":17,"nodeType":"515","endLine":80,"endColumn":29},{"ruleId":"533","severity":1,"message":"534","line":120,"column":15,"nodeType":"515","messageId":"535","endLine":120,"endColumn":64,"fix":"536"},{"ruleId":"533","severity":1,"message":"534","line":124,"column":15,"nodeType":"515","messageId":"535","endLine":127,"endColumn":16,"fix":"537"},"no-native-reassign",["538"],"no-negated-in-lhs",["539"],"no-unused-vars","'username' is assigned a value but never used.","Identifier","unusedVar","'password' is assigned a value but never used.","'adminLoginFail' is assigned a value but never used.",["538"],["539"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'queryString' is defined but never used.",["538"],["539"],"'FormattedMessage' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'_' is defined but never used.","'data' is assigned a value but never used.","Assign object to a variable before exporting as module default","'divide' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.",["538"],["539"],"'Header' is defined but never used.","'CustomToastCloseButton' is defined but never used.","'CustomScrollbars' is defined but never used.","'systemMenuPath' is assigned a value but never used.",["538"],["539"],["538"],["539"],"'Fragment' is defined but never used.","react/jsx-pascal-case","Imported JSX component Home_header must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","Imported JSX component API_UserModel must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component API_UserModelUpdate must be in PascalCase or SCREAMING_SNAKE_CASE","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","expectedInside","'count' is assigned a value but never used.","'dateFormat' is defined but never used.","'language' is assigned a value but never used.","'LANGUAGE' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"540","text":"541"},{"range":"542","text":"541"},"no-global-assign","no-unsafe-negation",[4177,4177]," rel=\"noreferrer\"",[4442,4442]]