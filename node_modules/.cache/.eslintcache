[{"/home/dell/Documents/ReactJS/src/index.js":"1","/home/dell/Documents/ReactJS/src/serviceWorker.js":"2","/home/dell/Documents/ReactJS/src/redux.js":"3","/home/dell/Documents/ReactJS/src/containers/App.js":"4","/home/dell/Documents/ReactJS/src/hoc/IntlProviderWrapper.js":"5","/home/dell/Documents/ReactJS/src/hoc/authentication.js":"6","/home/dell/Documents/ReactJS/src/routes/Home.js":"7","/home/dell/Documents/ReactJS/src/routes/Login.js":"8","/home/dell/Documents/ReactJS/src/routes/System.js":"9","/home/dell/Documents/ReactJS/src/containers/Header/Header.js":"10","/home/dell/Documents/ReactJS/src/components/CustomToast.js":"11","/home/dell/Documents/ReactJS/src/components/ConfirmModal.js":"12","/home/dell/Documents/ReactJS/src/store/actions/actionTypes.js":"13","/home/dell/Documents/ReactJS/src/store/reducers/rootReducer.js":"14","/home/dell/Documents/ReactJS/src/utils/index.js":"15","/home/dell/Documents/ReactJS/src/containers/Header/menuApp.js":"16","/home/dell/Documents/ReactJS/src/components/CustomScrollbars.js":"17","/home/dell/Documents/ReactJS/src/store/reducers/appReducer.js":"18","/home/dell/Documents/ReactJS/src/store/reducers/userReducer.js":"19","/home/dell/Documents/ReactJS/src/components/Navigator.js":"20","/home/dell/Documents/ReactJS/src/services/adminService.js":"21","/home/dell/Documents/ReactJS/src/containers/System/UserManage.js":"22","/home/dell/Documents/ReactJS/src/containers/System/ProductManage.js":"23","/home/dell/Documents/ReactJS/src/containers/System/RegisterPackageGroupOrAcc.js":"24","/home/dell/Documents/ReactJS/src/store/actions/index.js":"25","/home/dell/Documents/ReactJS/src/utils/constant.js":"26","/home/dell/Documents/ReactJS/src/utils/CommonUtils.js":"27","/home/dell/Documents/ReactJS/src/utils/LanguageUtils.js":"28","/home/dell/Documents/ReactJS/src/utils/ToastUtil.js":"29","/home/dell/Documents/ReactJS/src/utils/KeyCodeUtils.js":"30","/home/dell/Documents/ReactJS/src/axios.js":"31","/home/dell/Documents/ReactJS/src/store/actions/appActions.js":"32","/home/dell/Documents/ReactJS/src/store/actions/userActions.js":"33","/home/dell/Documents/ReactJS/src/config.js":"34","/home/dell/Documents/ReactJS/src/containers/LAR/Login.js":"35","/home/dell/Documents/ReactJS/src/services/index.js":"36","/home/dell/Documents/ReactJS/src/services/userService.js":"37","/home/dell/Documents/CLientReactJS/src/index.js":"38","/home/dell/Documents/CLientReactJS/src/serviceWorker.js":"39","/home/dell/Documents/CLientReactJS/src/redux.js":"40","/home/dell/Documents/CLientReactJS/src/containers/App.js":"41","/home/dell/Documents/CLientReactJS/src/hoc/IntlProviderWrapper.js":"42","/home/dell/Documents/CLientReactJS/src/hoc/authentication.js":"43","/home/dell/Documents/CLientReactJS/src/containers/LAR/Login.js":"44","/home/dell/Documents/CLientReactJS/src/routes/Home.js":"45","/home/dell/Documents/CLientReactJS/src/routes/System.js":"46","/home/dell/Documents/CLientReactJS/src/components/ConfirmModal.js":"47","/home/dell/Documents/CLientReactJS/src/components/CustomToast.js":"48","/home/dell/Documents/CLientReactJS/src/store/actions/actionTypes.js":"49","/home/dell/Documents/CLientReactJS/src/store/reducers/rootReducer.js":"50","/home/dell/Documents/CLientReactJS/src/utils/index.js":"51","/home/dell/Documents/CLientReactJS/src/components/CustomScrollbars.js":"52","/home/dell/Documents/CLientReactJS/src/store/reducers/appReducer.js":"53","/home/dell/Documents/CLientReactJS/src/store/reducers/userReducer.js":"54","/home/dell/Documents/CLientReactJS/src/components/Navigator.js":"55","/home/dell/Documents/CLientReactJS/src/services/userService.js":"56","/home/dell/Documents/CLientReactJS/src/containers/System/ProductManage.js":"57","/home/dell/Documents/CLientReactJS/src/containers/System/RegisterPackageGroupOrAcc.js":"58","/home/dell/Documents/CLientReactJS/src/store/actions/index.js":"59","/home/dell/Documents/CLientReactJS/src/utils/constant.js":"60","/home/dell/Documents/CLientReactJS/src/utils/KeyCodeUtils.js":"61","/home/dell/Documents/CLientReactJS/src/utils/ToastUtil.js":"62","/home/dell/Documents/CLientReactJS/src/utils/CommonUtils.js":"63","/home/dell/Documents/CLientReactJS/src/utils/LanguageUtils.js":"64","/home/dell/Documents/CLientReactJS/src/axios.js":"65","/home/dell/Documents/CLientReactJS/src/store/actions/appActions.js":"66","/home/dell/Documents/CLientReactJS/src/store/actions/userActions.js":"67","/home/dell/Documents/CLientReactJS/src/containers/Homepage/HomePage.js":"68","/home/dell/Documents/CLientReactJS/src/containers/Homepage/Home_header.js":"69","/home/dell/Documents/CLientReactJS/src/containers/Homepage/Center/CenterFind.js":"70","/home/dell/Documents/CLientReactJS/src/containers/Homepage/Center/CenterSession.js":"71","/home/dell/Documents/CLientReactJS/src/store/actions/adminAction.js":"72","/home/dell/Documents/CLientReactJS/src/store/reducers/adminReducer.js":"73","/home/dell/Documents/CLientReactJS/src/containers/System/API/API_UserManager.js":"74","/home/dell/Documents/CLientReactJS/src/containers/System/Reducer/UserRedux.js":"75","/home/dell/Documents/CLientReactJS/src/containers/System/API/API_UserModel.js":"76","/home/dell/Documents/CLientReactJS/src/containers/System/API/API_UserModelUpdate.js":"77","/home/dell/Documents/CLientReactJS/src/containers/System/Reducer/UserReduxTable.js":"78","/home/dell/Documents/CLientReactJS/src/containers/System/Header/Header.js":"79","/home/dell/Documents/CLientReactJS/src/containers/System/Header/menuApp.js":"80","/home/dell/Documents/CLientReactJS/src/containers/Homepage/Center/DoctorModel.js":"81","/home/dell/Documents/CLientReactJS/src/containers/System/Doctor/DoctorManage.js":"82","/home/dell/Documents/CLientReactJS/src/services/index.js":"83","/home/dell/Documents/CLientReactJS/src/services/doctorService.js":"84"},{"size":897,"mtime":1631802070561,"results":"85","hashOfConfig":"86"},{"size":4951,"mtime":1631802070561,"results":"87","hashOfConfig":"86"},{"size":1431,"mtime":1631802070561,"results":"88","hashOfConfig":"86"},{"size":2637,"mtime":1632470763941,"results":"89","hashOfConfig":"86"},{"size":1057,"mtime":1631802070561,"results":"90","hashOfConfig":"86"},{"size":767,"mtime":1632470764041,"results":"91","hashOfConfig":"86"},{"size":558,"mtime":1632470764049,"results":"92","hashOfConfig":"86"},{"size":5579,"mtime":1631802070561,"results":"93","hashOfConfig":"86"},{"size":1313,"mtime":1631802070561,"results":"94","hashOfConfig":"86"},{"size":1000,"mtime":1632470764053,"results":"95","hashOfConfig":"86"},{"size":2225,"mtime":1631802070557,"results":"96","hashOfConfig":"86"},{"size":3748,"mtime":1631802070557,"results":"97","hashOfConfig":"86"},{"size":358,"mtime":1632469683394,"results":"98","hashOfConfig":"86"},{"size":932,"mtime":1632470576134,"results":"99","hashOfConfig":"86"},{"size":245,"mtime":1631802070561,"results":"100","hashOfConfig":"86"},{"size":721,"mtime":1631802070561,"results":"101","hashOfConfig":"86"},{"size":3067,"mtime":1631802070557,"results":"102","hashOfConfig":"86"},{"size":929,"mtime":1631802070561,"results":"103","hashOfConfig":"86"},{"size":670,"mtime":1632470134800,"results":"104","hashOfConfig":"86"},{"size":9080,"mtime":1631802070557,"results":"105","hashOfConfig":"86"},{"size":343,"mtime":1631802070561,"results":"106","hashOfConfig":"86"},{"size":2120,"mtime":1632821356062,"results":"107","hashOfConfig":"86"},{"size":541,"mtime":1631802070561,"results":"108","hashOfConfig":"86"},{"size":605,"mtime":1631802070561,"results":"109","hashOfConfig":"86"},{"size":61,"mtime":1632469723538,"results":"110","hashOfConfig":"86"},{"size":375,"mtime":1631802070561,"results":"111","hashOfConfig":"86"},{"size":149,"mtime":1631802070561,"results":"112","hashOfConfig":"86"},{"size":927,"mtime":1631802070561,"results":"113","hashOfConfig":"86"},{"size":2910,"mtime":1631802070561,"results":"114","hashOfConfig":"86"},{"size":651,"mtime":1631802070561,"results":"115","hashOfConfig":"86"},{"size":2433,"mtime":1632469625849,"results":"116","hashOfConfig":"86"},{"size":305,"mtime":1632469728499,"results":"117","hashOfConfig":"86"},{"size":396,"mtime":1632470192487,"results":"118","hashOfConfig":"86"},{"size":432,"mtime":1631802070557,"results":"119","hashOfConfig":"86"},{"size":4008,"mtime":1632814889884,"results":"120","hashOfConfig":"86"},{"size":117,"mtime":1632270745855,"results":"121","hashOfConfig":"86"},{"size":383,"mtime":1632818712071,"results":"122","hashOfConfig":"86"},{"size":924,"mtime":1634023345921,"results":"123","hashOfConfig":"124"},{"size":4951,"mtime":1631802070561,"results":"125","hashOfConfig":"124"},{"size":1431,"mtime":1631802070561,"results":"126","hashOfConfig":"124"},{"size":2773,"mtime":1636773905321,"results":"127","hashOfConfig":"124"},{"size":1057,"mtime":1631802070561,"results":"128","hashOfConfig":"124"},{"size":767,"mtime":1632470764041,"results":"129","hashOfConfig":"124"},{"size":4016,"mtime":1635138245086,"results":"130","hashOfConfig":"124"},{"size":557,"mtime":1633742875553,"results":"131","hashOfConfig":"124"},{"size":1896,"mtime":1636805519630,"results":"132","hashOfConfig":"124"},{"size":3748,"mtime":1631802070557,"results":"133","hashOfConfig":"124"},{"size":2225,"mtime":1631802070557,"results":"134","hashOfConfig":"124"},{"size":2443,"mtime":1636362187670,"results":"135","hashOfConfig":"124"},{"size":1129,"mtime":1635142584359,"results":"136","hashOfConfig":"124"},{"size":245,"mtime":1631802070561,"results":"137","hashOfConfig":"124"},{"size":3067,"mtime":1631802070557,"results":"138","hashOfConfig":"124"},{"size":1075,"mtime":1634463219509,"results":"139","hashOfConfig":"124"},{"size":670,"mtime":1634463277913,"results":"140","hashOfConfig":"124"},{"size":8600,"mtime":1636807708008,"results":"141","hashOfConfig":"124"},{"size":1118,"mtime":1636362192490,"results":"142","hashOfConfig":"124"},{"size":520,"mtime":1636112259300,"results":"143","hashOfConfig":"124"},{"size":605,"mtime":1631802070561,"results":"144","hashOfConfig":"124"},{"size":92,"mtime":1634463272976,"results":"145","hashOfConfig":"124"},{"size":396,"mtime":1634024793281,"results":"146","hashOfConfig":"124"},{"size":651,"mtime":1631802070561,"results":"147","hashOfConfig":"124"},{"size":2910,"mtime":1631802070561,"results":"148","hashOfConfig":"124"},{"size":149,"mtime":1631802070561,"results":"149","hashOfConfig":"124"},{"size":927,"mtime":1631802070561,"results":"150","hashOfConfig":"124"},{"size":2433,"mtime":1632469625849,"results":"151","hashOfConfig":"124"},{"size":417,"mtime":1634463224062,"results":"152","hashOfConfig":"124"},{"size":396,"mtime":1634463221729,"results":"153","hashOfConfig":"124"},{"size":745,"mtime":1634286180127,"results":"154","hashOfConfig":"124"},{"size":3136,"mtime":1635841558560,"results":"155","hashOfConfig":"124"},{"size":3633,"mtime":1635471141903,"results":"156","hashOfConfig":"124"},{"size":6213,"mtime":1636700367936,"results":"157","hashOfConfig":"124"},{"size":8531,"mtime":1636362186146,"results":"158","hashOfConfig":"124"},{"size":5731,"mtime":1636699637176,"results":"159","hashOfConfig":"124"},{"size":5608,"mtime":1636788164425,"results":"160","hashOfConfig":"124"},{"size":16391,"mtime":1636809801538,"results":"161","hashOfConfig":"124"},{"size":7373,"mtime":1636788262480,"results":"162","hashOfConfig":"124"},{"size":8308,"mtime":1636096887552,"results":"163","hashOfConfig":"124"},{"size":3505,"mtime":1636032179758,"results":"164","hashOfConfig":"124"},{"size":2244,"mtime":1636805482619,"results":"165","hashOfConfig":"124"},{"size":1541,"mtime":1636805508502,"results":"166","hashOfConfig":"124"},{"size":2655,"mtime":1636720070214,"results":"167","hashOfConfig":"124"},{"size":3810,"mtime":1636702997715,"results":"168","hashOfConfig":"124"},{"size":117,"mtime":1635137274877,"results":"169","hashOfConfig":"124"},{"size":617,"mtime":1636362193758,"results":"170","hashOfConfig":"124"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},"5xcqy5",{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"189"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"173"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"218"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"173"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"173"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"173"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"218"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},"n93ohy",{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"257"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"257"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"257"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"257"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"303"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"257"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"257"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"257"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"257"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"257"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"257"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"343","messages":"344","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"257"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"257"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"257"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"257"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"257"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},"/home/dell/Documents/ReactJS/src/index.js",[],["366","367"],"/home/dell/Documents/ReactJS/src/serviceWorker.js",[],"/home/dell/Documents/ReactJS/src/redux.js",[],"/home/dell/Documents/ReactJS/src/containers/App.js",[],"/home/dell/Documents/ReactJS/src/hoc/IntlProviderWrapper.js",[],"/home/dell/Documents/ReactJS/src/hoc/authentication.js",[],"/home/dell/Documents/ReactJS/src/routes/Home.js",[],"/home/dell/Documents/ReactJS/src/routes/Login.js",["368","369","370"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { push } from \"connected-react-router\";\n\nimport * as actions from \"../store/actions\";\nimport { KeyCodeUtils, LanguageUtils } from \"../utils\";\n\nimport userIcon from '../../src/assets/images/user.svg';\nimport passIcon from '../../src/assets/images/pass.svg';\nimport './Login.scss';\nimport { FormattedMessage } from 'react-intl';\n\nimport adminService from '../services/adminService';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.btnLogin = React.createRef();\n    }\n\n    initialState = {\n        username: '',\n        password: '',\n        loginError: ''\n    }\n\n    state = {\n        ...this.initialState\n    };\n\n    refresh = () => {\n        this.setState({\n            ...this.initialState\n        })\n    }\n\n    onUsernameChange = (e) => {\n        this.setState({ username: e.target.value })\n    }\n\n    onPasswordChange = (e) => {\n        this.setState({ password: e.target.value })\n    }\n\n    redirectToSystemPage = () => {\n        const { navigate } = this.props;\n        const redirectPath = '/system/user-manage';\n        navigate(`${redirectPath}`);\n    }\n\n    processLogin = () => {\n        const { username, password } = this.state;\n\n        const { adminLoginSuccess, adminLoginFail } = this.props;\n        let loginBody = {\n            username: 'admin',\n            password: '123456'\n        }\n        //sucess\n        let adminInfo = {\n            \"tlid\": \"0\",\n            \"tlfullname\": \"Administrator\",\n            \"custype\": \"A\",\n            \"accessToken\": \"eyJhbGciOiJIU\"\n        }\n\n        adminLoginSuccess(adminInfo);\n        this.refresh();\n        this.redirectToSystemPage();\n        try {\n            adminService.login(loginBody)\n        } catch (e) {\n            console.log('error login : ', e)\n        }\n\n    }\n\n    handlerKeyDown = (event) => {\n        const keyCode = event.which || event.keyCode;\n        if (keyCode === KeyCodeUtils.ENTER) {\n            event.preventDefault();\n            if (!this.btnLogin.current || this.btnLogin.current.disabled) return;\n            this.btnLogin.current.click();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.handlerKeyDown);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.handlerKeyDown);\n        // fix Warning: Can't perform a React state update on an unmounted component\n        this.setState = (state, callback) => {\n            return;\n        };\n    }\n\n    render() {\n        const { username, password, loginError } = this.state;\n        const { lang } = this.props;\n\n        return (\n            <div className=\"login-wrapper\">\n                <div className=\"login-container\">\n                    <div className=\"form_login\">\n                        <h2 className=\"title\">\n                            <FormattedMessage id=\"login.login\" />\n                        </h2>\n                        <div className=\"form-group icon-true\">\n                            <img className=\"icon\" src={userIcon} alt=\"this\" />\n                            <input\n                                placeholder={LanguageUtils.getMessageByKey(\"login.username\", lang)}\n                                id=\"username\"\n                                name=\"username\"\n                                type=\"text\"\n                                className=\"form-control\"\n                                value={username}\n                                onChange={this.onUsernameChange}\n                            />\n                        </div>\n\n                        <div id=\"phone-input-container\" className=\"form-group icon-true\">\n                            <img className=\"icon\" src={passIcon} alt=\"this\" />\n                            <input\n                                placeholder={LanguageUtils.getMessageByKey(\"login.password\", lang)}\n                                id=\"password\"\n                                name=\"password\"\n                                type=\"password\"\n                                className=\"form-control\"\n                                value={password}\n                                onChange={this.onPasswordChange}\n                            />\n                        </div>\n\n                        {loginError !== '' && (\n                            <div className='login-error'>\n                                <span className='login-error-message'>{loginError}</span>\n                            </div>\n                        )}\n\n                        <div className=\"form-group login\">\n                            <input\n                                ref={this.btnLogin}\n                                id=\"btnLogin\"\n                                type=\"submit\"\n                                className=\"btn\"\n                                value={LanguageUtils.getMessageByKey(\"login.login\", lang)}\n                                onClick={this.processLogin}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        lang: state.app.language\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        navigate: (path) => dispatch(push(path)),\n        adminLoginSuccess: (adminInfo) => dispatch(actions.adminLoginSuccess(adminInfo)),\n        adminLoginFail: () => dispatch(actions.adminLoginFail()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n",["371","372"],"/home/dell/Documents/ReactJS/src/routes/System.js",[],"/home/dell/Documents/ReactJS/src/containers/Header/Header.js",[],"/home/dell/Documents/ReactJS/src/components/CustomToast.js",[],"/home/dell/Documents/ReactJS/src/components/ConfirmModal.js",[],"/home/dell/Documents/ReactJS/src/store/actions/actionTypes.js",[],"/home/dell/Documents/ReactJS/src/store/reducers/rootReducer.js",["373"],"import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\n\nimport appReducer from \"./appReducer\";\n\nimport userReducer from \"./userReducer\";\n\nimport autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\nimport storage from \"redux-persist/lib/storage\";\nimport { persistReducer } from \"redux-persist\";\n\nconst persistCommonConfig = {\n  storage: storage,\n  stateReconciler: autoMergeLevel2,\n};\n\n// const adminPersistConfig = {\n//     ...persistCommonConfig,\n//     key: 'admin',\n//     whitelist: ['isLoggedIn', 'adminInfo']\n// };\nconst userPersistConfig = {\n  ...persistCommonConfig,\n  key: \"user\",\n  whitelist: [\"isLoggedIn\", \"userInfo\"],\n};\n\nexport default (history) =>\n  combineReducers({\n    router: connectRouter(history),\n    // admin: persistReducer(adminPersistConfig, adminReducer),\n    user: persistReducer(userPersistConfig, userReducer),\n    app: appReducer,\n  });\n","/home/dell/Documents/ReactJS/src/utils/index.js",[],"/home/dell/Documents/ReactJS/src/containers/Header/menuApp.js",[],"/home/dell/Documents/ReactJS/src/components/CustomScrollbars.js",[],"/home/dell/Documents/ReactJS/src/store/reducers/appReducer.js",[],"/home/dell/Documents/ReactJS/src/store/reducers/userReducer.js",[],"/home/dell/Documents/ReactJS/src/components/Navigator.js",[],"/home/dell/Documents/ReactJS/src/services/adminService.js",["374"],"import axios from '../axios';\nimport * as queryString from 'query-string';\n\nconst adminService = {\n\n    /**\n     * Đăng nhập hệ thống\n     * {\n     *  \"username\": \"string\",\n     *  \"password\": \"string\"\n     * }\n     */\n    login(loginBody) {\n        return axios.post(`/admin/login`, loginBody)\n    },\n\n};\n\nexport default adminService;",["375","376"],"/home/dell/Documents/ReactJS/src/containers/System/UserManage.js",["377"],"/home/dell/Documents/ReactJS/src/containers/System/ProductManage.js",["378"],"import React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nclass ProductManage extends Component {\n\n    state = {\n\n    }\n\n    componentDidMount() {\n    }\n\n\n    render() {\n        return (\n            <div className=\"text-center\" >Manage products</div>\n        )\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductManage);\n","/home/dell/Documents/ReactJS/src/containers/System/RegisterPackageGroupOrAcc.js",["379","380"],"import React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nclass RegisterPackageGroupOrAcc extends Component {\n\n    constructor(props) {\n        super(props);\n\n    }\n\n\n\n    render() {\n        return (\n            <div className=\"text-center\">\n                register package group or account\n            </div>)\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterPackageGroupOrAcc);\n","/home/dell/Documents/ReactJS/src/store/actions/index.js",[],"/home/dell/Documents/ReactJS/src/utils/constant.js",[],"/home/dell/Documents/ReactJS/src/utils/CommonUtils.js",[],"/home/dell/Documents/ReactJS/src/utils/LanguageUtils.js",[],"/home/dell/Documents/ReactJS/src/utils/ToastUtil.js",[],"/home/dell/Documents/ReactJS/src/utils/KeyCodeUtils.js",[],"/home/dell/Documents/ReactJS/src/axios.js",["381","382"],"import axios from \"axios\";\nimport _ from \"lodash\";\n// import config from './config';\n\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_URL,\n  // withCredentials: true,\n});\n\ninstance.interceptors.response.use(\n  // Thrown error for request with OK status code\n  (response) => {\n    const { data } = response;\n    return response.data;\n  }\n);\n\nexport default instance;\n// const createError = (\n//   httpStatusCode,\n//   statusCode,\n//   errorMessage,\n//   problems,\n//   errorCode = \"\"\n// ) => {\n//   const error = new Error();\n//   error.httpStatusCode = httpStatusCode;\n//   error.statusCode = statusCode;\n//   error.errorMessage = errorMessage;\n//   error.problems = problems;\n//   error.errorCode = errorCode + \"\";\n//   return error;\n// };\n\n// export const isSuccessStatusCode = (s) => {\n//   // May be string or number\n//   const statusType = typeof s;\n//   return (\n//     (statusType === \"number\" && s === 0) ||\n//     (statusType === \"string\" && s.toUpperCase() === \"OK\")\n//   );\n// };\n//     if (\n//       data.hasOwnProperty(\"s\") &&\n//       !isSuccessStatusCode(data[\"s\"]) &&\n//       data.hasOwnProperty(\"errmsg\")\n//     ) {\n//       return Promise.reject(\n//         createError(\n//           response.status,\n//           data[\"s\"],\n//           data[\"errmsg\"],\n//           null,\n//           data[\"errcode\"] ? data[\"errcode\"] : \"\"\n//         )\n//       );\n//     }\n\n//     // Return direct data to callnback\n//     if (data.hasOwnProperty(\"s\") && data.hasOwnProperty(\"d\")) {\n//       return data[\"d\"];\n//     }\n//     // Handle special case\n//     if (data.hasOwnProperty(\"s\") && _.keys(data).length === 1) {\n//       return null;\n//     }\n//     return response.data;\n//   },\n//   (error) => {\n//     const { response } = error;\n//     if (response == null) {\n//       return Promise.reject(error);\n//     }\n\n//     const { data } = response;\n\n//     if (data.hasOwnProperty(\"s\") && data.hasOwnProperty(\"errmsg\")) {\n//       return Promise.reject(\n//         createError(response.status, data[\"s\"], data[\"errmsg\"])\n//       );\n//     }\n\n//     if (data.hasOwnProperty(\"code\") && data.hasOwnProperty(\"message\")) {\n//       return Promise.reject(\n//         createError(\n//           response.status,\n//           data[\"code\"],\n//           data[\"message\"],\n//           data[\"problems\"]\n//         )\n//       );\n//     }\n\n//     return Promise.reject(createError(response.status));\n//   }\n// );\n","/home/dell/Documents/ReactJS/src/store/actions/appActions.js",[],"/home/dell/Documents/ReactJS/src/store/actions/userActions.js",[],"/home/dell/Documents/ReactJS/src/config.js",["383"],"export default {\n    api: {\n        API_BASE_URL: \"http://localhost:8080/\",\n        ROUTER_BASE_NAME: null,\n    },\n    app: {\n        /**\n         * The base URL for all locations. If your app is served from a sub-directory on your server, you'll want to set\n         * this to the sub-directory. A properly formatted basename should have a leading slash, but no trailing slash.\n         */\n        ROUTER_BASE_NAME: null,\n    }\n};\n","/home/dell/Documents/ReactJS/src/containers/LAR/Login.js",["384","385","386"],"/home/dell/Documents/ReactJS/src/services/index.js",[],"/home/dell/Documents/ReactJS/src/services/userService.js",[],"/home/dell/Documents/CLientReactJS/src/index.js",[],["387","388"],"/home/dell/Documents/CLientReactJS/src/serviceWorker.js",[],"/home/dell/Documents/CLientReactJS/src/redux.js",[],"/home/dell/Documents/CLientReactJS/src/containers/App.js",["389","390"],"import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { ConnectedRouter as Router } from \"connected-react-router\";\nimport { history } from \"../redux\";\nimport { ToastContainer } from \"react-toastify\";\n\nimport {\n  userIsAuthenticated,\n  userIsNotAuthenticated,\n} from \"../hoc/authentication\";\n\nimport { path } from \"../utils\";\n\nimport Home from \"../routes/Home\";\nimport Login from \"./LAR/Login\";\nimport Header from \"./System/Header/Header\";\nimport System from \"../routes/System\";\nimport CustomScrollbars from \"../components/CustomScrollbars\";\n\nimport HomePage from \"./Homepage/HomePage.js\";\nimport CustomToastCloseButton from \"../components/CustomToast\";\n// import ConfirmModal from \"../components/ConfirmModal\";\n\nclass App extends Component {\n  handlePersistorState = () => {\n    const { persistor } = this.props;\n    let { bootstrapped } = persistor.getState();\n    if (bootstrapped) {\n      if (this.props.onBeforeLift) {\n        Promise.resolve(this.props.onBeforeLift())\n          .then(() => this.setState({ bootstrapped: true }))\n          .catch(() => this.setState({ bootstrapped: true }));\n      } else {\n        this.setState({ bootstrapped: true });\n      }\n    }\n  };\n\n  componentDidMount() {\n    this.handlePersistorState();\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <Router history={history}>\n          <div className=\"main-container\">\n            {/* <ConfirmModal /> */}\n            <span className=\"content-container\">\n              <Switch>\n                <Route path={path.HOME} exact component={Home} />\n                <Route\n                  path={path.LOGIN}\n                  component={userIsNotAuthenticated(Login)}\n                />\n\n                <Route\n                  path={path.SYSTEM}\n                  component={userIsAuthenticated(System)}\n                />\n                <CustomScrollbars style={{ height: \"100vh\", width: \"100%\" }}>\n                  <Route path={path.HOMEPAGE} component={HomePage} />\n                </CustomScrollbars>\n              </Switch>\n            </span>\n            <ToastContainer\n              position=\"top-right\"\n              autoClose={5000}\n              hideProgressBar={false}\n              newestOnTop={false}\n              closeOnClick\n              rtl={false}\n              pauseOnFocusLoss\n              draggable\n              pauseOnHover\n            />\n          </div>\n        </Router>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    started: state.app.started,\n    isLoggedIn: state.user.isLoggedIn,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","/home/dell/Documents/CLientReactJS/src/hoc/IntlProviderWrapper.js",[],"/home/dell/Documents/CLientReactJS/src/hoc/authentication.js",[],"/home/dell/Documents/CLientReactJS/src/containers/LAR/Login.js",["391","392","393"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { push } from \"connected-react-router\";\nimport * as actions from \"../../store/actions\";\nimport \"./Login.scss\";\nimport { divide } from \"lodash\";\nimport { Fragment } from \"react\";\n// import * as userservice from \"../../services/userService\";\nimport { handleLoginApi } from \"../../services/userService\";\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      isshowpassword: false,\n      errMessage: \"\",\n    };\n  }\n  handleonchangeUsername = (event) => {\n    this.setState({\n      email: event.target.value,\n    });\n  };\n  handleonchangePassword = (event) => {\n    this.setState({\n      password: event.target.value,\n    });\n  };\n\n  handleLogin = async () => {\n    this.setState({\n      errMessage: \"\",\n    });\n\n    try {\n      let data = await handleLoginApi(this.state.email, this.state.password);\n      if (data && data.errcode != 0) {\n        this.setState({\n          errMessage: data.message,\n        });\n      }\n      if (data && data.errcode == 0) {\n        console.log(data);\n        this.props.userLoginSuccess(data.user);\n      }\n    } catch (error) {\n      if (error.response) {\n        if (error.response.data) {\n          this.setState({\n            errMessage: error.response.data.message,\n          });\n        }\n      }\n    }\n  };\n\n  handleShowHidePassword = () => {\n    this.setState({\n      isshowpassword: !this.state.isshowpassword,\n    });\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <div className=\"divF\">\n          <div className=\"form-login\">\n            <div className=\"frontpager\">Sign Up</div>\n            <div className=\"form-field\">\n              <input\n                placeholder=\" \"\n                type=\"text\"\n                className=\"form-input\"\n                value={this.state.email}\n                onChange={(event) => this.handleonchangeUsername(event)}\n              ></input>\n              <label htmlFor=\"name\" className=\"form-label\" form=\"form-label\">\n                Name\n              </label>\n            </div>\n            <div className=\"form-field\">\n              <input\n                placeholder=\" \"\n                className=\"form-input\"\n                value={this.state.password}\n                type={this.state.isshowpassword ? \"text\" : \"password\"}\n                onChange={(event) => this.handleonchangePassword(event)}\n              ></input>\n              <label htmlFor=\"name\" className=\"form-label\" form=\"form-label\">\n                Password\n              </label>\n              <span\n                onClick={() => {\n                  this.handleShowHidePassword();\n                }}\n              >\n                <i\n                  className={\n                    this.state.isshowpassword\n                      ? \"far fa-eye\"\n                      : \"far fa-eye-slash\"\n                  }\n                ></i>\n              </span>\n            </div>\n            <div className=\"col-12 error\" style={{ color: \"red\" }}>\n              {this.state.errMessage}\n            </div>\n\n            <button\n              className=\"form-btn\"\n              onClick={() => {\n                this.handleLogin();\n              }}\n            >\n              Login\n            </button>\n            <div className=\"form-register\">\n              <span>Forgot your password?</span>\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    lang: state.app.language,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    navigate: (path) => dispatch(push(path)),\n    // adminLoginSuccess: (adminInfo) =>\n    //   dispatch(actions.adminLoginSuccess(adminInfo)),\n    // userLoginFail: () => dispatch(actions.userLoginFail()),\n    userLoginSuccess: (userInfo) =>\n      dispatch(actions.userLoginSuccess(userInfo)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","/home/dell/Documents/CLientReactJS/src/routes/Home.js",[],"/home/dell/Documents/CLientReactJS/src/routes/System.js",["394","395"],"/home/dell/Documents/CLientReactJS/src/components/ConfirmModal.js",[],["396","397"],"/home/dell/Documents/CLientReactJS/src/components/CustomToast.js",[],"/home/dell/Documents/CLientReactJS/src/store/actions/actionTypes.js",[],"/home/dell/Documents/CLientReactJS/src/store/reducers/rootReducer.js",["398"],"import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\n\nimport appReducer from \"./appReducer\";\n\nimport userReducer from \"./userReducer\";\n\nimport autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\nimport storage from \"redux-persist/lib/storage\";\nimport { persistReducer } from \"redux-persist\";\nimport adminReducer from \"./adminReducer\";\n\nconst persistCommonConfig = {\n  storage: storage,\n  stateReconciler: autoMergeLevel2,\n};\n\n// const adminPersistConfig = {\n//     ...persistCommonConfig,\n//     key: 'admin',\n//     whitelist: ['isLoggedIn', 'adminInfo']\n// };\nconst userPersistConfig = {\n  ...persistCommonConfig,\n  key: \"user\",\n  whitelist: [\"isLoggedIn\", \"userInfo\"],\n};\nconst appPersistConfig = {\n  ...persistCommonConfig,\n  key: \"app\",\n  whitelist: [\"language\"]\n}\n\n\nexport default (history) =>\n  combineReducers({\n    router: connectRouter(history),\n    // admin: persistReducer(adminPersistConfig, adminReducer),\n    user: persistReducer(userPersistConfig, userReducer),\n    app: persistReducer(appPersistConfig, appReducer),\n    admin: adminReducer\n  });\n","/home/dell/Documents/CLientReactJS/src/utils/index.js",[],"/home/dell/Documents/CLientReactJS/src/components/CustomScrollbars.js",[],"/home/dell/Documents/CLientReactJS/src/store/reducers/appReducer.js",[],"/home/dell/Documents/CLientReactJS/src/store/reducers/userReducer.js",[],"/home/dell/Documents/CLientReactJS/src/components/Navigator.js",["399"],"/home/dell/Documents/CLientReactJS/src/services/userService.js",[],"/home/dell/Documents/CLientReactJS/src/containers/System/ProductManage.js",["400"],"import React, { Component } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { connect } from \"react-redux\";\nclass ProductManage extends Component {\n  state = {};\n\n  componentDidMount() {}\n\n  render() {\n    return (\n      <div className=\"text-center\">\n        <h1> 404 not found</h1>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductManage);\n","/home/dell/Documents/CLientReactJS/src/containers/System/RegisterPackageGroupOrAcc.js",["401","402"],["403","404"],"/home/dell/Documents/CLientReactJS/src/store/actions/index.js",[],"/home/dell/Documents/CLientReactJS/src/utils/constant.js",[],"/home/dell/Documents/CLientReactJS/src/utils/KeyCodeUtils.js",[],"/home/dell/Documents/CLientReactJS/src/utils/ToastUtil.js",[],"/home/dell/Documents/CLientReactJS/src/utils/CommonUtils.js",[],"/home/dell/Documents/CLientReactJS/src/utils/LanguageUtils.js",[],"/home/dell/Documents/CLientReactJS/src/axios.js",["405","406"],"/home/dell/Documents/CLientReactJS/src/store/actions/appActions.js",[],"/home/dell/Documents/CLientReactJS/src/store/actions/userActions.js",[],"/home/dell/Documents/CLientReactJS/src/containers/Homepage/HomePage.js",["407","408","409"],"import React, { Component, Fragment } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport Home_header from \"./Home_header\";\nimport CenterFind from \"./Center/CenterFind\";\nimport CenterSession from \"./Center/CenterSession\";\nclass HomePage extends Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n\n\n        return (\n            <div>\n                <Home_header />\n                <CenterFind />\n                <CenterSession />\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isLoggedIn: state.user.isLoggedIn,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n","/home/dell/Documents/CLientReactJS/src/containers/Homepage/Home_header.js",["410","411","412","413","414"],"import React, { Component, Fragment } from \"react\";\nimport \"./Home_header.scss\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\nimport { LANGUAGE } from \"../../utils\";\nimport { chengeLanguageApp } from \"../../store/actions\";\n\nclass Home_header extends Component {\n  changeLanguage = (language) => {\n    this.props.changelanguageAppRedux(language);\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <div className=\"header\">\n          <div className=\"header-item\">\n            <i class=\"fas fa-bars\"></i>\n            <div className=\"header-logo\">\n              <div className=\"name_logo\">\n                <h3>We</h3>\n                <span>\n                  <h3>Care.</h3>\n                  <i class=\"fab fa-amazon-pay\"></i>\n                </span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"header-login\">\n            <span\n              className={\n                this.props.language === LANGUAGE.VI\n                  ? \"language-vi active\"\n                  : \"language\"\n              }\n              onClick={() => this.changeLanguage(LANGUAGE.VI)}\n            >\n              VN\n            </span>\n            <span\n              className={\n                this.props.language === LANGUAGE.EN\n                  ? \"language-en active\"\n                  : \"language\"\n              }\n              onClick={() => this.changeLanguage(LANGUAGE.EN)}\n            >\n              EN\n            </span>\n            <a href=\"#\" className=\"support\">\n              <i class=\"far fa-question-circle\">\n                <FormattedMessage id={\"homeheader.support\"} />\n              </i>\n            </a>\n          </div>\n        </div>\n        <div className=\"header-navbar\">\n          <ul>\n            <li className=\"navbar-item\">\n              <i class=\"fas fa-notes-medical\"></i>\n              <a href=\"#\">\n                <FormattedMessage id={\"homeheader.speciality\"} />\n              </a>\n            </li>\n            <li className=\"navbar-item\">\n              <i class=\"fas fa-hospitals\"></i>\n              <i class=\"fas fa-hospital-alt\"></i>\n              <a href=\"#\">\n                {\" \"}\n                <FormattedMessage id={\"homeheader.health-facilities\"} />\n              </a>\n            </li>\n            <li className=\"navbar-item\">\n              <i class=\"fas fa-user-md\"></i>\n\n              <a href=\"#\">\n                <FormattedMessage id={\"homeheader.doctor\"} />\n              </a>\n            </li>\n            <li className=\"navbar-item\">\n              <i class=\"fas fa-stethoscope\"></i>\n              <a href=\"#\">\n                <FormattedMessage id={\"homeheader.call-speciality\"} />\n              </a>\n            </li>\n          </ul>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoggedIn: state.user.isLoggedIn,\n    language: state.app.language,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    changelanguageAppRedux: (language) => dispatch(chengeLanguageApp(language)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home_header);\n","/home/dell/Documents/CLientReactJS/src/containers/Homepage/Center/CenterFind.js",["415"],"import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./CenterFind.scss\";\nimport { FormattedMessage } from \"react-intl\";\nimport * as actions from \"../../../store/actions\";\n\nclass CenterFind extends Component {\n  render() {\n    return (\n      <Fragment>\n        <div className=\"CenterFind\">\n          <div className=\"Center-description\">\n            <div className=\" description-name\">\n              <h2>\n                <FormattedMessage id={\"center.descriptionname1\"} />\n              </h2>\n              <h5>\n                <FormattedMessage id={\"center.descriptionname2\"} />\n              </h5>\n            </div>\n            <input\n              className=\"Enter_your \"\n              type=\"text\"\n              placeholder=\"Enter your\"\n            ></input>\n            <button>\n              <i class=\"fas fa-search\"></i>\n            </button>\n          </div>\n          <div className=\"Img_description\">\n            <img src=\"https://secureservercdn.net/160.153.138.219/i1z.121.myftpupload.com/wp-content/uploads/2020/02/female-doctor-long-683x1024.jpg\"></img>\n            <div className=\"chat_description1\"></div>\n            <div className=\"chat_description2\"></div>\n            <div className=\"chat_description3\"></div>\n          </div>\n        </div>\n        <div className=\"Fastest\">\n          <div className=\"fastname_min\">\n            <FormattedMessage id={\"center.fastest\"} />\n          </div>\n          <div className=\"fastname_max\">\n            <FormattedMessage id={\"center.easy-steps\"} />\n          </div>\n          <div className=\"Fastest-item\">\n            <div className=\"item\">\n              <div className=\"icon\">\n                <i class=\"fas fa-user\"></i>\n              </div>\n              <div className=\"name-item\">\n                <FormattedMessage id={\"center.search\"} />\n              </div>\n              <div className=\"containt-item\">\n                <FormattedMessage id={\"center.search-contant\"} />\n              </div>\n            </div>\n            <div className=\"item\">\n              <div className=\"icon\">\n                <i class=\"fas fa-user\"></i>\n              </div>\n              <div className=\"name-item\">\n                <FormattedMessage id={\"center.check\"} />\n              </div>\n              <div className=\"containt-item\">\n                <FormattedMessage id={\"center.check-contant\"} />\n              </div>\n            </div>\n            <div className=\"item\">\n              <div className=\"icon\">\n                <i class=\"far fa-calendar-alt\"></i>\n              </div>\n              <div className=\"name-item\">\n                <FormattedMessage id={\"center.schedule\"} />\n              </div>\n              <div className=\"containt-item\">\n                <FormattedMessage id={\"center.schedule-contant\"} />\n              </div>\n            </div>\n            <div className=\"item\">\n              <div className=\"icon\">\n                <i class=\"far fa-lightbulb\"></i>\n              </div>\n              <div className=\"name-item\">\n                <FormattedMessage id={\"center.get-solution\"} />\n              </div>\n              <div className=\"containt-item\">\n                <FormattedMessage id={\"center.get-solution-contant\"} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoggedIn: state.user.isLoggedIn,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    processLogout: () => dispatch(actions.processLogout()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CenterFind);\n","/home/dell/Documents/CLientReactJS/src/containers/Homepage/Center/CenterSession.js",["416"],"import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./CenterSession.scss\";\nimport * as actions from \"../../../store/actions\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { FormattedMessage } from \"react-intl\";\nimport { LANGUAGE } from \"../../../utils\";\nimport { chengeLanguageApp } from \"../../../store/actions\";\nimport DoctorModel from \"./DoctorModel\";\n\nclass CenterSession extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpenModal: false,\n      detailDoctor: [],\n    };\n  }\n  componentDidMount() {\n    this.props.fetchAllDoctorStart();\n    this.props.changelanguageAppRedux();\n  }\n  handleOnlick = async (idDoctor) => {\n    try {\n      await this.props.fetchOneDoctorStart(idDoctor);\n      if (!this.props.isLoading) {\n        this.setState({\n          isOpenModal: true,\n          detailDoctor: this.props.doctor,\n        });\n      }\n    } catch (e) {\n      console.log(\"errorr: \", e);\n    }\n  };\n  toggleModal = () => {\n    this.setState({\n      isOpenModal: !this.state.isOpenModal,\n    });\n  };\n\n  render() {\n    let newdoctors = this.props.newDoctors;\n\n    let settings = {\n      dots: false,\n      infinite: false,\n      speed: 500,\n      slidesToShow: 5,\n      slidesToScroll: 1,\n      initialSlide: 5,\n      responsive: [\n        {\n          breakpoint: 1024,\n          settings: {\n            slidesToShow: 2,\n            slidesToScroll: 1,\n            infinite: true,\n            dots: false,\n          },\n        },\n        {\n          breakpoint: 600,\n          settings: {\n            slidesToShow: 2,\n            slidesToScroll: 1,\n            initialSlide: 2,\n          },\n        },\n        {\n          breakpoint: 480,\n          settings: {\n            slidesToShow: 1,\n            slidesToScroll: 1,\n          },\n        },\n      ],\n    };\n    return (\n      <Fragment>\n        {this.state.isOpenModal && (\n          <DoctorModel\n            detailDoctor={this.state.detailDoctor}\n            isOpen={this.state.isOpenModal}\n            toggleModal={this.toggleModal}\n          />\n        )}\n        <div className=\"selection-doctor\">\n          <h4>\n            <FormattedMessage id={\"center.search\"} />\n          </h4>\n          <Slider {...settings}>\n            {newdoctors &&\n              newdoctors.length > 0 &&\n              newdoctors.map((item) => {\n                return (\n                  <div className=\"slick-item\">\n                    <img\n                      src={item.image}\n                      onClick={() => {\n                        this.handleOnlick(item.id);\n                      }}\n                    />\n                    <div className=\"slick-information\">\n                      <span>\n                        {\" \"}\n                        {this.props.language === LANGUAGE.VI\n                          ? item.firstName + item.lastName\n                          : item.lastName + item.firstName}\n                      </span>\n\n                      <span>\n                        {this.props.language === LANGUAGE.VI\n                          ? item.positionData.valueVi\n                          : item.positionData.valueEn}\n                      </span>\n                    </div>\n                  </div>\n                );\n              })}\n\n            {/* <div className=\"slick-item\">\n              <a href=\"#\">\n                <img src=\"https://www.onekeydata.com/images/uploads/opening/doctor_emails.png\" />\n              </a>{\" \"}\n            </div>\n            <div className=\"slick-item\">\n              <a href=\"#\">\n                <img src=\"https://www.healthecareers.com/binaries/content/gallery/healthecareers-us-en/article-features/2019/retireddoctor.jpg\" />\n              </a>{\" \"}\n            </div>\n            <div className=\"slick-item\">\n              <a href=\"#\">\n                <img src=\"https://forum.facmedicine.com/attachments/aba743607270cd81e7e36d064ffffab7-_-jpg.19083/\" />\n              </a>{\" \"}\n            </div>\n            <div className=\"slick-item\">\n              <a href=\"#\">\n                <img src=\"https://images.squarespace-cdn.com/content/v1/561feb4ee4b0de0eb30d6d3c/1547850788658-Q2DK9SKK3KVSM1QMVF21/femaledoctor.png?format=1500w\" />\n              </a>{\" \"}\n            </div>\n            <div className=\"slick-item\">\n              <a href=\"#\">\n                <img src=\"https://www.guelphfht.com/wp-content/uploads/2015/09/Female-Doctor-300x279.jpg\" />\n              </a>{\" \"}\n            </div>\n            <div className=\"slick-item\">\n              <a href=\"#\">\n                <img src=\"https://ak.picdn.net/shutterstock/videos/4520843/thumb/2.jpg\" />\n              </a>{\" \"}\n            </div>\n            <div className=\"slick-item\">\n              <a href=\"#\">\n                <img src=\"https://joanna678s.files.wordpress.com/2015/03/doctor.jpg\" />\n              </a>{\" \"}\n            </div>\n            <div className=\"slick-item\">\n              <a href=\"#\">\n                <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQftj1a4PyZZBfQv_B5mWWE_qzlkSrfTpfvGugcQIBAzIvv30o9zrUxMMlFC3kOdGnF0tM&usqp=CAU\" />\n              </a>{\" \"}\n            </div>\n            <div className=\"slick-item\">\n              <a href=\"#\">\n                <img src=\"https://www.riglocums.com/wp-content/uploads/2016/01/UK-Medical-staff.jpg\" />\n              </a>{\" \"}\n            </div> */}\n          </Slider>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoggedIn: state.user.isLoggedIn,\n    language: state.app.language,\n    newDoctors: state.admin.doctors,\n    doctor: state.admin.doctor,\n    isLoading: state.admin.isLoading,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    processLogout: () => dispatch(actions.processLogout()),\n    changelanguageAppRedux: (language) => dispatch(chengeLanguageApp(language)),\n    fetchAllDoctorStart: () => dispatch(actions.fetchAllDoctorStart()),\n    fetchOneDoctorStart: (iddoctor) =>\n      dispatch(actions.fetchOneDoctorStart(iddoctor)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CenterSession);\n","/home/dell/Documents/CLientReactJS/src/store/actions/adminAction.js",[],"/home/dell/Documents/CLientReactJS/src/store/reducers/adminReducer.js",[],"/home/dell/Documents/CLientReactJS/src/containers/System/API/API_UserManager.js",["417","418","419"],"import React, { Component, Fragment } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { connect } from \"react-redux\";\nimport \"./API_UserManager.scss\";\nimport {\n  getAlluser,\n  createNewUserService,\n  deleteUserService,\n  updateUserService,\n} from \"../../../services/userService\";\nimport API_UserModel from \"./API_UserModel\";\nimport API_UserModelUpdate from \"./API_UserModelUpdate\";\n\nclass API_UserManager extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      arrUsers: [],\n      isOpenModal: false,\n      userUpdate: {},\n      isOpenUpdateModal: false,\n    };\n  }\n  handleAddnewuser = () => {\n    this.setState({\n      isOpenModal: true,\n    });\n  };\n  toggleModal = () => {\n    this.setState({\n      isOpenModal: !this.state.isOpenModal,\n    });\n  };\n  toggleUpdateModal = () => {\n    this.setState({\n      isOpenUpdateModal: !this.state.isOpenUpdateModal,\n    });\n  };\n\n  async componentDidMount() {\n    await this.getAllUserService();\n  }\n  getAllUserService = async () => {\n    let response = await getAlluser(\"All\");\n    if (response && response.errcode === 0) {\n      this.setState({\n        arrUsers: response.users,\n      });\n      //     () => {\n      //       console.log(\"check one \", this.state.arrUsers);\n      //     }//conpact when async\n      //   );\n      //   console.log(\"check two \", this.state.arrUsers);\n    }\n  };\n  createNewUser = async (data) => {\n    try {\n      let response = await createNewUserService(data);\n      // console.log(\"check :\", response);\n\n      if (response && response.users.errcode !== 0) {\n        // alert(response.message);\n        alert(response.users.message);\n      } else {\n        alert(\"All new user succesful\");\n        await this.getAllUserService();\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  handeleUpdateService = (userupdate) => {\n    this.setState({\n      userUpdate: userupdate.item,\n      isOpenUpdateModal: true,\n    });\n  };\n  handeleDeleteService = async (userdelete) => {\n    try {\n      console.log(\"id: \", userdelete.item.id);\n      let response = await deleteUserService(userdelete.item.id);\n      // console.log(\"delete: \", response);\n      // console.log(\"errovode: \", response.deleteuser.errcode);\n      if (response && response.deleteuser.errcode !== 0) {\n        // alert(response.message);\n        alert(response.deleteuser.message);\n      } else {\n        alert(\"delete user succesfull\");\n        await this.getAllUserService();\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  handleUpdateOneUser = async (user) => {\n    let response = await updateUserService(user);\n    console.log(\"update: \", response);\n    if (response && response.updateuser.errcode !== 0) {\n      alert(response.updateuser.message);\n    } else {\n      alert(\"update user succesfull\");\n      await this.getAllUserService();\n    }\n  };\n\n  render() {\n    let arrUsers = this.state.arrUsers;\n\n    return (\n      <Fragment>\n        <div className=\"text-center\">\n          <API_UserModel\n            createNewUser={this.createNewUser}\n            isOpen={this.state.isOpenModal}\n            toggleModal={this.toggleModal}\n          />\n          {this.state.isOpenUpdateModal && (\n            <API_UserModelUpdate\n              UserUpdate={this.state.userUpdate}\n              isOpen={this.state.isOpenUpdateModal}\n              // isOpen={true}\n              toggleModal={this.toggleUpdateModal}\n              updateOneUser={this.handleUpdateOneUser}\n            />\n          )}\n\n          <button\n            style={{ left: \"10px\" }}\n            className=\"btn1\"\n            onClick={() => {\n              this.handleAddnewuser();\n            }}\n          >\n            <i className=\"fas fa-user-plus\"></i>\n            Add new User\n          </button>\n          <table className=\"table\">\n            <thead className=\"thead-dark\">\n              <tr className=\"table-danger\">\n                <th scope=\"col\">STT</th>\n                <th scope=\"col\">Email</th>\n                <th scope=\"col\">First name</th>\n                <th scope=\"col\">Last name</th>\n                <th scope=\"col\">Address</th>\n                <th scope=\"col\">Gender</th>\n                <th scope=\"col\">Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {arrUsers &&\n                arrUsers.map((item, index) => {\n                  return (\n                    <tr>\n                      <th scope=\"row\">{index}</th>\n                      <td>{item.email}</td>\n                      <td>{item.firstName}</td>\n                      <td>{item.lastName}</td>\n                      <td>{item.address}</td>\n                      <td>{item.gender}</td>\n                      <td>\n                        <button\n                          onClick={() => {\n                            this.handeleUpdateService({ item });\n                          }}\n                        >\n                          Edit\n                        </button>\n                        <button\n                          onClick={() => {\n                            this.handeleDeleteService({ item });\n                          }}\n                        >\n                          Delete\n                        </button>\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(API_UserManager);\n","/home/dell/Documents/CLientReactJS/src/containers/System/Reducer/UserRedux.js",["420"],"/home/dell/Documents/CLientReactJS/src/containers/System/API/API_UserModel.js",["421"],"import React, { Component, Fragment } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { connect } from \"react-redux\";\n\n// import { Button, Modal } from \"reactstrap\";\nimport {\n  FormGroup,\n  Row,\n  Col,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n} from \"reactstrap\";\nclass API_UserModel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      firstname: \"\",\n      lastname: \"\",\n      address: \"\",\n      phonenumber: \"\",\n      gender: true,\n      roleId: \"\",\n    };\n  }\n\n  componentDidMount() {}\n  toggle = () => {\n    this.props.toggleModal();\n  };\n  handleOnchangeInput = (event, id) => {\n    let copystate = { ...this.state };\n    copystate[id] = event.target.value;\n    this.setState({\n      ...copystate,\n    });\n  };\n  checkValideInput = () => {\n    let valid = true;\n    let arrInput = [\n      \"email\",\n      \"password\",\n      \"firstname\",\n      \"lastname\",\n      \"address\",\n      \"phonenumber\",\n    ];\n    for (let i = 0; i < arrInput.length; i++) {\n      if (!this.state[arrInput[i]]) {\n        alert(\"Missing parameter: \" + arrInput[i]);\n        valid = false;\n        break;\n      }\n    }\n    return valid;\n  };\n  handleAddNewUser = () => {\n    let valide = this.checkValideInput();\n    if (valide === true) {\n      // this.props.createNewUser(this.state);\n      this.props.createNewUser(this.state);\n    }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <Modal\n          isOpen={this.props.isOpen}\n          toggle={() => {\n            this.toggle();\n          }}\n          className={\"lsakdfja\"}\n          size=\"lg\"\n        >\n          <ModalHeader\n            toggle={() => {\n              this.toggle();\n            }}\n          >\n            Create New User\n          </ModalHeader>\n          <ModalBody>\n            {/* <form action=\"put_userById\" method=\"POST\"> */}\n            <div className=\"form-group\">\n              <label for=\"inputAddress\">email</label>\n              <input\n                type=\"text\"\n                style={{ color: \"blueviolet;\" }}\n                className=\"form-control\"\n                name=\"email\"\n                value={this.state.email}\n                onChange={(event) => {\n                  this.handleOnchangeInput(event, \"email\");\n                }}\n              ></input>\n            </div>\n            <div className=\"form-group\">\n              <label for=\"inputAddress\">password</label>\n              <input\n                type=\"text\"\n                style={{ color: \"blueviolet;\" }}\n                className=\"form-control\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={(event) => {\n                  this.handleOnchangeInput(event, \"password\");\n                }}\n              ></input>\n            </div>\n\n            <div className=\"form-group\">\n              <label for=\"inputAddress\">Firstname</label>\n              <input\n                type=\"text\"\n                style={{ color: \"blueviolet;\" }}\n                className=\"form-control\"\n                name=\"firstname\"\n                value={this.state.firstname}\n                placeholder=\"fisrt name\"\n                onChange={(event) => {\n                  this.handleOnchangeInput(event, \"firstname\");\n                }}\n              ></input>\n            </div>\n\n            <div className=\"form-group\">\n              <label for=\"inputAddress2\">Lastname</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"lastname\"\n                style={{ color: \"blueviolet;\" }}\n                value={this.state.lastname}\n                placeholder=\"last name\"\n                onChange={(event) => {\n                  this.handleOnchangeInput(event, \"lastname\");\n                }}\n              ></input>\n            </div>\n            <div className=\"form-group\">\n              <label for=\"inputAddress2\">Address</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"address\"\n                style={{ color: \"blueviolet;\" }}\n                value={this.state.address}\n                placeholder=\"Can Tho St\"\n                onChange={(event) => {\n                  this.handleOnchangeInput(event, \"address\");\n                }}\n              ></input>\n            </div>\n\n            <Row form style={{ display: \"flex\" }}>\n              <Col md={6}>\n                <FormGroup>\n                  <label for=\"inputCity\">phonenumber</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"phonenumber\"\n                    style={{ color: \"blueviolet;\" }}\n                    value={this.state.phonenumber}\n                    onChange={(event) => {\n                      this.handleOnchangeInput(event, \"phonenumber\");\n                    }}\n                  ></input>\n                </FormGroup>\n              </Col>\n              <Col md={4}>\n                <FormGroup>\n                  <label for=\"inputState\">gender</label>\n                  <select\n                    class=\"form-select\"\n                    name=\"gander\"\n                    className=\"form-control\"\n                    style={{ color: \"blueviolet;\" }}\n                    value={this.state.gender}\n                    onChange={(event) => {\n                      this.handleOnchangeInput(event, \"gender\");\n                    }}\n                  >\n                    <option selected value=\"M\">\n                      malde\n                    </option>\n                    <option value=\"F\">fmalde</option>\n                  </select>\n                </FormGroup>\n              </Col>\n              <Col md={2}>\n                <FormGroup>\n                  <label for=\"inputZip\">Role</label>\n                  <select\n                    class=\"form-select\"\n                    name=\"roleId\"\n                    className=\"form-control\"\n                    style={{ color: \"blueviolet;\" }}\n                    value={this.state.roleId}\n                    onChange={(event) => {\n                      this.handleOnchangeInput(event, \"roleId\");\n                    }}\n                  >\n                    <option selected value=\"doctor\">\n                      doctor\n                    </option>\n                    <option value=\"patient\">patient</option>\n                  </select>\n                </FormGroup>\n              </Col>\n            </Row>\n\n            {/* /* <button type=\"submit\" className=\"btn btn-primary\">\n                Update\n            //   </button> */}\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              color=\"primary\"\n              onClick={() => {\n                this.handleAddNewUser();\n              }}\n            >\n              Add new user\n            </Button>{\" \"}\n            <Button\n              color=\"secondary\"\n              onClick={() => {\n                this.toggle();\n              }}\n            >\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(API_UserModel);\n","/home/dell/Documents/CLientReactJS/src/containers/System/API/API_UserModelUpdate.js",["422"],"import React, { Component, Fragment } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { connect } from \"react-redux\";\n// import { updateUserService } from \"../../services/userService\";\nimport _ from \"lodash\";\n\n// import { Button, Modal } from \"reactstrap\";\nimport {\n  FormGroup,\n  Row,\n  Col,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n} from \"reactstrap\";\nclass API_UserModel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: \"\",\n      email: \"\",\n      password: \"\",\n      firstname: \"\",\n      lastname: \"\",\n      address: \"\",\n      phonenumber: \"\",\n      gender: true,\n      roleId: \"\",\n    };\n  }\n\n  componentDidMount() {\n    let user = this.props.UserUpdate;\n\n    if (user && !_.isEmpty(user)) {\n      this.setState({\n        id: user.id,\n        email: user.email,\n        password: user.password,\n        firstname: user.firstName,\n        lastname: user.lastName,\n        address: user.address,\n        phonenumber: user.phonenumber,\n        gender: user.gender,\n        roleId: user.roleId,\n      });\n    }\n  }\n  toggle = () => {\n    this.props.toggleModal();\n  };\n  handleOnchangeInput = (event, id) => {\n    let copystate = { ...this.state };\n    copystate[id] = event.target.value;\n    this.setState({\n      ...copystate,\n    });\n  };\n  checkValideInput = () => {\n    let valid = true;\n    let arrInput = [\n      \"email\",\n      \"password\",\n      \"firstname\",\n      \"lastname\",\n      \"address\",\n      \"phonenumber\",\n    ];\n    for (let i = 0; i < arrInput.length; i++) {\n      if (!this.state[arrInput[i]]) {\n        alert(\"Missing parameter: \" + arrInput[i]);\n        valid = false;\n        break;\n      }\n    }\n    return valid;\n  };\n\n  handleUpdateUserModal = async () => {\n    try {\n      let valide = this.checkValideInput();\n      if (valide === true) {\n        // this.props.createNewUser(this.state);\n        this.props.updateOneUser(this.state);\n      }\n\n      // console.log(\"errovode: \", response.deleteuser.errcode);\n      // if (response && response.d.errcode !== 0) {\n      //     // alert(response.message);\n      //     alert(response.deleteuser.message);\n\n      // } else {\n      //     alert(\"delete user succesfull\")\n      //     await this.getAllUserService();\n      // }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <Modal\n          isOpen={this.props.isOpen}\n          toggle={() => {\n            this.toggle();\n          }}\n          className={\"lsakdfja\"}\n          size=\"lg\"\n        >\n          <ModalHeader\n            toggle={() => {\n              this.toggle();\n            }}\n          >\n            Create New User\n          </ModalHeader>\n          <ModalBody>\n            {/* <form action=\"put_userById\" method=\"POST\"> */}\n            <div className=\"form-group\">\n              <label for=\"inputAddress\">email</label>\n              <input\n                type=\"text\"\n                style={{ color: \"blueviolet;\" }}\n                className=\"form-control\"\n                name=\"email\"\n                value={this.state.email}\n                onChange={(event) => {\n                  this.handleOnchangeInput(event, \"email\");\n                }}\n              ></input>\n            </div>\n            <div className=\"form-group\">\n              <label for=\"inputAddress\">password</label>\n              <input\n                type=\"text\"\n                style={{ color: \"blueviolet;\" }}\n                className=\"form-control\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={(event) => {\n                  this.handleOnchangeInput(event, \"password\");\n                }}\n              ></input>\n            </div>\n\n            <div className=\"form-group\">\n              <label for=\"inputAddress\">Firstname</label>\n              <input\n                type=\"text\"\n                style={{ color: \"blueviolet;\" }}\n                className=\"form-control\"\n                name=\"firstname\"\n                value={this.state.firstname}\n                placeholder=\"fisrt name\"\n                onChange={(event) => {\n                  this.handleOnchangeInput(event, \"firstname\");\n                }}\n              ></input>\n            </div>\n\n            <div className=\"form-group\">\n              <label for=\"inputAddress2\">Lastname</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"lastname\"\n                style={{ color: \"blueviolet;\" }}\n                value={this.state.lastname}\n                placeholder=\"last name\"\n                onChange={(event) => {\n                  this.handleOnchangeInput(event, \"lastname\");\n                }}\n              ></input>\n            </div>\n            <div className=\"form-group\">\n              <label for=\"inputAddress2\">Address</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"address\"\n                style={{ color: \"blueviolet;\" }}\n                value={this.state.address}\n                placeholder=\"Can Tho St\"\n                onChange={(event) => {\n                  this.handleOnchangeInput(event, \"address\");\n                }}\n              ></input>\n            </div>\n\n            <Row form style={{ display: \"flex\" }}>\n              <Col md={6}>\n                <FormGroup>\n                  <label for=\"inputCity\">phonenumber</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"phonenumber\"\n                    style={{ color: \"blueviolet;\" }}\n                    value={this.state.phonenumber}\n                    onChange={(event) => {\n                      this.handleOnchangeInput(event, \"phonenumber\");\n                    }}\n                  ></input>\n                </FormGroup>\n              </Col>\n              <Col md={4}>\n                <FormGroup>\n                  <label for=\"inputState\">gender</label>\n                  <select\n                    class=\"form-select\"\n                    name=\"gander\"\n                    className=\"form-control\"\n                    style={{ color: \"blueviolet;\" }}\n                    value={this.state.gender}\n                    onChange={(event) => {\n                      this.handleOnchangeInput(event, \"gender\");\n                    }}\n                  >\n                    <option selected value=\"M\">\n                      malde\n                    </option>\n                    <option value=\"F\">fmalde</option>\n                  </select>\n                </FormGroup>\n              </Col>\n              <Col md={2}>\n                <FormGroup>\n                  <label for=\"inputZip\">Role</label>\n                  <select\n                    class=\"form-select\"\n                    name=\"roleId\"\n                    className=\"form-control\"\n                    style={{ color: \"blueviolet;\" }}\n                    value={this.state.roleId}\n                    onChange={(event) => {\n                      this.handleOnchangeInput(event, \"roleId\");\n                    }}\n                  >\n                    <option selected value=\"doctor\">\n                      doctor\n                    </option>\n                    <option value=\"patient\">patient</option>\n                  </select>\n                </FormGroup>\n              </Col>\n            </Row>\n\n            {/* /* <button type=\"submit\" className=\"btn btn-primary\">\n                Update\n            //   </button> */}\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              style={{ color: \"primary\" }}\n              onClick={() => {\n                this.handleUpdateUserModal();\n              }}\n            >\n              Update User\n            </Button>{\" \"}\n            <Button\n              style={{ color: \"secondary\" }}\n              onClick={() => {\n                this.toggle();\n              }}\n            >\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(API_UserModel);\n","/home/dell/Documents/CLientReactJS/src/containers/System/Reducer/UserReduxTable.js",["423","424","425","426","427","428","429","430","431"],"import React, { Component, Fragment } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../store/actions\";\nimport \"./UserReduxTable.scss\";\n\n// import { Button, Modal } from \"reactstrap\";\nimport {\n  FormGroup,\n  Row,\n  Col,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n} from \"reactstrap\";\nclass UserReduxTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n    };\n  }\n  componentDidMount() {\n    this.props.fetchAllUserStart();\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.alluser !== this.props.alluser) {\n      this.setState({\n        users: this.props.alluser,\n      });\n    }\n  }\n  handeleDelete = async (IdUser) => {\n    try {\n      await this.props.deleteUserStart(IdUser.item.id);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  handeleUpdate = async (IdUser) => {\n    try {\n      await this.props.fetchOneUserStart(IdUser.item.id);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  render() {\n    let Users = this.state.users;\n\n    return (\n      <Fragment>\n        <div className=\"text-center\">\n          <table className=\"table\">\n            <thead className=\"thead-dark\">\n              <tr className=\"table-danger\">\n                <th scope=\"col\">STT</th>\n                <th scope=\"col\">Email</th>\n                <th scope=\"col\">First name</th>\n                <th scope=\"col\">Last name</th>\n                <th scope=\"col\">Address</th>\n                <th scope=\"col\">Gender</th>\n                <th scope=\"col\">Role</th>\n                <th scope=\"col\">Position</th>\n                <th scope=\"col\">Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {Users &&\n                Users.length > 0 &&\n                Users.map((item, index) => {\n                  return (\n                    <tr>\n                      <th scope=\"row\">{index}</th>\n                      <td>{item.email}</td>\n                      <td>{item.firstName}</td>\n                      <td>{item.lastName}</td>\n                      <td>{item.address}</td>\n                      <td>{item.gender}</td>\n                      <td>{item.roleId}</td>\n                      <td>{item.positionId}</td>\n\n                      <td>\n                        <button\n                          onClick={() => {\n                            this.handeleUpdate({ item });\n                          }}\n                        >\n                          Edit\n                        </button>\n                        <button\n                          onClick={() => {\n                            this.handeleDelete({ item });\n                          }}\n                        >\n                          Delete\n                        </button>\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    alluser: state.admin.users,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchAllUserStart: () => {\n      dispatch(actions.fetchAllUserStart());\n    },\n    deleteUserStart: (idUser) => {\n      dispatch(actions.deleteUserStart(idUser));\n    },\n    fetchOneUserStart: (idUser) => {\n      dispatch(actions.fetchOneUserStart(idUser));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserReduxTable);\n","/home/dell/Documents/CLientReactJS/src/containers/System/Header/Header.js",[],"/home/dell/Documents/CLientReactJS/src/containers/System/Header/menuApp.js",[],"/home/dell/Documents/CLientReactJS/src/containers/Homepage/Center/DoctorModel.js",["432","433"],"import React, { Component, Fragment } from \"react\";\nimport \"./DoctorModel.scss\";\n\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\nimport * as actions from \"../../../store/actions\";\nimport { LANGUAGE } from \"../../../utils\";\nimport { chengeLanguageApp } from \"../../../store/actions\";\n\n// import { Button, Modal } from \"reactstrap\";\nimport { Button, Modal, ModalBody, ModalFooter } from \"reactstrap\";\n\nclass DoctorModel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      detailDoctor: [],\n    };\n  }\n  componentDidMount() {\n    this.setState({\n      detailDoctor: this.props.detailDoctor,\n    });\n  }\n  toggle = () => {\n    this.props.toggleModal();\n  };\n\n  render() {\n    let Doctor = this.state.detailDoctor;\n    const detailDoctor = Doctor.Detail ? Doctor.Detail.contentHTML : \"\";\n\n    return (\n      <Fragment>\n        <Modal\n          isOpen={this.props.isOpen}\n          detailDoctor={this.props.detailDoctor}\n          toggle={() => {\n            this.toggle();\n          }}\n          size=\"xl\"\n        >\n          <ModalBody>\n            <div className=\"information-doctor\">\n              <div className=\"avatar\">\n                <img src={Doctor.image} />\n              </div>\n              <div className=\"imformation\">\n                <div className=\"name-doctor\">\n                  <b>\n                    <FormattedMessage id=\"name-doctor\" />:\n                    {this.props.language === LANGUAGE.VI\n                      ? Doctor.firstName + Doctor.lastName\n                      : Doctor.lastName + Doctor.firstName}\n                  </b>\n                </div>\n                <div className=\"kill\"></div>\n                <div className=\"specalty\"></div>\n                <div\n                  className=\"desription-doctor\"\n                  dangerouslySetInnerHTML={{ __html: detailDoctor }}\n                ></div>\n                <div className=\"center\"></div>\n                <Button></Button>\n              </div>\n            </div>\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              color=\"primary\"\n              onClick={() => {\n                this.handleAddNewUser();\n              }}\n            >\n              Booking\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    language: state.app.language,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    changelanguageAppRedux: (language) => dispatch(chengeLanguageApp(language)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DoctorModel);\n","/home/dell/Documents/CLientReactJS/src/containers/System/Doctor/DoctorManage.js",["434","435"],"import React, { Component, Fragment } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { connect } from \"react-redux\";\nimport Select from \"react-select\";\nimport MarkdownIt from \"markdown-it\";\nimport MdEditor from \"react-markdown-editor-lite\";\nimport \"react-markdown-editor-lite/lib/index.css\";\nimport * as actions from \"../../../store/actions\";\nimport { LANGUAGE } from \"../../../utils\";\n\nconst mdParser = new MarkdownIt(/* Markdown-it options */);\n\n// Finish!\n\nclass DoctorMange extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedDoctor: null,\n      contentHTML: \"\",\n      contentMarkdown: \"\",\n      description: \"\",\n      listDoctors: [],\n    };\n  }\n  buildSelectDoctor = (inputData) => {\n    let result = [];\n    let language = this.props.language;\n    if (inputData && inputData.length > 0) {\n      inputData.map((item) => {\n        let doctor = {};\n        let labelVi = `${item.lastName} ${item.firstName}`;\n        let labelEn = `${item.firstName} ${item.lastName}`;\n        doctor.label = language === LANGUAGE.VI ? labelVi : labelEn;\n        doctor.value = item.id;\n        result.push(doctor);\n      });\n    }\n    return result;\n  };\n\n  componentDidMount() {\n    this.props.AllDoctorStart();\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.Alldoctor !== this.props.Alldoctor) {\n      let dataselect = this.buildSelectDoctor(this.props.Alldoctor);\n      this.setState({\n        listDoctors: dataselect,\n      });\n    }\n    if (prevProps.language !== this.props.language) {\n      let dataselect = this.buildSelectDoctor(this.props.Alldoctor);\n      this.setState({\n        listDoctors: dataselect,\n      });\n    }\n  }\n  handleEditorChange = ({ html, text }) => {\n    this.setState({\n      contentHTML: html,\n      contentMarkdown: text,\n    });\n  };\n  //select component\n\n  handleChange = (selectedDoctor) => {\n    this.setState({ selectedDoctor });\n  };\n  handleOnlickSubmit = () => {\n    let data = {\n      contentHTML: this.state.contentHTML,\n      contentMarkdown: this.state.contentMarkdown,\n      description: this.state.description,\n      doctorId: this.state.selectedDoctor.value,\n    };\n    this.props.saveInfoDoctorStart(data);\n  };\n  handleSearchDoctor = () => {\n    console.log(\"select: \", this.state.selectedDoctor.value);\n    this.props.fetchOneDoctorStart(this.state.selectedDoctor.value);\n    console.log(\"doctor:\", this.props.doctor);\n  };\n  render() {\n    const { selectedDoctor } = this.state;\n    return (\n      <Fragment>\n        <Select\n          value={selectedDoctor}\n          onChange={this.handleChange}\n          options={this.state.listDoctors}\n        />\n        <button\n          type=\"submit\"\n          value=\"search\"\n          onClick={() => {\n            this.handleSearchDoctor();\n          }}\n        >\n          Search\n        </button>\n\n        <MdEditor\n          style={{ height: \"500px\" }}\n          renderHTML={(text) => mdParser.render(text)}\n          onChange={this.handleEditorChange}\n        />\n        <button\n          type=\"submit\"\n          value=\"save\"\n          onClick={() => {\n            this.handleOnlickSubmit();\n          }}\n        >\n          save\n        </button>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    language: state.app.language,\n    Alldoctor: state.admin.Alldoctor,\n    doctor: state.admin.doctor,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    AllDoctorStart: () => {\n      dispatch(actions.AllDoctorStart());\n    },\n    saveInfoDoctorStart: (data) => {\n      dispatch(actions.saveInfoDoctorStart(data));\n    },\n    fetchOneDoctorStart: (idDoctor) => {\n      dispatch(actions.fetchOneDoctorStart(idDoctor));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DoctorMange);\n","/home/dell/Documents/CLientReactJS/src/services/index.js",[],"/home/dell/Documents/CLientReactJS/src/services/doctorService.js",[],{"ruleId":"436","replacedBy":"437"},{"ruleId":"438","replacedBy":"439"},{"ruleId":"440","severity":1,"message":"441","line":52,"column":17,"nodeType":"442","messageId":"443","endLine":52,"endColumn":25},{"ruleId":"440","severity":1,"message":"444","line":52,"column":27,"nodeType":"442","messageId":"443","endLine":52,"endColumn":35},{"ruleId":"440","severity":1,"message":"445","line":54,"column":36,"nodeType":"442","messageId":"443","endLine":54,"endColumn":50},{"ruleId":"436","replacedBy":"446"},{"ruleId":"438","replacedBy":"447"},{"ruleId":"448","severity":1,"message":"449","line":28,"column":1,"nodeType":"450","endLine":34,"endColumn":6},{"ruleId":"440","severity":1,"message":"451","line":2,"column":13,"nodeType":"442","messageId":"443","endLine":2,"endColumn":24},{"ruleId":"436","replacedBy":"452"},{"ruleId":"438","replacedBy":"453"},{"ruleId":"440","severity":1,"message":"454","line":2,"column":10,"nodeType":"442","messageId":"443","endLine":2,"endColumn":26},{"ruleId":"440","severity":1,"message":"454","line":2,"column":10,"nodeType":"442","messageId":"443","endLine":2,"endColumn":26},{"ruleId":"440","severity":1,"message":"454","line":2,"column":10,"nodeType":"442","messageId":"443","endLine":2,"endColumn":26},{"ruleId":"455","severity":1,"message":"456","line":6,"column":5,"nodeType":"457","messageId":"458","endLine":9,"endColumn":6},{"ruleId":"440","severity":1,"message":"459","line":2,"column":8,"nodeType":"442","messageId":"443","endLine":2,"endColumn":9},{"ruleId":"440","severity":1,"message":"460","line":13,"column":13,"nodeType":"442","messageId":"443","endLine":13,"endColumn":17},{"ruleId":"448","severity":1,"message":"461","line":1,"column":1,"nodeType":"450","endLine":13,"endColumn":3},{"ruleId":"440","severity":1,"message":"462","line":6,"column":10,"nodeType":"442","messageId":"443","endLine":6,"endColumn":16},{"ruleId":"463","severity":1,"message":"464","line":38,"column":32,"nodeType":"465","messageId":"466","endLine":38,"endColumn":34},{"ruleId":"463","severity":1,"message":"467","line":43,"column":32,"nodeType":"465","messageId":"466","endLine":43,"endColumn":34},{"ruleId":"436","replacedBy":"468"},{"ruleId":"438","replacedBy":"469"},{"ruleId":"440","severity":1,"message":"470","line":17,"column":8,"nodeType":"442","messageId":"443","endLine":17,"endColumn":14},{"ruleId":"440","severity":1,"message":"471","line":22,"column":8,"nodeType":"442","messageId":"443","endLine":22,"endColumn":30},{"ruleId":"440","severity":1,"message":"462","line":6,"column":10,"nodeType":"442","messageId":"443","endLine":6,"endColumn":16},{"ruleId":"463","severity":1,"message":"464","line":38,"column":32,"nodeType":"465","messageId":"466","endLine":38,"endColumn":34},{"ruleId":"463","severity":1,"message":"467","line":43,"column":32,"nodeType":"465","messageId":"466","endLine":43,"endColumn":34},{"ruleId":"440","severity":1,"message":"472","line":12,"column":8,"nodeType":"442","messageId":"443","endLine":12,"endColumn":24},{"ruleId":"440","severity":1,"message":"473","line":16,"column":13,"nodeType":"442","messageId":"443","endLine":16,"endColumn":27},{"ruleId":"436","replacedBy":"474"},{"ruleId":"438","replacedBy":"475"},{"ruleId":"448","severity":1,"message":"449","line":35,"column":1,"nodeType":"450","endLine":42,"endColumn":6},{"ruleId":"463","severity":1,"message":"467","line":74,"column":40,"nodeType":"465","messageId":"466","endLine":74,"endColumn":42},{"ruleId":"440","severity":1,"message":"454","line":2,"column":10,"nodeType":"442","messageId":"443","endLine":2,"endColumn":26},{"ruleId":"440","severity":1,"message":"454","line":2,"column":10,"nodeType":"442","messageId":"443","endLine":2,"endColumn":26},{"ruleId":"455","severity":1,"message":"456","line":6,"column":5,"nodeType":"457","messageId":"458","endLine":9,"endColumn":6},{"ruleId":"436","replacedBy":"476"},{"ruleId":"438","replacedBy":"477"},{"ruleId":"440","severity":1,"message":"459","line":2,"column":8,"nodeType":"442","messageId":"443","endLine":2,"endColumn":9},{"ruleId":"440","severity":1,"message":"460","line":13,"column":13,"nodeType":"442","messageId":"443","endLine":13,"endColumn":17},{"ruleId":"440","severity":1,"message":"478","line":1,"column":28,"nodeType":"442","messageId":"443","endLine":1,"endColumn":36},{"ruleId":"455","severity":1,"message":"456","line":8,"column":5,"nodeType":"457","messageId":"458","endLine":10,"endColumn":6},{"ruleId":"479","severity":1,"message":"480","line":16,"column":17,"nodeType":"481","messageId":"482","endLine":16,"endColumn":32},{"ruleId":"483","severity":1,"message":"484","line":51,"column":13,"nodeType":"481","endLine":51,"endColumn":45},{"ruleId":"483","severity":1,"message":"484","line":62,"column":15,"nodeType":"481","endLine":62,"endColumn":27},{"ruleId":"483","severity":1,"message":"484","line":69,"column":15,"nodeType":"481","endLine":69,"endColumn":27},{"ruleId":"483","severity":1,"message":"484","line":77,"column":15,"nodeType":"481","endLine":77,"endColumn":27},{"ruleId":"483","severity":1,"message":"484","line":83,"column":15,"nodeType":"481","endLine":83,"endColumn":27},{"ruleId":"485","severity":1,"message":"486","line":31,"column":13,"nodeType":"481","endLine":31,"endColumn":151},{"ruleId":"485","severity":1,"message":"486","line":100,"column":21,"nodeType":"481","endLine":105,"endColumn":23},{"ruleId":"440","severity":1,"message":"454","line":2,"column":10,"nodeType":"442","messageId":"443","endLine":2,"endColumn":26},{"ruleId":"479","severity":1,"message":"487","line":113,"column":11,"nodeType":"481","messageId":"482","endLine":117,"endColumn":13},{"ruleId":"479","severity":1,"message":"488","line":119,"column":13,"nodeType":"481","messageId":"482","endLine":125,"endColumn":15},{"ruleId":"485","severity":1,"message":"486","line":278,"column":19,"nodeType":"481","endLine":278,"endColumn":48},{"ruleId":"440","severity":1,"message":"454","line":2,"column":10,"nodeType":"442","messageId":"443","endLine":2,"endColumn":26},{"ruleId":"440","severity":1,"message":"454","line":2,"column":10,"nodeType":"442","messageId":"443","endLine":2,"endColumn":26},{"ruleId":"440","severity":1,"message":"454","line":2,"column":10,"nodeType":"442","messageId":"443","endLine":2,"endColumn":26},{"ruleId":"440","severity":1,"message":"489","line":9,"column":3,"nodeType":"442","messageId":"443","endLine":9,"endColumn":12},{"ruleId":"440","severity":1,"message":"490","line":10,"column":3,"nodeType":"442","messageId":"443","endLine":10,"endColumn":6},{"ruleId":"440","severity":1,"message":"491","line":11,"column":3,"nodeType":"442","messageId":"443","endLine":11,"endColumn":6},{"ruleId":"440","severity":1,"message":"492","line":12,"column":3,"nodeType":"442","messageId":"443","endLine":12,"endColumn":9},{"ruleId":"440","severity":1,"message":"493","line":13,"column":3,"nodeType":"442","messageId":"443","endLine":13,"endColumn":8},{"ruleId":"440","severity":1,"message":"494","line":14,"column":3,"nodeType":"442","messageId":"443","endLine":14,"endColumn":14},{"ruleId":"440","severity":1,"message":"495","line":15,"column":3,"nodeType":"442","messageId":"443","endLine":15,"endColumn":12},{"ruleId":"440","severity":1,"message":"496","line":16,"column":3,"nodeType":"442","messageId":"443","endLine":16,"endColumn":14},{"ruleId":"440","severity":1,"message":"497","line":6,"column":13,"nodeType":"442","messageId":"443","endLine":6,"endColumn":20},{"ruleId":"485","severity":1,"message":"486","line":46,"column":17,"nodeType":"481","endLine":46,"endColumn":43},{"ruleId":"440","severity":1,"message":"454","line":2,"column":10,"nodeType":"442","messageId":"443","endLine":2,"endColumn":26},{"ruleId":"498","severity":1,"message":"499","line":30,"column":28,"nodeType":"500","messageId":"501","endLine":30,"endColumn":30},"no-native-reassign",["502"],"no-negated-in-lhs",["503"],"no-unused-vars","'username' is assigned a value but never used.","Identifier","unusedVar","'password' is assigned a value but never used.","'adminLoginFail' is assigned a value but never used.",["502"],["503"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'queryString' is defined but never used.",["502"],["503"],"'FormattedMessage' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'_' is defined but never used.","'data' is assigned a value but never used.","Assign object to a variable before exporting as module default","'divide' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.",["502"],["503"],"'Header' is defined but never used.","'CustomToastCloseButton' is defined but never used.","'CustomScrollbars' is defined but never used.","'systemMenuPath' is assigned a value but never used.",["502"],["503"],["502"],["503"],"'Fragment' is defined but never used.","react/jsx-pascal-case","Imported JSX component Home_header must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","Imported JSX component API_UserModel must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component API_UserModelUpdate must be in PascalCase or SCREAMING_SNAKE_CASE","'FormGroup' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'actions' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]