{"ast":null,"code":"import axios from \"axios\";\nimport _ from \"lodash\"; // import config from './config';\n\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_URL // withCredentials: true,\n\n});\ninstance.interceptors.response.use( // Thrown error for request with OK status code\nresponse => {\n  const {\n    data\n  } = response;\n  return response.data;\n});\nexport default instance; // const createError = (\n//   httpStatusCode,\n//   statusCode,\n//   errorMessage,\n//   problems,\n//   errorCode = \"\"\n// ) => {\n//   const error = new Error();\n//   error.httpStatusCode = httpStatusCode;\n//   error.statusCode = statusCode;\n//   error.errorMessage = errorMessage;\n//   error.problems = problems;\n//   error.errorCode = errorCode + \"\";\n//   return error;\n// };\n// export const isSuccessStatusCode = (s) => {\n//   // May be string or number\n//   const statusType = typeof s;\n//   return (\n//     (statusType === \"number\" && s === 0) ||\n//     (statusType === \"string\" && s.toUpperCase() === \"OK\")\n//   );\n// };\n//     if (\n//       data.hasOwnProperty(\"s\") &&\n//       !isSuccessStatusCode(data[\"s\"]) &&\n//       data.hasOwnProperty(\"errmsg\")\n//     ) {\n//       return Promise.reject(\n//         createError(\n//           response.status,\n//           data[\"s\"],\n//           data[\"errmsg\"],\n//           null,\n//           data[\"errcode\"] ? data[\"errcode\"] : \"\"\n//         )\n//       );\n//     }\n//     // Return direct data to callnback\n//     if (data.hasOwnProperty(\"s\") && data.hasOwnProperty(\"d\")) {\n//       return data[\"d\"];\n//     }\n//     // Handle special case\n//     if (data.hasOwnProperty(\"s\") && _.keys(data).length === 1) {\n//       return null;\n//     }\n//     return response.data;\n//   },\n//   (error) => {\n//     const { response } = error;\n//     if (response == null) {\n//       return Promise.reject(error);\n//     }\n//     const { data } = response;\n//     if (data.hasOwnProperty(\"s\") && data.hasOwnProperty(\"errmsg\")) {\n//       return Promise.reject(\n//         createError(response.status, data[\"s\"], data[\"errmsg\"])\n//       );\n//     }\n//     if (data.hasOwnProperty(\"code\") && data.hasOwnProperty(\"message\")) {\n//       return Promise.reject(\n//         createError(\n//           response.status,\n//           data[\"code\"],\n//           data[\"message\"],\n//           data[\"problems\"]\n//         )\n//       );\n//     }\n//     return Promise.reject(createError(response.status));\n//   }\n// );","map":{"version":3,"sources":["/home/dell/Documents/ReactJS/src/axios.js"],"names":["axios","_","instance","create","baseURL","process","env","REACT_APP_BACKEND_URL","interceptors","response","use","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd,C,CACA;;AAEA,MAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC5BC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,qBADO,CAE5B;;AAF4B,CAAb,CAAjB;AAKAL,QAAQ,CAACM,YAAT,CAAsBC,QAAtB,CAA+BC,GAA/B,EACE;AACCD,QAAD,IAAc;AACZ,QAAM;AAAEE,IAAAA;AAAF,MAAWF,QAAjB;AACA,SAAOA,QAAQ,CAACE,IAAhB;AACD,CALH;AAQA,eAAeT,QAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import axios from \"axios\";\nimport _ from \"lodash\";\n// import config from './config';\n\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_URL,\n  // withCredentials: true,\n});\n\ninstance.interceptors.response.use(\n  // Thrown error for request with OK status code\n  (response) => {\n    const { data } = response;\n    return response.data;\n  }\n);\n\nexport default instance;\n// const createError = (\n//   httpStatusCode,\n//   statusCode,\n//   errorMessage,\n//   problems,\n//   errorCode = \"\"\n// ) => {\n//   const error = new Error();\n//   error.httpStatusCode = httpStatusCode;\n//   error.statusCode = statusCode;\n//   error.errorMessage = errorMessage;\n//   error.problems = problems;\n//   error.errorCode = errorCode + \"\";\n//   return error;\n// };\n\n// export const isSuccessStatusCode = (s) => {\n//   // May be string or number\n//   const statusType = typeof s;\n//   return (\n//     (statusType === \"number\" && s === 0) ||\n//     (statusType === \"string\" && s.toUpperCase() === \"OK\")\n//   );\n// };\n//     if (\n//       data.hasOwnProperty(\"s\") &&\n//       !isSuccessStatusCode(data[\"s\"]) &&\n//       data.hasOwnProperty(\"errmsg\")\n//     ) {\n//       return Promise.reject(\n//         createError(\n//           response.status,\n//           data[\"s\"],\n//           data[\"errmsg\"],\n//           null,\n//           data[\"errcode\"] ? data[\"errcode\"] : \"\"\n//         )\n//       );\n//     }\n\n//     // Return direct data to callnback\n//     if (data.hasOwnProperty(\"s\") && data.hasOwnProperty(\"d\")) {\n//       return data[\"d\"];\n//     }\n//     // Handle special case\n//     if (data.hasOwnProperty(\"s\") && _.keys(data).length === 1) {\n//       return null;\n//     }\n//     return response.data;\n//   },\n//   (error) => {\n//     const { response } = error;\n//     if (response == null) {\n//       return Promise.reject(error);\n//     }\n\n//     const { data } = response;\n\n//     if (data.hasOwnProperty(\"s\") && data.hasOwnProperty(\"errmsg\")) {\n//       return Promise.reject(\n//         createError(response.status, data[\"s\"], data[\"errmsg\"])\n//       );\n//     }\n\n//     if (data.hasOwnProperty(\"code\") && data.hasOwnProperty(\"message\")) {\n//       return Promise.reject(\n//         createError(\n//           response.status,\n//           data[\"code\"],\n//           data[\"message\"],\n//           data[\"problems\"]\n//         )\n//       );\n//     }\n\n//     return Promise.reject(createError(response.status));\n//   }\n// );\n"]},"metadata":{},"sourceType":"module"}